{"version":3,"sources":["../node_modules/matter-js/build/matter.js","../src/lib/dom.ts","../src/lib/template.ts","../src/lib/modify-template.ts","../src/lib/directive.ts","../src/lib/part.ts","../src/lib/template-instance.ts","../src/lib/template-result.ts","../src/lib/parts.ts","../src/lib/template-factory.ts","../src/lib/render.ts","../src/lib/default-template-processor.ts","src/lit-html.ts","../src/lib/shady-render.ts","../src/lib/updating-element.ts","../src/lib/decorators.ts","../src/lib/css-tag.ts","src/lit-element.ts","../node_modules/@wokwi/elements/dist/esm/led-element.js","../node_modules/@wokwi/elements/dist/esm/pushbutton-element.js","../node_modules/@wokwi/elements/dist/esm/resistor-element.js","../node_modules/@wokwi/elements/dist/esm/7segment-element.js","../node_modules/@wokwi/elements/dist/esm/lcd1602-font-a00.js","../node_modules/@wokwi/elements/dist/esm/lcd1602-element.js","../node_modules/@wokwi/elements/dist/esm/lcd1602-font-a02.js","../node_modules/@wokwi/elements/dist/esm/neopixel-element.js","../node_modules/@wokwi/elements/dist/esm/index.js","compile.ts","../node_modules/avr8js/dist/esm/cpu/cpu.js","../node_modules/avr8js/dist/esm/cpu/instruction.js","../node_modules/avr8js/dist/esm/cpu/interrupt.js","../node_modules/avr8js/dist/esm/peripherals/timer.js","../node_modules/avr8js/dist/esm/peripherals/gpio.js","../node_modules/avr8js/dist/esm/peripherals/usart.js","../node_modules/avr8js/dist/esm/peripherals/twi.js","../node_modules/avr8js/dist/esm/index.js","intelhex.ts","task-scheduler.ts","execute.ts","format-time.ts","cpu-performance.ts","utils/editor-history.util.ts","index.ts","raycast_es6.ts","RobotEnvironment.ts","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","lightColors","red","green","blue","yellow","orange","white","LEDElement","LitElement","constructor","value","brightness","color","lightColor","label","styles","render","lightColorActual","opacity","lightOn","Number","EPSILON","prototype","SPACE_KEY","PushbuttonElement","pressed","down","up","e","keyCode","dispatchEvent","Event","bandColors","ResistorElement","breakValue","exponent","base","Math","round","numValue","parseFloat","band1Color","floor","band2Color","band3Color","SevenSegmentElement","values","fill","index","type","Array","fontA00","Uint8Array","ROWS","COLS","charXSpacing","charYSpacing","backgroundColors","LCD1602Element","background","characters","font","cursor","blink","cursorX","cursorY","backlight","path","xSpacing","ySpacing","result","charX","charY","py","row","px","x","toFixed","y","push","join","renderCursor","xOffset","yOffset","darken","actualBgColor","fontA02","NeoPixelElement","g","b","spotOpacity","maxOpacity","max","minOpacity","min","opacityDelta","multiplier","glowBase","glowColor","glowOpacity","cssVal","cssColor","bkgWhite","registerSpace","CPU","progMem","sramBytes","data","data16","Uint16Array","buffer","dataView","DataView","progBytes","writeHooks","pc22Bits","pc","cycles","reset","SP","addr","hook","getUint16","setUint16","SREG","isTwoWordInstruction","opcode","avrInstruction","cpu","sum","R","sreg","k","ret","sp","A","readData","writeData","val1","val2","arg1","arg2","nextOpcode","skipSize","retAddr","eind","rampz","v1","v2","getInt8","setInt16","clear","set","z","r2","d2","a","l","avrInterrupt","timer01Dividers","TOV","OCFA","OCFB","TOIE","OCIEA","OCIEB","timer0Config","bits","captureInterrupt","compAInterrupt","compBInterrupt","ovfInterrupt","TIFR","OCRA","OCRB","ICR","TCNT","TCCRA","TCCRB","TCCRC","TIMSK","dividers","timer1Config","timer2Config","TimerMode","TOVUpdateMode","OCRUpdateMode","TopOCRA","TopICR","wgmModes8Bit","Normal","Immediate","Max","PWMPhaseCorrect","Top","Bottom","CTC","FastPWM","Reserved","wgmModes16Bit","PWMPhaseFrequencyCorrect","AVRTimer","config","lastCycle","ocrA","ocrB","updateWGMConfig","registerHook","timerUpdated","address","wgmModes","WGM","timerMode","topValue","divider","CS","delta","counterDelta","val","newVal","TOP","interruptsEnabled","mask","portAConfig","PIN","DDR","PORT","portBConfig","portCConfig","portDConfig","portEConfig","portFConfig","portGConfig","portHConfig","portJConfig","portKConfig","portLConfig","PinState","AVRIOPort","portConfig","listeners","oldValue","portValue","writeGpio","ddrMask","oldPortValue","listener","filter","ddr","port","bitMask","High","Low","InputPullUp","Input","usart0Config","rxCompleteInterrupt","dataRegisterEmptyInterrupt","txCompleteInterrupt","UCSRA","UCSRB","UCSRC","UBRRL","UBRRH","UDR","UCSRA_RXC","UCSRA_TXC","UCSRA_UDRE","UCSRA_FE","UCSRA_DOR","UCSRA_UPE","UCSRA_U2X","UCSRA_MPCM","UCSRB_RXCIE","UCSRB_TXCIE","UCSRB_UDRIE","UCSRB_RXEN","UCSRB_TXEN","UCSRB_UCSZ2","UCSRB_RXB8","UCSRB_TXB8","UCSRC_UMSEL1","UCSRC_UMSEL0","UCSRC_UPM1","UCSRC_UPM0","UCSRC_USBS","UCSRC_UCSZ1","UCSRC_UCSZ0","UCSRC_UCPOL","AVRUSART","freqMHz","onByteTransmit","onLineTransmit","lineBuffer","ch","String","fromCharCode","ucsra","ucsrb","UBRR","ucsz","TWCR_TWINT","TWCR_TWEA","TWCR_TWSTA","TWCR_TWSTO","TWCR_TWWC","TWCR_TWEN","TWCR_TWIE","TWSR_TWS_MASK","TWSR_TWPS1","TWSR_TWPS0","TWSR_TWPS_MASK","TWAR_TWA_MASK","TWAR_TWGCE","STATUS_BUS_ERROR","STATUS_TWI_IDLE","STATUS_START","STATUS_REPEATED_START","STATUS_SLAW_ACK","STATUS_SLAW_NACK","STATUS_DATA_SENT_ACK","STATUS_DATA_SENT_NACK","STATUS_DATA_LOST_ARBITRATION","STATUS_SLAR_ACK","STATUS_SLAR_NACK","STATUS_DATA_RECEIVED_ACK","STATUS_DATA_RECEIVED_NACK","twiConfig","twiInterrupt","TWBR","TWSR","TWAR","TWDR","TWCR","TWAMR","NoopTWIEventHandler","twi","completeStart","completeStop","completeConnect","completeWrite","completeRead","AVRTWI","eventHandler","nextTick","updateStatus","clearInt","status","twdrValue","start","stop","connectToSlave","writeByte","ack","readByte","Error","prescaler","bundleURL","getBundleURLCached","getBundleURL","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","document","querySelectorAll","module"],"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","file":"RobotEnvironment.3b666e42.map","sourceRoot":"../src","sourcesContent":["/**\n* matter-js 0.14.2 by @liabru 2018-06-11\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Render = _dereq_('../render/Render');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 0\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                delete part._original;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = _dereq_('../core/Events');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Body = _dereq_('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"./Body\":1}],3:[function(_dereq_,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = _dereq_('./Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.add\n     * @method add\n     * @param {world} world\n     * @param {} object\n     * @return {composite} The original world with the objects added\n     */\n\n    /**\n     * An alias for Composite.remove\n     * @method remove\n     * @param {world} world\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original world with the objects removed\n     */\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.addComposite\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(_dereq_,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = _dereq_('./SAT');\nvar Pair = _dereq_('./Pair');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = _dereq_('./Pair');\nvar Detector = _dereq_('./Detector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = _dereq_('./Contact');\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = _dereq_('./Pair');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar SAT = _dereq_('./SAT');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Bodies = _dereq_('../factory/Bodies');\nvar Vertices = _dereq_('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                                    Vector.add(bodyA.positionImpulse, \n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Mouse = _dereq_('../core/Mouse');\nvar Events = _dereq_('../core/Events');\nvar Detector = _dereq_('../collision/Detector');\nvar Constraint = _dereq_('./Constraint');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n(function (global){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Used to require external libraries outside of the bundle.\n     * It first looks for the `globalName` on the environment's global namespace.\n     * If the global is not found, it will fall back to using the standard `require` using the `moduleName`.\n     * @private\n     * @method _requireGlobal\n     * @param {string} globalName The global module name\n     * @param {string} moduleName The fallback CommonJS module name\n     * @return {} The loaded module\n     */\n    Common._requireGlobal = function(globalName, moduleName) {\n        var obj = (typeof window !== 'undefined' ? window[globalName] : typeof global !== 'undefined' ? global[globalName] : null);\n        return obj || _dereq_(moduleName);\n    };\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],15:[function(_dereq_,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = _dereq_('../body/World');\nvar Sleeping = _dereq_('./Sleeping');\nvar Resolver = _dereq_('../collision/Resolver');\nvar Render = _dereq_('../render/Render');\nvar Pairs = _dereq_('../collision/Pairs');\nvar Metrics = _dereq_('./Metrics');\nvar Grid = _dereq_('../collision/Grid');\nvar Events = _dereq_('./Events');\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('./Common');\nvar Body = _dereq_('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = _dereq_('./Plugin');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version = '0.14.2';\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var identifiers = range.split('-');\n        range = identifiers[0];\n\n        var isRange = isNaN(Number(range[0])),\n            version = isRange ? range.substr(1) : range,\n            parts = Common.map(version.split('.'), function(part) {\n                return Number(part);\n            });\n\n        return {\n            isRange: isRange,\n            version: version,\n            range: range,\n            operator: isRange ? range[0] : '',\n            parts: parts,\n            prerelease: identifiers[1],\n            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var rangeParsed = Plugin.versionParse(range),\n            rangeParts = rangeParsed.parts,\n            versionParsed = Plugin.versionParse(version),\n            versionParts = versionParsed.parts;\n\n        if (rangeParsed.isRange) {\n            if (rangeParsed.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (rangeParsed.operator === '~') {\n                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n            }\n\n            if (rangeParsed.operator === '^') {\n                if (rangeParts[0] > 0) {\n                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n                }\n\n                if (rangeParts[1] > 0) {\n                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n                }\n\n                return versionParts[2] === rangeParts[2];\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = _dereq_('./Events');\nvar Engine = _dereq_('./Engine');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // @deprecated\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = _dereq_('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Vector = _dereq_('../geometry/Vector');\nvar decomp;\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        if (!decomp) {\n            decomp = Common._requireGlobal('decomp', 'poly-decomp');\n        }\n\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bodies = _dereq_('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n},{}],27:[function(_dereq_,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../core/Common\":14,\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n},{}],29:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\nvar Matter = module.exports = _dereq_('../core/Matter');\n\nMatter.Body = _dereq_('../body/Body');\nMatter.Composite = _dereq_('../body/Composite');\nMatter.World = _dereq_('../body/World');\n\nMatter.Contact = _dereq_('../collision/Contact');\nMatter.Detector = _dereq_('../collision/Detector');\nMatter.Grid = _dereq_('../collision/Grid');\nMatter.Pairs = _dereq_('../collision/Pairs');\nMatter.Pair = _dereq_('../collision/Pair');\nMatter.Query = _dereq_('../collision/Query');\nMatter.Resolver = _dereq_('../collision/Resolver');\nMatter.SAT = _dereq_('../collision/SAT');\n\nMatter.Constraint = _dereq_('../constraint/Constraint');\nMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\nMatter.Common = _dereq_('../core/Common');\nMatter.Engine = _dereq_('../core/Engine');\nMatter.Events = _dereq_('../core/Events');\nMatter.Mouse = _dereq_('../core/Mouse');\nMatter.Runner = _dereq_('../core/Runner');\nMatter.Sleeping = _dereq_('../core/Sleeping');\nMatter.Plugin = _dereq_('../core/Plugin');\n\n\nMatter.Bodies = _dereq_('../factory/Bodies');\nMatter.Composites = _dereq_('../factory/Composites');\n\nMatter.Axes = _dereq_('../geometry/Axes');\nMatter.Bounds = _dereq_('../geometry/Bounds');\nMatter.Svg = _dereq_('../geometry/Svg');\nMatter.Vector = _dereq_('../geometry/Vector');\nMatter.Vertices = _dereq_('../geometry/Vertices');\n\nMatter.Render = _dereq_('../render/Render');\nMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = _dereq_('../core/Common');\nvar Composite = _dereq_('../body/Composite');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Events = _dereq_('../core/Events');\nvar Grid = _dereq_('../collision/Grid');\nvar Vector = _dereq_('../geometry/Vector');\nvar Mouse = _dereq_('../core/Mouse');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                    grid.bucketWidth,\n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Events = _dereq_('../core/Events');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n});\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node'; index: number;\n}|{\n  readonly type: 'attribute';\n  index: number;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    // eslint-disable-next-line no-control-regex\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module shady-render\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: readonly unknown[]) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari does not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: readonly unknown[];\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: readonly unknown[], type: string,\n      processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment position.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    if (this.startNode.parentNode === null) {\n      return;\n    }\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: readonly string[];\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: readonly string[]) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n  try {\n    const options = {\n      get capture() {\n        eventOptionsSupported = true;\n        return false;\n      }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.addEventListener('test', options as any, options);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.removeEventListener('test', options as any, options);\n  } catch (_e) {\n    // event options not supported\n  }\n})();\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behavior, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport interface TemplateCache {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>;\n  readonly keyString: Map<string, Template>;\n}\n\nexport const templateCaches = new Map<string, TemplateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n  (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.2.1');\n}\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {removeNodes} from './dom.js';\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected. ` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n          keyString: new Map<string, Template>()\n        };\n        templateCaches.set(cacheKey, templateCache);\n      }\n\n      let template = templateCache.stringsArray.get(result.strings);\n      if (template !== undefined) {\n        return template;\n      }\n\n      const key = result.strings.join(marker);\n      template = templateCache.keyString.get(key);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS!.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n      }\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    };\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.keyString.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (scopeName: string, renderedDOM: DocumentFragment, template?: Template) => {\n      shadyRenderSet.add(scopeName);\n      // If `renderedDOM` is stamped from a Template, then we need to edit that\n      // Template's underlying template element. Otherwise, we create one here\n      // to give to ShadyCSS, which still requires one while scoping.\n      const templateElement =\n          !!template ? template.element : document.createElement('template');\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      const {length} = styles;\n      // If there are no styles, skip unnecessary work\n      if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      const content = templateElement.content;\n      if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n      } else {\n        content.insertBefore(condensedStyle, content.firstChild);\n      }\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n      const style = content.querySelector('style');\n      if (window.ShadyCSS!.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set<Node>();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment|ShadowRoot,\n     options: ShadyRenderOptions) => {\n      if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n      }\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      const needsScoping = compatibleShadyCSSVersion &&\n          container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n          !!(container as ShadowRoot).host;\n      // Handle first render to a scope specially...\n      const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n      // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n      const renderContainer =\n          firstScopeRender ? document.createDocumentFragment() : container;\n      litRender(\n          result,\n          renderContainer,\n          {templateFactory: shadyTemplateFactory(scopeName), ...options} as\n              RenderOptions);\n      // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n      if (firstScopeRender) {\n        const part = parts.get(renderContainer)!;\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(\n            scopeName, renderContainer as DocumentFragment, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n      }\n      // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSS.styleElement`\n      // for dynamic changes.\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS!.styleElement((container as ShadowRoot).host);\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    <P extends PropertyKey>(prop: P, _obj: unknown): P => prop;\n\ndeclare global {\n  var JSCompiler_renameProperty: <P extends PropertyKey>(\n      prop: P, _obj: unknown) => P;\n\n  interface Window {\n    JSCompiler_renameProperty: typeof JSCompiler_renameProperty;\n  }\n}\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string|null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n    ComplexAttributeConverter<Type>|\n    ((value: string|null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean|string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * Map of changed properties with old values. Takes an optional generic\n * interface corresponding to the declared element properties.\n */\n// tslint:disable-next-line:no-any\nexport type PropertyValues<T = any> =\n    keyof T extends PropertyKey ? Map<keyof T, unknown>: never;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n    return value;\n  },\n\n  fromAttribute(value: string|null, type?: unknown) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n      case Number:\n        return value === null ? null : Number(value);\n      case Object:\n      case Array:\n        return JSON.parse(value!);\n    }\n    return value;\n  }\n\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING_TO_ATTRIBUTE|\n    typeof STATE_IS_REFLECTING_TO_PROPERTY;\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport abstract class UpdatingElement extends HTMLElement {\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   */\n  private static _attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static[finalized] = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   */\n  private static _classProperties?: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring the property.\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this._classProperties!.forEach((v, p) => {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Ensures the private `_classProperties` property metadata is created.\n   * In addition to `finalize` this is also called in `createProperty` to\n   * ensure the `@property` decorator can add property metadata.\n   */\n  /** @nocollapse */\n  private static _ensureClassProperties() {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty(\n            JSCompiler_renameProperty('_classProperties', this))) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties: PropertyDeclarationMap =\n          Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach(\n            (v: PropertyDeclaration, k: PropertyKey) =>\n                this._classProperties!.set(k, v));\n      }\n    }\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a PropertyDeclaration for the property with the given options.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   *\n   * @nocollapse\n   */\n  static createProperty(\n      name: PropertyKey,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure storage exists for property\n    // metadata.\n    this._ensureClassProperties();\n    this._classProperties!.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    const descriptor = this.getPropertyDescriptor(name, key, options);\n    if (descriptor !== undefined) {\n      Object.defineProperty(this.prototype, name, descriptor);\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   *   class MyElement extends LitElement {\n   *     static getPropertyDescriptor(name, key, options) {\n   *       const defaultDescriptor =\n   *           super.getPropertyDescriptor(name, key, options);\n   *       const setter = defaultDescriptor.set;\n   *       return {\n   *         get: defaultDescriptor.get,\n   *         set(value) {\n   *           setter.call(this, value);\n   *           // custom action.\n   *         },\n   *         configurable: true,\n   *         enumerable: true\n   *       }\n   *     }\n   *   }\n   *\n   * @nocollapse\n   */\n  protected static getPropertyDescriptor(\n      name: PropertyKey, key: string|symbol, _options: PropertyDeclaration) {\n    return {\n      // tslint:disable-next-line:no-any no symbol in index\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: UpdatingElement, value: unknown) {\n        const oldValue =\n            (this as {} as {[key: string]: unknown})[name as string];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as UpdatingElement)._requestUpdate(name, oldValue);\n      },\n      configurable: true,\n      enumerable: true\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a PropertyDeclaration via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override `createProperty`.\n   *\n   * @nocollapse\n   * @final\n   */\n  protected static getPropertyOptions(name: PropertyKey) {\n    return this._classProperties && this._classProperties.get(name) ||\n        defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (!superCtor.hasOwnProperty(finalized)) {\n      superCtor.finalize();\n    }\n    this[finalized] = true;\n    this._ensureClassProperties();\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...(typeof Object.getOwnPropertySymbols === 'function') ?\n            Object.getOwnPropertySymbols(props) :\n            []\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeSript lack of support for symbol in\n        // index types\n        // tslint:disable-next-line:no-any no symbol in index\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static _attributeNameForProperty(\n      name: PropertyKey, options: PropertyDeclaration) {\n    const attribute = options.attribute;\n    return attribute === false ?\n        undefined :\n        (typeof attribute === 'string' ?\n             attribute :\n             (typeof name === 'string' ? name.toLowerCase() : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   * @nocollapse\n   */\n  private static _valueHasChanged(\n      value: unknown, old: unknown, hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's\n   * `converter` or `converter.fromAttribute` property option.\n   * @nocollapse\n   */\n  private static _propertyValueFromAttribute(\n      value: string|null, options: PropertyDeclaration) {\n    const type = options.type;\n    const converter = options.converter || defaultConverter;\n    const fromAttribute =\n        (typeof converter === 'function' ? converter : converter.fromAttribute);\n    return fromAttribute ? fromAttribute(value, type) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   * @nocollapse\n   */\n  private static _propertyValueToAttribute(\n      value: unknown, options: PropertyDeclaration) {\n    if (options.reflect === undefined) {\n      return;\n    }\n    const type = options.type;\n    const converter = options.converter;\n    const toAttribute =\n        converter && (converter as ComplexAttributeConverter).toAttribute ||\n        defaultConverter.toAttribute;\n    return toAttribute!(value, type);\n  }\n\n  private _updateState: UpdateState = 0;\n  private _instanceProperties: PropertyValues|undefined = undefined;\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private _updatePromise =\n      new Promise((res) => this._enableUpdatingResolver = res);\n  private _enableUpdatingResolver: (() => void)|undefined;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties: PropertyValues = new Map();\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties: Map<PropertyKey, PropertyDeclaration>|\n      undefined = undefined;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this._saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this._requestUpdate();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof UpdatingElement)\n        ._classProperties!.forEach((_v, p) => {\n          if (this.hasOwnProperty(p)) {\n            const value = this[p as keyof this];\n            delete this[p as keyof this];\n            if (!this._instanceProperties) {\n              this._instanceProperties = new Map();\n            }\n            this._instanceProperties.set(p, value);\n          }\n        });\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    // tslint:disable-next-line:no-any\n    this._instanceProperties!.forEach((v, p) => (this as any)[p] = v);\n    this._instanceProperties = undefined;\n  }\n\n  connectedCallback() {\n    // Ensure first connection completes an update. Updates cannot complete\n    // before connection.\n    this.enableUpdating();\n  }\n\n  protected enableUpdating() {\n    if (this._enableUpdatingResolver !== undefined) {\n      this._enableUpdatingResolver();\n      this._enableUpdatingResolver = undefined;\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string|null, value: string|null) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attr = ctor._attributeNameForProperty(name, options);\n    if (attr !== undefined) {\n      const attrValue = ctor._propertyValueToAttribute(value, options);\n      // an undefined value does not change the attribute.\n      if (attrValue === undefined) {\n        return;\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string|null) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n      return;\n    }\n    const ctor = (this.constructor as typeof UpdatingElement);\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    // tslint:disable-next-line:no-unnecessary-type-assertion\n    const propName = (ctor._attributeToPropertyMap as AttributeMap).get(name);\n    if (propName !== undefined) {\n      const options = ctor.getPropertyOptions(propName);\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n      this[propName as keyof this] =\n          // tslint:disable-next-line:no-any\n          ctor._propertyValueFromAttribute(value, options) as any;\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n    }\n  }\n\n  /**\n   * This private version of `requestUpdate` does not access or return the\n   * `updateComplete` promise. This promise can be overridden and is therefore\n   * not free to access.\n   */\n  private _requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      const ctor = this.constructor as typeof UpdatingElement;\n      const options = ctor.getPropertyOptions(name);\n      if (ctor._valueHasChanged(\n              this[name as keyof this], oldValue, options.hasChanged)) {\n        if (!this._changedProperties.has(name)) {\n          this._changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true &&\n            !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n          if (this._reflectingProperties === undefined) {\n            this._reflectingProperties = new Map();\n          }\n          this._reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n      this._updatePromise = this._enqueueUpdate();\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    this._requestUpdate(name, oldValue);\n    return this.updateComplete;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async _enqueueUpdate() {\n    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this._updatePromise;\n    } catch (e) {\n      // Ignore any previous errors. We only care that the previous cycle is\n      // done. Any error should have been handled in the previous update.\n    }\n    const result = this.performUpdate();\n    // If `performUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this._hasRequestedUpdate;\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  protected get hasUpdated() {\n    return (this._updateState & STATE_HAS_UPDATED);\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * You can override this method to change the timing of updates. If this\n   * method is overridden, `super.performUpdate()` must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   */\n  protected performUpdate(): void|Promise<unknown> {\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.update(changedProperties);\n      } else {\n        this._markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this._markUpdated();\n      throw e;\n    }\n    if (shouldUpdate) {\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    }\n  }\n\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `_getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super._getUpdateComplete()`, then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() {\n    return this._getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async _getUpdateComplete() {\n   *       await super._getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   */\n  protected _getUpdateComplete() {\n    return this._updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this._reflectingProperties.forEach(\n          (v, k) => this._propertyToAttribute(k, this[k as keyof this], v));\n      this._reflectingProperties = undefined;\n    }\n    this._markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  // tslint:disable-next-line:no-any\n  new (...args: any[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n  kind: 'field'|'method';\n  key: PropertyKey;\n  placement: 'static'|'prototype'|'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nconst legacyCustomElement =\n    (tagName: string, clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n      return clazz as any;\n    };\n\nconst standardCustomElement =\n    (tagName: string, descriptor: ClassDescriptor) => {\n      const {kind, elements} = descriptor;\n      return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<HTMLElement>) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n *\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName: string) =>\n    (classOrDescriptor: Constructor<HTMLElement>|ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\n\nconst standardProperty =\n    (options: PropertyDeclaration, element: ClassElement) => {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor &&\n          !('value' in element.descriptor)) {\n        return {\n          ...element,\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          initializer(this: {[key: string]: unknown}) {\n            if (typeof element.initializer === 'function') {\n              this[element.key as string] = element.initializer.call(this);\n            }\n          },\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\nconst legacyProperty =\n    (options: PropertyDeclaration, proto: Object, name: PropertyKey) => {\n      (proto.constructor as typeof UpdatingElement)\n          .createProperty(name, options);\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the internalProperty decorator.\n *\n * @example\n *\n *     class MyElement {\n *       @property({ type: Boolean })\n *       clicked = false;\n *     }\n *\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // tslint:disable-next-line:no-any decorator\n  return (protoOrDescriptor: Object|ClassElement, name?: PropertyKey): any =>\n             (name !== undefined) ?\n      legacyProperty(options!, protoOrDescriptor as Object, name) :\n      standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n\nexport interface InternalPropertyDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n */\nexport function internalProperty(options?: InternalPropertyDeclaration) {\n  return property({attribute: false, hasChanged: options?.hasChanged});\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n *     class MyElement {\n *       @query('#first')\n *       first;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n *\n */\nexport function query(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n *     class MyElement {\n *       @queryAsync('#first')\n *       first;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n *\n *     // external usage\n *     async doSomethingWithFirst() {\n *      (await aMyElement.first).doSomething();\n *     }\n */\nexport function queryAsync(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      async get(this: LitElement) {\n        await this.updateComplete;\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n *\n *     class MyElement {\n *       @queryAll('div')\n *       divs;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n */\nexport function queryAll(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelectorAll(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\nconst legacyQuery =\n    (descriptor: PropertyDescriptor, proto: Object, name: PropertyKey) => {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\nconst standardQuery = (descriptor: PropertyDescriptor, element: ClassElement) =>\n    ({\n      kind: 'method',\n      placement: 'prototype',\n      key: element.key,\n      descriptor,\n    });\n\nconst standardEventOptions =\n    (options: AddEventListenerOptions, element: ClassElement) => {\n      return {\n        ...element,\n        finisher(clazz: typeof UpdatingElement) {\n          Object.assign(\n              clazz.prototype[element.key as keyof UpdatingElement], options);\n        }\n      };\n    };\n\nconst legacyEventOptions =\n    // tslint:disable-next-line:no-any legacy decorator\n    (options: AddEventListenerOptions, proto: any, name: PropertyKey) => {\n      Object.assign(proto[name], options);\n    };\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *       clicked = false;\n *\n *       render() {\n *         return html`\n *           <div @click=${this._onClick}`>\n *             <button></button>\n *           </div>\n *         `;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport function eventOptions(options: AddEventListenerOptions) {\n  // Return value typed as any to prevent TypeScript from complaining that\n  // standard decorator function signature does not match TypeScript decorator\n  // signature\n  // TODO(kschaaf): unclear why it was only failing on this decorator and not\n  // the others\n  return ((protoOrDescriptor: Object|ClassElement, name?: string) =>\n              (name !== undefined) ?\n              legacyEventOptions(options, protoOrDescriptor as Object, name) :\n              standardEventOptions(\n                  options, protoOrDescriptor as ClassElement)) as\n             // tslint:disable-next-line:no-any decorator\n             any;\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n */\nexport function queryAssignedNodes(\n    slotName: string = '', flatten: boolean = false) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        const selector = `slot${slotName ? `[name=${slotName}]` : ''}`;\n        const slot = this.renderRoot.querySelector(selector);\n        return slot && (slot as HTMLSlotElement).assignedNodes({flatten});\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const supportsAdoptingStyleSheets =\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  _styleSheet?: CSSStyleSheet|null;\n\n  readonly cssText: string;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n          'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet|null {\n    if (this._styleSheet === undefined) {\n      // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n      // is constructable.\n      if (supportsAdoptingStyleSheets) {\n        this._styleSheet = new CSSStyleSheet();\n        this._styleSheet.replaceSync(this.cssText);\n      } else {\n        this._styleSheet = null;\n      }\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return new CSSResult(String(value), constructionToken);\n};\n\nconst textFromCSSResult = (value: CSSResult|number) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n        `Value passed to 'css' function must be a 'css' function result: ${\n            value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n  }\n};\n\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css =\n    (strings: TemplateStringsArray, ...values: (CSSResult|number)[]) => {\n      const cssText = values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]);\n      return new CSSResult(cssText, constructionToken);\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport {render, ShadyRenderOptions} from 'lit-html/lib/shady-render.js';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html.js';\nimport {supportsAdoptingStyleSheets, CSSResult} from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.3.1');\n\nexport interface CSSResultArray extends Array<CSSResult|CSSResultArray> {}\n\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n\nexport class LitElement extends UpdatingElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See updating-element.ts for more information.\n   */\n  protected static['finalized'] = true;\n\n  /**\n   * Render method used to render the value to the element's DOM.\n   * @param result The value to render.\n   * @param container Node into which to render.\n   * @param options Element name.\n   * @nocollapse\n   */\n  static render:\n      (result: unknown, container: Element|DocumentFragment,\n       options: ShadyRenderOptions) => void = render;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static styles?: CSSResult|CSSResultArray;\n\n  private static _styles: CSSResult[]|undefined;\n\n  /**\n   * Return the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * @nocollapse\n   */\n  static getStyles(): CSSResult|CSSResultArray|undefined {\n    return this.styles;\n  }\n\n  /** @nocollapse */\n  private static _getUniqueStyles() {\n    // Only gather styles once per class\n    if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n      return;\n    }\n    // Take care not to call `this.getStyles()` multiple times since this\n    // generates new CSSResults each time.\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\n    // shared styles will generate new stylesheet objects, which is wasteful.\n    // This should be addressed when a browser ships constructable\n    // stylesheets.\n    const userStyles = this.getStyles();\n    if (userStyles === undefined) {\n      this._styles = [];\n    } else if (Array.isArray(userStyles)) {\n      // De-duplicate styles preserving the _last_ instance in the set.\n      // This is a performance optimization to avoid duplicated styles that can\n      // occur especially when composing via subclassing.\n      // The last item is kept to try to preserve the cascade order with the\n      // assumption that it's most important that last added styles override\n      // previous styles.\n      const addStyles =\n          (styles: CSSResultArray, set: Set<CSSResult>): Set<CSSResult> =>\n              styles.reduceRight(\n                  (set: Set<CSSResult>, s) =>\n                      // Note: On IE set.add() does not return the set\n                  Array.isArray(s) ? addStyles(s, set) : (set.add(s), set),\n                  set);\n      // Array.from does not work on Set in IE, otherwise return\n      // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n      const set = addStyles(userStyles, new Set<CSSResult>());\n      const styles: CSSResult[] = [];\n      set.forEach((v) => styles.unshift(v));\n      this._styles = styles;\n    } else {\n      this._styles = [userStyles];\n    }\n  }\n\n  private _needsShimAdoptedStyleSheets?: boolean;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  readonly renderRoot!: Element|DocumentFragment;\n\n  /**\n   * Performs element initialization. By default this calls `createRenderRoot`\n   * to create the element `renderRoot` node and captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    super.initialize();\n    (this.constructor as typeof LitElement)._getUniqueStyles();\n    (this as {renderRoot: Element | DocumentFragment}).renderRoot =\n        this.createRenderRoot();\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n    // element's getRootNode(). While this could be done, we're choosing not to\n    // support this now since it would require different logic around de-duping.\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n      this.adoptStyles();\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow({mode: 'open'});\n  }\n\n  /**\n   * Applies styling to the element shadowRoot using the `static get styles`\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\n   * end of the `shadowRoot` to [mimic spec\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n   */\n  protected adoptStyles() {\n    const styles = (this.constructor as typeof LitElement)._styles!;\n    if (styles.length === 0) {\n      return;\n    }\n    // There are three separate cases here based on Shadow DOM support.\n    // (1) shadowRoot polyfilled: use ShadyCSS\n    // (2) shadowRoot.adoptedStyleSheets available: use it.\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n    // rendering\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n      window.ShadyCSS.ScopingShim!.prepareAdoptedCssText(\n          styles.map((s) => s.cssText), this.localName);\n    } else if (supportsAdoptingStyleSheets) {\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\n          styles.map((s) => s.styleSheet!);\n    } else {\n      // This must be done after rendering so the actual style insertion is done\n      // in `update`.\n      this._needsShimAdoptedStyleSheets = true;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // Note, first update/render handles styleElement so we only call this if\n    // connected after first update.\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\n      window.ShadyCSS.styleElement(this);\n    }\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const templateResult = this.render();\n    super.update(changedProperties);\n    // If render is not implemented by the component, don't call lit-html render\n    if (templateResult !== renderNotImplemented) {\n      (this.constructor as typeof LitElement)\n          .render(\n              templateResult,\n              this.renderRoot,\n              {scopeName: this.localName, eventContext: this});\n    }\n    // When native Shadow DOM is used but adoptedStyles are not supported,\n    // insert styling after rendering to ensure adoptedStyles have highest\n    // priority.\n    if (this._needsShimAdoptedStyleSheets) {\n      this._needsShimAdoptedStyleSheets = false;\n      (this.constructor as typeof LitElement)._styles!.forEach((s) => {\n        const style = document.createElement('style');\n        style.textContent = s.cssText;\n        this.renderRoot.appendChild(style);\n      });\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's NodePart - typically a TemplateResult.\n   * Setting properties inside this method will *not* trigger the element to\n   * update.\n   */\n  protected render(): unknown {\n    return renderNotImplemented;\n  }\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { css, customElement, html, LitElement, property } from 'lit-element';\r\nconst lightColors = {\r\n    red: '#ff8080',\r\n    green: '#80ff80',\r\n    blue: '#8080ff',\r\n    yellow: '#ffff80',\r\n    orange: '#ffcf80',\r\n    white: '#ffffff'\r\n};\r\nlet LEDElement = class LEDElement extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.value = false;\r\n        this.brightness = 1.0;\r\n        this.color = 'red';\r\n        this.lightColor = null;\r\n        this.label = '';\r\n    }\r\n    static get styles() {\r\n        return css `\r\n      :host {\r\n        display: inline-block;\r\n      }\r\n\r\n      .led-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 40px;\r\n      }\r\n\r\n      .led-label {\r\n        font-size: 10px;\r\n        text-align: center;\r\n        color: gray;\r\n        position: relative;\r\n        line-height: 1;\r\n        top: -8px;\r\n      }\r\n    `;\r\n    }\r\n    render() {\r\n        const { color, lightColor } = this;\r\n        const lightColorActual = lightColor || lightColors[color] || '#ff8080';\r\n        const opacity = this.brightness ? 0.3 + this.brightness * 0.7 : 0;\r\n        const lightOn = this.value && this.brightness > Number.EPSILON;\r\n        return html `\r\n      <div class=\"led-container\">\r\n        <svg\r\n          width=\"40\"\r\n          height=\"50\"\r\n          version=\"1.2\"\r\n          viewBox=\"-10 -5 35.456 39.618\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <filter id=\"light1\" x=\"-0.8\" y=\"-0.8\" height=\"2.2\" width=\"2.8\">\r\n            <feGaussianBlur stdDeviation=\"2\" />\r\n          </filter>\r\n          <filter id=\"light2\" x=\"-0.8\" y=\"-0.8\" height=\"2.2\" width=\"2.8\">\r\n            <feGaussianBlur stdDeviation=\"4\" />\r\n          </filter>\r\n          <rect x=\"3.451\" y=\"19.379\" width=\"2.1514\" height=\"9.8273\" fill=\"#8c8c8c\" />\r\n          <path\r\n            d=\"m12.608 29.618c0-1.1736-0.86844-2.5132-1.8916-3.4024-0.41616-0.3672-1.1995-1.0015-1.1995-1.4249v-5.4706h-2.1614v5.7802c0 1.0584 0.94752 1.8785 1.9462 2.7482 0.44424 0.37584 1.3486 1.2496 1.3486 1.7694\"\r\n            fill=\"#8c8c8c\"\r\n          />\r\n          <path\r\n            d=\"m14.173 13.001v-5.9126c0-3.9132-3.168-7.0884-7.0855-7.0884-3.9125 0-7.0877 3.1694-7.0877 7.0884v13.649c1.4738 1.651 4.0968 2.7526 7.0877 2.7526 4.6195 0 8.3686-2.6179 8.3686-5.8594v-1.5235c-7.4e-4 -1.1426-0.47444-2.2039-1.283-3.1061z\"\r\n            opacity=\".3\"\r\n          />\r\n          <path\r\n            d=\"m14.173 13.001v-5.9126c0-3.9132-3.168-7.0884-7.0855-7.0884-3.9125 0-7.0877 3.1694-7.0877 7.0884v13.649c1.4738 1.651 4.0968 2.7526 7.0877 2.7526 4.6195 0 8.3686-2.6179 8.3686-5.8594v-1.5235c-7.4e-4 -1.1426-0.47444-2.2039-1.283-3.1061z\"\r\n            fill=\"#e6e6e6\"\r\n            opacity=\".5\"\r\n          />\r\n          <path\r\n            d=\"m14.173 13.001v3.1054c0 2.7389-3.1658 4.9651-7.0855 4.9651-3.9125 2e-5 -7.0877-2.219-7.0877-4.9651v4.6296c1.4738 1.6517 4.0968 2.7526 7.0877 2.7526 4.6195 0 8.3686-2.6179 8.3686-5.8586l-4e-5 -1.5235c-7e-4 -1.1419-0.4744-2.2032-1.283-3.1054z\"\r\n            fill=\"#d1d1d1\"\r\n            opacity=\".9\"\r\n          />\r\n          <g>\r\n            <path\r\n              d=\"m14.173 13.001v3.1054c0 2.7389-3.1658 4.9651-7.0855 4.9651-3.9125 2e-5 -7.0877-2.219-7.0877-4.9651v4.6296c1.4738 1.6517 4.0968 2.7526 7.0877 2.7526 4.6195 0 8.3686-2.6179 8.3686-5.8586l-4e-5 -1.5235c-7e-4 -1.1419-0.4744-2.2032-1.283-3.1054z\"\r\n              opacity=\".7\"\r\n            />\r\n            <path\r\n              d=\"m14.173 13.001v3.1054c0 2.7389-3.1658 4.9651-7.0855 4.9651-3.9125 2e-5 -7.0877-2.219-7.0877-4.9651v3.1054c1.4738 1.6502 4.0968 2.7526 7.0877 2.7526 4.6195 0 8.3686-2.6179 8.3686-5.8586-7.4e-4 -1.1412-0.47444-2.2025-1.283-3.1047z\"\r\n              opacity=\".25\"\r\n            />\r\n            <ellipse cx=\"7.0877\" cy=\"16.106\" rx=\"7.087\" ry=\"4.9608\" opacity=\".25\" />\r\n          </g>\r\n          <polygon\r\n            points=\"2.2032 16.107 3.1961 16.107 3.1961 13.095 6.0156 13.095 10.012 8.8049 3.407 8.8049 2.2032 9.648\"\r\n            fill=\"#666666\"\r\n          />\r\n          <polygon\r\n            points=\"11.215 9.0338 7.4117 13.095 11.06 13.095 11.06 16.107 11.974 16.107 11.974 8.5241 10.778 8.5241\"\r\n            fill=\"#666666\"\r\n          />\r\n          <path\r\n            d=\"m14.173 13.001v-5.9126c0-3.9132-3.168-7.0884-7.0855-7.0884-3.9125 0-7.0877 3.1694-7.0877 7.0884v13.649c1.4738 1.651 4.0968 2.7526 7.0877 2.7526 4.6195 0 8.3686-2.6179 8.3686-5.8594v-1.5235c-7.4e-4 -1.1426-0.47444-2.2039-1.283-3.1061z\"\r\n            fill=\"${color}\"\r\n            opacity=\".65\"\r\n          />\r\n          <g fill=\"#ffffff\">\r\n            <path\r\n              d=\"m10.388 3.7541 1.4364-0.2736c-0.84168-1.1318-2.0822-1.9577-3.5417-2.2385l0.25416 1.0807c0.76388 0.27072 1.4068 0.78048 1.8511 1.4314z\"\r\n              opacity=\".5\"\r\n            />\r\n            <path\r\n              d=\"m0.76824 19.926v1.5199c0.64872 0.5292 1.4335 0.97632 2.3076 1.3169v-1.525c-0.8784-0.33624-1.6567-0.78194-2.3076-1.3118z\"\r\n              opacity=\".5\"\r\n            />\r\n            <path\r\n              d=\"m11.073 20.21c-0.2556 0.1224-0.52992 0.22968-0.80568 0.32976-0.05832 0.01944-0.11736 0.04032-0.17784 0.05832-0.56376 0.17928-1.1614 0.31896-1.795 0.39456-0.07488 0.0094-0.1512 0.01872-0.22464 0.01944-0.3204 0.03024-0.64368 0.05832-0.97056 0.05832-0.14832 0-0.30744-0.01512-0.4716-0.02376-1.2002-0.05688-2.3306-0.31464-3.2976-0.73944l-2e-5 -8.3895v-4.8254c0-1.471 0.84816-2.7295 2.0736-3.3494l-0.02232-0.05328-1.2478-1.512c-1.6697 1.003-2.79 2.8224-2.79 4.9118v11.905c-0.04968-0.04968-0.30816-0.30888-0.48024-0.52992l-0.30744 0.6876c1.4011 1.4818 3.8088 2.4617 6.5426 2.4617 1.6798 0 3.2371-0.37368 4.5115-1.0022l-0.52704-0.40896-0.01006 0.0072z\"\r\n              opacity=\".5\"\r\n            />\r\n          </g>\r\n          <g class=\"light\" style=\"display: ${lightOn ? '' : 'none'}\">\r\n            <ellipse\r\n              cx=\"8\"\r\n              cy=\"10\"\r\n              rx=\"10\"\r\n              ry=\"10\"\r\n              fill=\"${lightColorActual}\"\r\n              filter=\"url(#light2)\"\r\n              style=\"opacity: ${opacity}\"\r\n            ></ellipse>\r\n            <ellipse cx=\"8\" cy=\"10\" rx=\"2\" ry=\"2\" fill=\"white\" filter=\"url(#light1)\"></ellipse>\r\n            <ellipse\r\n              cx=\"8\"\r\n              cy=\"10\"\r\n              rx=\"3\"\r\n              ry=\"3\"\r\n              fill=\"white\"\r\n              filter=\"url(#light1)\"\r\n              style=\"opacity: ${opacity}\"\r\n            ></ellipse>\r\n          </g>\r\n        </svg>\r\n        <span class=\"led-label\">${this.label}</span>\r\n      </div>\r\n    `;\r\n    }\r\n};\r\n__decorate([\r\n    property()\r\n], LEDElement.prototype, \"value\", void 0);\r\n__decorate([\r\n    property()\r\n], LEDElement.prototype, \"brightness\", void 0);\r\n__decorate([\r\n    property()\r\n], LEDElement.prototype, \"color\", void 0);\r\n__decorate([\r\n    property()\r\n], LEDElement.prototype, \"lightColor\", void 0);\r\n__decorate([\r\n    property()\r\n], LEDElement.prototype, \"label\", void 0);\r\nLEDElement = __decorate([\r\n    customElement('wokwi-led')\r\n], LEDElement);\r\nexport { LEDElement };\r\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { css, customElement, html, LitElement, property } from 'lit-element';\r\nconst SPACE_KEY = 32;\r\nlet PushbuttonElement = class PushbuttonElement extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.color = 'red';\r\n        this.pressed = false;\r\n    }\r\n    static get styles() {\r\n        return css `\r\n      button {\r\n        border: none;\r\n        background: none;\r\n        padding: 0;\r\n        margin: 0;\r\n        text-decoration: none;\r\n        -webkit-appearance: none;\r\n        -moz-appearance: none;\r\n      }\r\n\r\n      button:active .button-circle {\r\n        fill: url(#grad-down);\r\n      }\r\n\r\n      .clickable-element {\r\n        cursor: pointer;\r\n      }\r\n    `;\r\n    }\r\n    render() {\r\n        const { color } = this;\r\n        return html `\r\n      <button\r\n        aria-label=\"${color} pushbutton\"\r\n        @mousedown=${this.down}\r\n        @mouseup=${this.up}\r\n        @touchstart=${this.down}\r\n        @touchend=${this.up}\r\n        @keydown=${(e) => e.keyCode === SPACE_KEY && this.down()}\r\n        @keyup=${(e) => e.keyCode === SPACE_KEY && this.up()}\r\n      >\r\n        <svg\r\n          width=\"18mm\"\r\n          height=\"12mm\"\r\n          version=\"1.1\"\r\n          viewBox=\"-3 0 18 12\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n        >\r\n          <defs>\r\n            <linearGradient id=\"grad-up\" x1=\"0\" x2=\"1\" y1=\"0\" y2=\"1\">\r\n              <stop stop-color=\"#ffffff\" offset=\"0\" />\r\n              <stop stop-color=\"${color}\" offset=\"0.3\" />\r\n              <stop stop-color=\"${color}\" offset=\"0.5\" />\r\n              <stop offset=\"1\" />\r\n            </linearGradient>\r\n            <linearGradient\r\n              id=\"grad-down\"\r\n              xlink:href=\"#grad-up\"\r\n              gradientTransform=\"rotate(180,0.5,0.5)\"\r\n            ></linearGradient>\r\n          </defs>\r\n          <rect x=\"0\" y=\"0\" width=\"12\" height=\"12\" rx=\".44\" ry=\".44\" fill=\"#464646\" />\r\n          <rect x=\".75\" y=\".75\" width=\"10.5\" height=\"10.5\" rx=\".211\" ry=\".211\" fill=\"#eaeaea\" />\r\n          <g fill=\"#1b1b1\">\r\n            <circle cx=\"1.767\" cy=\"1.7916\" r=\".37\" />\r\n            <circle cx=\"10.161\" cy=\"1.7916\" r=\".37\" />\r\n            <circle cx=\"10.161\" cy=\"10.197\" r=\".37\" />\r\n            <circle cx=\"1.767\" cy=\"10.197\" r=\".37\" />\r\n          </g>\r\n          <g fill=\"#eaeaea\">\r\n            <path\r\n              d=\"m-0.3538 1.4672c-0.058299 0-0.10523 0.0469-0.10523 0.10522v0.38698h-2.1504c-0.1166 0-0.21045 0.0938-0.21045 0.21045v0.50721c0 0.1166 0.093855 0.21045 0.21045 0.21045h2.1504v0.40101c0 0.0583 0.046928 0.10528 0.10523 0.10528h0.35723v-1.9266z\"\r\n            />\r\n            <path\r\n              d=\"m-0.35376 8.6067c-0.058299 0-0.10523 0.0469-0.10523 0.10523v0.38697h-2.1504c-0.1166 0-0.21045 0.0939-0.21045 0.21045v0.50721c0 0.1166 0.093855 0.21046 0.21045 0.21046h2.1504v0.401c0 0.0583 0.046928 0.10528 0.10523 0.10528h0.35723v-1.9266z\"\r\n            />\r\n            <path\r\n              d=\"m12.354 1.4672c0.0583 0 0.10522 0.0469 0.10523 0.10522v0.38698h2.1504c0.1166 0 0.21045 0.0938 0.21045 0.21045v0.50721c0 0.1166-0.09385 0.21045-0.21045 0.21045h-2.1504v0.40101c0 0.0583-0.04693 0.10528-0.10523 0.10528h-0.35723v-1.9266z\"\r\n            />\r\n            <path\r\n              d=\"m12.354 8.6067c0.0583 0 0.10523 0.0469 0.10523 0.10522v0.38698h2.1504c0.1166 0 0.21045 0.0938 0.21045 0.21045v0.50721c0 0.1166-0.09386 0.21045-0.21045 0.21045h-2.1504v0.40101c0 0.0583-0.04693 0.10528-0.10523 0.10528h-0.35723v-1.9266z\"\r\n            />\r\n          </g>\r\n          <g class=\"clickable-element\">\r\n            <circle class=\"button-circle\" cx=\"6\" cy=\"6\" r=\"3.822\" fill=\"url(#grad-up)\" />\r\n            <circle\r\n              cx=\"6\"\r\n              cy=\"6\"\r\n              r=\"2.9\"\r\n              fill=\"${color}\"\r\n              stroke=\"#2f2f2f\"\r\n              stroke-opacity=\".47\"\r\n              stroke-width=\".08\"\r\n            />\r\n          </g>\r\n        </svg>\r\n      </button>\r\n    `;\r\n    }\r\n    down() {\r\n        if (!this.pressed) {\r\n            this.pressed = true;\r\n            this.dispatchEvent(new Event('button-press'));\r\n        }\r\n    }\r\n    up() {\r\n        if (this.pressed) {\r\n            this.pressed = false;\r\n            this.dispatchEvent(new Event('button-release'));\r\n        }\r\n    }\r\n};\r\n__decorate([\r\n    property()\r\n], PushbuttonElement.prototype, \"color\", void 0);\r\n__decorate([\r\n    property()\r\n], PushbuttonElement.prototype, \"pressed\", void 0);\r\nPushbuttonElement = __decorate([\r\n    customElement('wokwi-pushbutton')\r\n], PushbuttonElement);\r\nexport { PushbuttonElement };\r\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { customElement, html, LitElement, property } from 'lit-element';\r\nconst bandColors = {\r\n    [-2]: 'silver',\r\n    [-1]: '#c4a000',\r\n    0: 'black',\r\n    1: 'brown',\r\n    2: 'red',\r\n    3: 'orange',\r\n    4: 'yellow',\r\n    5: 'green',\r\n    6: 'blue',\r\n    7: 'violet',\r\n    8: 'gray',\r\n    9: 'white'\r\n};\r\nlet ResistorElement = class ResistorElement extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.value = '1000';\r\n    }\r\n    breakValue(value) {\r\n        const exponent = value >= 1e10\r\n            ? 9\r\n            : value >= 1e9\r\n                ? 8\r\n                : value >= 1e8\r\n                    ? 7\r\n                    : value >= 1e7\r\n                        ? 6\r\n                        : value >= 1e6\r\n                            ? 5\r\n                            : value >= 1e5\r\n                                ? 4\r\n                                : value >= 1e4\r\n                                    ? 3\r\n                                    : value >= 1e3\r\n                                        ? 2\r\n                                        : value >= 1e2\r\n                                            ? 1\r\n                                            : value >= 1e1\r\n                                                ? 0\r\n                                                : value >= 1\r\n                                                    ? -1\r\n                                                    : -2;\r\n        const base = Math.round(value / 10 ** exponent);\r\n        if (value === 0) {\r\n            return [0, 0];\r\n        }\r\n        if (exponent < 0 && base % 10 === 0) {\r\n            return [base / 10, exponent + 1];\r\n        }\r\n        return [Math.round(base % 100), exponent];\r\n    }\r\n    render() {\r\n        const { value } = this;\r\n        const numValue = parseFloat(value);\r\n        const [base, exponent] = this.breakValue(numValue);\r\n        const band1Color = bandColors[Math.floor(base / 10)];\r\n        const band2Color = bandColors[base % 10];\r\n        const band3Color = bandColors[exponent];\r\n        return html `\r\n      <svg\r\n        width=\"15.645mm\"\r\n        height=\"3mm\"\r\n        version=\"1.1\"\r\n        viewBox=\"0 0 15.645 3\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n      >\r\n        <defs>\r\n          <linearGradient\r\n            id=\"a\"\r\n            x2=\"0\"\r\n            y1=\"22.332\"\r\n            y2=\"38.348\"\r\n            gradientTransform=\"matrix(.14479 0 0 .14479 -23.155 -4.0573)\"\r\n            gradientUnits=\"userSpaceOnUse\"\r\n            spreadMethod=\"reflect\"\r\n          >\r\n            <stop stop-color=\"#323232\" offset=\"0\" />\r\n            <stop stop-color=\"#fff\" stop-opacity=\".42268\" offset=\"1\" />\r\n          </linearGradient>\r\n        </defs>\r\n        <rect y=\"1.1759\" width=\"15.645\" height=\".63826\" fill=\"#eaeaea\" />\r\n        <g stroke-width=\".14479\">\r\n          <path\r\n            d=\"m4.6918 0c-1.0586 0-1.9185 0.67468-1.9185 1.5022 0 0.82756 0.85995 1.4978 1.9185 1.4978 0.4241 0 0.81356-0.11167 1.1312-0.29411h4.0949c0.31802 0.18313 0.71075 0.29411 1.1357 0.29411 1.0586 0 1.9185-0.67015 1.9185-1.4978 0-0.8276-0.85995-1.5022-1.9185-1.5022-0.42499 0-0.81773 0.11098-1.1357 0.29411h-4.0949c-0.31765-0.18244-0.7071-0.29411-1.1312-0.29411z\"\r\n            fill=\"#d5b597\"\r\n          />\r\n          <path\r\n            d=\"m4.6918 0c-1.0586 0-1.9185 0.67468-1.9185 1.5022 0 0.82756 0.85995 1.4978 1.9185 1.4978 0.4241 0 0.81356-0.11167 1.1312-0.29411h4.0949c0.31802 0.18313 0.71075 0.29411 1.1357 0.29411 1.0586 0 1.9185-0.67015 1.9185-1.4978 0-0.8276-0.85995-1.5022-1.9185-1.5022-0.42499 0-0.81773 0.11098-1.1357 0.29411h-4.0949c-0.31765-0.18244-0.7071-0.29411-1.1312-0.29411z\"\r\n            fill=\"url(#a)\"\r\n            opacity=\".44886\"\r\n          />\r\n          <path\r\n            d=\"m4.6917 0c-0.10922 0-0.21558 0.00884-0.31985 0.022624v2.955c0.10426 0.013705 0.21063 0.02234 0.31985 0.02234 0.15603 0 0.3074-0.015363 0.4522-0.043551v-2.9129c-0.1448-0.028193-0.29617-0.043551-0.4522-0.043552z\"\r\n            fill=\"${band1Color}\"\r\n          />\r\n          <path d=\"m6.4482 0.29411v2.4117h0.77205v-2.4117z\" fill=\"${band2Color}\" />\r\n          <path d=\"m8.5245 0.29411v2.4117h0.77205v-2.4117z\" fill=\"${band3Color}\" />\r\n          <path\r\n            d=\"m11.054 0c-0.15608 0-0.30749 0.015253-0.45277 0.043268v2.9134c0.14527 0.028012 0.29669 0.043268 0.45277 0.043268 0.10912 0 0.21539-0.00867 0.31957-0.02234v-2.955c-0.10418-0.013767-0.21044-0.022624-0.31957-0.022624z\"\r\n            fill=\"#c4a000\"\r\n          />\r\n        </g>\r\n      </svg>\r\n    `;\r\n    }\r\n};\r\n__decorate([\r\n    property()\r\n], ResistorElement.prototype, \"value\", void 0);\r\nResistorElement = __decorate([\r\n    customElement('wokwi-resistor')\r\n], ResistorElement);\r\nexport { ResistorElement };\r\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { css, customElement, html, LitElement, property } from 'lit-element';\r\nlet SevenSegmentElement = class SevenSegmentElement extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.color = 'red';\r\n        this.values = [0, 0, 0, 0, 0, 0, 0, 0];\r\n    }\r\n    static get styles() {\r\n        return css `\r\n      polygon {\r\n        transform: scale(0.9);\r\n        transform-origin: 50% 50%;\r\n        transform-box: fill-box;\r\n      }\r\n    `;\r\n    }\r\n    render() {\r\n        const { color, values } = this;\r\n        const fill = (index) => (values[index] ? color : '#ddd');\r\n        return html `\r\n      <svg\r\n        width=\"12mm\"\r\n        height=\"18.5mm\"\r\n        version=\"1.1\"\r\n        viewBox=\"0 0 12 18.5\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <g transform=\"skewX(-8) translate(2, 0)\">\r\n          <polygon points=\"2 0 8 0 9 1 8 2 2 2 1 1\" fill=\"${fill(0)}\" />\r\n          <polygon points=\"10 2 10 8 9 9 8 8 8 2 9 1\" fill=\"${fill(1)}\" />\r\n          <polygon points=\"10 10 10 16 9 17 8 16 8 10 9 9\" fill=\"${fill(2)}\" />\r\n          <polygon points=\"8 18 2 18 1 17 2 16 8 16 9 17\" fill=\"${fill(3)}\" />\r\n          <polygon points=\"0 16 0 10 1 9 2 10 2 16 1 17\" fill=\"${fill(4)}\" />\r\n          <polygon points=\"0 8 0 2 1 1 2 2 2 8 1 9\" fill=${fill(5)} />\r\n          <polygon points=\"2 8 8 8 9 9 8 10 2 10 1 9\" fill=${fill(6)} />\r\n        </g>\r\n        <circle cx=\"11\" cy=\"17\" r=\"1.1\" fill=\"${fill(7)}\" />\r\n      </svg>\r\n    `;\r\n    }\r\n};\r\n__decorate([\r\n    property()\r\n], SevenSegmentElement.prototype, \"color\", void 0);\r\n__decorate([\r\n    property({ type: Array })\r\n], SevenSegmentElement.prototype, \"values\", void 0);\r\nSevenSegmentElement = __decorate([\r\n    customElement('wokwi-7segment')\r\n], SevenSegmentElement);\r\nexport { SevenSegmentElement };\r\n","// Font rasterized from datasheet: https://www.sparkfun.com/datasheets/LCD/HD44780.pdf\r\n// prettier-ignore\r\nexport const fontA00 = new Uint8Array([\r\n    /* 0 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 1 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 2 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 3 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 4 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 5 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 6 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 7 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 8 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 9 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 10 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 11 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 12 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 13 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 14 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 15 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 16 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 17 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 18 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 19 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 20 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 21 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 22 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 23 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 24 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 25 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 26 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 27 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 28 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 29 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 30 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 31 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 32 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 33 */ 4, 4, 4, 4, 0, 0, 4, 0,\r\n    /* 34 */ 10, 10, 10, 0, 0, 0, 0, 0,\r\n    /* 35 */ 10, 10, 31, 10, 31, 10, 10, 0,\r\n    /* 36 */ 4, 30, 5, 14, 20, 15, 4, 0,\r\n    /* 37 */ 3, 19, 8, 4, 2, 25, 24, 0,\r\n    /* 38 */ 6, 9, 5, 2, 21, 9, 22, 0,\r\n    /* 39 */ 6, 4, 2, 0, 0, 0, 0, 0,\r\n    /* 40 */ 8, 4, 2, 2, 2, 4, 8, 0,\r\n    /* 41 */ 2, 4, 8, 8, 8, 4, 2, 0,\r\n    /* 42 */ 0, 4, 21, 14, 21, 4, 0, 0,\r\n    /* 43 */ 0, 4, 4, 31, 4, 4, 0, 0,\r\n    /* 44 */ 0, 0, 0, 0, 6, 4, 2, 0,\r\n    /* 45 */ 0, 0, 0, 31, 0, 0, 0, 0,\r\n    /* 46 */ 0, 0, 0, 0, 0, 6, 6, 0,\r\n    /* 47 */ 0, 16, 8, 4, 2, 1, 0, 0,\r\n    /* 48 */ 14, 17, 25, 21, 19, 17, 14, 0,\r\n    /* 49 */ 4, 6, 4, 4, 4, 4, 14, 0,\r\n    /* 50 */ 14, 17, 16, 8, 4, 2, 31, 0,\r\n    /* 51 */ 31, 8, 4, 8, 16, 17, 14, 0,\r\n    /* 52 */ 8, 12, 10, 9, 31, 8, 8, 0,\r\n    /* 53 */ 31, 1, 15, 16, 16, 17, 14, 0,\r\n    /* 54 */ 12, 2, 1, 15, 17, 17, 14, 0,\r\n    /* 55 */ 31, 17, 16, 8, 4, 4, 4, 0,\r\n    /* 56 */ 14, 17, 17, 14, 17, 17, 14, 0,\r\n    /* 57 */ 14, 17, 17, 30, 16, 8, 6, 0,\r\n    /* 58 */ 0, 6, 6, 0, 6, 6, 0, 0,\r\n    /* 59 */ 0, 6, 6, 0, 6, 4, 2, 0,\r\n    /* 60 */ 8, 4, 2, 1, 2, 4, 8, 0,\r\n    /* 61 */ 0, 0, 31, 0, 31, 0, 0, 0,\r\n    /* 62 */ 2, 4, 8, 16, 8, 4, 2, 0,\r\n    /* 63 */ 14, 17, 16, 8, 4, 0, 4, 0,\r\n    /* 64 */ 14, 17, 16, 22, 21, 21, 14, 0,\r\n    /* 65 */ 14, 17, 17, 17, 31, 17, 17, 0,\r\n    /* 66 */ 15, 17, 17, 15, 17, 17, 15, 0,\r\n    /* 67 */ 14, 17, 1, 1, 1, 17, 14, 0,\r\n    /* 68 */ 7, 9, 17, 17, 17, 9, 7, 0,\r\n    /* 69 */ 31, 1, 1, 15, 1, 1, 31, 0,\r\n    /* 70 */ 31, 1, 1, 15, 1, 1, 1, 0,\r\n    /* 71 */ 14, 17, 1, 29, 17, 17, 30, 0,\r\n    /* 72 */ 17, 17, 17, 31, 17, 17, 17, 0,\r\n    /* 73 */ 14, 4, 4, 4, 4, 4, 14, 0,\r\n    /* 74 */ 28, 8, 8, 8, 8, 9, 6, 0,\r\n    /* 75 */ 17, 9, 5, 3, 5, 9, 17, 0,\r\n    /* 76 */ 1, 1, 1, 1, 1, 1, 31, 0,\r\n    /* 77 */ 17, 27, 21, 21, 17, 17, 17, 0,\r\n    /* 78 */ 17, 17, 19, 21, 25, 17, 17, 0,\r\n    /* 79 */ 14, 17, 17, 17, 17, 17, 14, 0,\r\n    /* 80 */ 15, 17, 17, 15, 1, 1, 1, 0,\r\n    /* 81 */ 14, 17, 17, 17, 21, 9, 22, 0,\r\n    /* 82 */ 15, 17, 17, 15, 5, 9, 17, 0,\r\n    /* 83 */ 30, 1, 1, 14, 16, 16, 15, 0,\r\n    /* 84 */ 31, 4, 4, 4, 4, 4, 4, 0,\r\n    /* 85 */ 17, 17, 17, 17, 17, 17, 14, 0,\r\n    /* 86 */ 17, 17, 17, 17, 17, 10, 4, 0,\r\n    /* 87 */ 17, 17, 17, 21, 21, 21, 10, 0,\r\n    /* 88 */ 17, 17, 10, 4, 10, 17, 17, 0,\r\n    /* 89 */ 17, 17, 17, 10, 4, 4, 4, 0,\r\n    /* 90 */ 31, 16, 8, 4, 2, 1, 31, 0,\r\n    /* 91 */ 7, 1, 1, 1, 1, 1, 7, 0,\r\n    /* 92 */ 17, 10, 31, 4, 31, 4, 4, 0,\r\n    /* 93 */ 14, 8, 8, 8, 8, 8, 14, 0,\r\n    /* 94 */ 4, 10, 17, 0, 0, 0, 0, 0,\r\n    /* 95 */ 0, 0, 0, 0, 0, 0, 31, 0,\r\n    /* 96 */ 2, 4, 8, 0, 0, 0, 0, 0,\r\n    /* 97 */ 0, 0, 14, 16, 30, 17, 30, 0,\r\n    /* 98 */ 1, 1, 13, 19, 17, 17, 15, 0,\r\n    /* 99 */ 0, 0, 14, 1, 1, 17, 14, 0,\r\n    /* 100 */ 16, 16, 22, 25, 17, 17, 30, 0,\r\n    /* 101 */ 0, 0, 14, 17, 31, 1, 14, 0,\r\n    /* 102 */ 12, 18, 2, 7, 2, 2, 2, 0,\r\n    /* 103 */ 0, 30, 17, 17, 30, 16, 14, 0,\r\n    /* 104 */ 1, 1, 13, 19, 17, 17, 17, 0,\r\n    /* 105 */ 4, 0, 6, 4, 4, 4, 14, 0,\r\n    /* 106 */ 8, 0, 12, 8, 8, 9, 6, 0,\r\n    /* 107 */ 1, 1, 9, 5, 3, 5, 9, 0,\r\n    /* 108 */ 6, 4, 4, 4, 4, 4, 14, 0,\r\n    /* 109 */ 0, 0, 11, 21, 21, 17, 17, 0,\r\n    /* 110 */ 0, 0, 13, 19, 17, 17, 17, 0,\r\n    /* 111 */ 0, 0, 14, 17, 17, 17, 14, 0,\r\n    /* 112 */ 0, 0, 15, 17, 15, 1, 1, 0,\r\n    /* 113 */ 0, 0, 22, 25, 30, 16, 16, 0,\r\n    /* 114 */ 0, 0, 13, 19, 1, 1, 1, 0,\r\n    /* 115 */ 0, 0, 14, 1, 14, 16, 15, 0,\r\n    /* 116 */ 2, 2, 7, 2, 2, 18, 12, 0,\r\n    /* 117 */ 0, 0, 17, 17, 17, 25, 22, 0,\r\n    /* 118 */ 0, 0, 17, 17, 17, 10, 4, 0,\r\n    /* 119 */ 0, 0, 17, 21, 21, 21, 10, 0,\r\n    /* 120 */ 0, 0, 17, 10, 4, 10, 17, 0,\r\n    /* 121 */ 0, 0, 17, 17, 30, 16, 14, 0,\r\n    /* 122 */ 0, 0, 31, 8, 4, 2, 31, 0,\r\n    /* 123 */ 8, 4, 4, 2, 4, 4, 8, 0,\r\n    /* 124 */ 4, 4, 4, 4, 4, 4, 4, 0,\r\n    /* 125 */ 2, 4, 4, 8, 4, 4, 2, 0,\r\n    /* 126 */ 0, 4, 8, 31, 8, 4, 0, 0,\r\n    /* 127 */ 0, 4, 2, 31, 2, 4, 0, 0,\r\n    /* 128 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 129 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 130 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 131 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 132 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 133 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 134 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 135 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 136 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 137 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 138 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 139 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 140 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 141 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 142 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 143 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 144 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 145 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 146 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 147 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 148 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 149 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 150 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 151 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 152 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 153 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 154 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 155 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 156 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 157 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 158 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 159 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 160 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 161 */ 0, 0, 0, 0, 7, 5, 7, 0,\r\n    /* 162 */ 28, 4, 4, 4, 0, 0, 0, 0,\r\n    /* 163 */ 0, 0, 0, 4, 4, 4, 7, 0,\r\n    /* 164 */ 0, 0, 0, 0, 1, 2, 4, 0,\r\n    /* 165 */ 0, 0, 0, 6, 6, 0, 0, 0,\r\n    /* 166 */ 0, 31, 16, 31, 16, 8, 4, 0,\r\n    /* 167 */ 0, 0, 31, 16, 12, 4, 2, 0,\r\n    /* 168 */ 0, 0, 8, 4, 6, 5, 4, 0,\r\n    /* 169 */ 0, 0, 4, 31, 17, 16, 12, 0,\r\n    /* 170 */ 0, 0, 31, 4, 4, 4, 31, 0,\r\n    /* 171 */ 0, 0, 8, 31, 12, 10, 9, 0,\r\n    /* 172 */ 0, 0, 2, 31, 18, 10, 2, 0,\r\n    /* 173 */ 0, 0, 0, 14, 8, 8, 31, 0,\r\n    /* 174 */ 0, 0, 15, 8, 15, 8, 15, 0,\r\n    /* 175 */ 0, 0, 0, 21, 21, 16, 12, 0,\r\n    /* 176 */ 0, 0, 0, 31, 0, 0, 0, 0,\r\n    /* 177 */ 31, 16, 20, 12, 4, 4, 2, 0,\r\n    /* 178 */ 16, 8, 4, 6, 5, 4, 4, 0,\r\n    /* 179 */ 4, 31, 17, 17, 16, 8, 4, 0,\r\n    /* 180 */ 0, 31, 4, 4, 4, 4, 31, 0,\r\n    /* 181 */ 8, 31, 8, 12, 10, 9, 8, 0,\r\n    /* 182 */ 2, 31, 18, 18, 18, 18, 9, 0,\r\n    /* 183 */ 4, 31, 4, 31, 4, 4, 4, 0,\r\n    /* 184 */ 0, 30, 18, 17, 16, 8, 6, 0,\r\n    /* 185 */ 2, 30, 9, 8, 8, 8, 4, 0,\r\n    /* 186 */ 0, 31, 16, 16, 16, 16, 31, 0,\r\n    /* 187 */ 10, 31, 10, 10, 8, 4, 2, 0,\r\n    /* 188 */ 0, 3, 16, 19, 16, 8, 7, 0,\r\n    /* 189 */ 0, 31, 16, 8, 4, 10, 17, 0,\r\n    /* 190 */ 2, 31, 18, 10, 2, 2, 28, 0,\r\n    /* 191 */ 0, 17, 17, 18, 16, 8, 6, 0,\r\n    /* 192 */ 0, 30, 18, 21, 24, 8, 6, 0,\r\n    /* 193 */ 8, 7, 4, 31, 4, 4, 2, 0,\r\n    /* 194 */ 0, 21, 21, 21, 16, 8, 4, 0,\r\n    /* 195 */ 14, 0, 31, 4, 4, 4, 2, 0,\r\n    /* 196 */ 2, 2, 2, 6, 10, 2, 2, 0,\r\n    /* 197 */ 4, 4, 31, 4, 4, 2, 1, 0,\r\n    /* 198 */ 0, 14, 0, 0, 0, 0, 31, 0,\r\n    /* 199 */ 0, 31, 16, 10, 4, 10, 1, 0,\r\n    /* 200 */ 4, 31, 8, 4, 14, 21, 4, 0,\r\n    /* 201 */ 8, 8, 8, 8, 8, 4, 2, 0,\r\n    /* 202 */ 0, 4, 8, 17, 17, 17, 17, 0,\r\n    /* 203 */ 1, 1, 31, 1, 1, 1, 30, 0,\r\n    /* 204 */ 0, 31, 16, 16, 16, 8, 6, 0,\r\n    /* 205 */ 0, 2, 5, 8, 16, 16, 0, 0,\r\n    /* 206 */ 4, 31, 4, 4, 21, 21, 4, 0,\r\n    /* 207 */ 0, 31, 16, 16, 10, 4, 8, 0,\r\n    /* 208 */ 0, 14, 0, 14, 0, 14, 16, 0,\r\n    /* 209 */ 0, 4, 2, 1, 17, 31, 16, 0,\r\n    /* 210 */ 0, 16, 16, 10, 4, 10, 1, 0,\r\n    /* 211 */ 0, 31, 2, 31, 2, 2, 28, 0,\r\n    /* 212 */ 2, 2, 31, 18, 10, 2, 2, 0,\r\n    /* 213 */ 0, 14, 8, 8, 8, 8, 31, 0,\r\n    /* 214 */ 0, 31, 16, 31, 16, 16, 31, 0,\r\n    /* 215 */ 14, 0, 31, 16, 16, 8, 4, 0,\r\n    /* 216 */ 9, 9, 9, 9, 8, 4, 2, 0,\r\n    /* 217 */ 0, 4, 5, 5, 21, 21, 13, 0,\r\n    /* 218 */ 0, 1, 1, 17, 9, 5, 3, 0,\r\n    /* 219 */ 0, 31, 17, 17, 17, 17, 31, 0,\r\n    /* 220 */ 0, 31, 17, 17, 16, 8, 4, 0,\r\n    /* 221 */ 0, 3, 0, 16, 16, 8, 7, 0,\r\n    /* 222 */ 4, 9, 2, 0, 0, 0, 0, 0,\r\n    /* 223 */ 7, 5, 7, 0, 0, 0, 0, 0,\r\n    /* 224 */ 0, 0, 18, 21, 9, 9, 22, 0,\r\n    /* 225 */ 10, 0, 14, 16, 30, 17, 30, 0,\r\n    /* 226 */ 0, 0, 14, 17, 15, 17, 15, 1,\r\n    /* 227 */ 0, 0, 14, 1, 6, 17, 14, 0,\r\n    /* 228 */ 0, 0, 17, 17, 17, 25, 23, 1,\r\n    /* 229 */ 0, 0, 30, 5, 9, 17, 14, 0,\r\n    /* 230 */ 0, 0, 12, 18, 17, 17, 15, 1,\r\n    /* 231 */ 0, 0, 30, 17, 17, 17, 30, 16,\r\n    /* 232 */ 0, 0, 28, 4, 4, 5, 2, 0,\r\n    /* 233 */ 0, 8, 11, 8, 0, 0, 0, 0,\r\n    /* 234 */ 8, 0, 12, 8, 8, 8, 8, 8,\r\n    /* 235 */ 0, 5, 2, 5, 0, 0, 0, 0,\r\n    /* 236 */ 0, 4, 14, 5, 21, 14, 4, 0,\r\n    /* 237 */ 2, 2, 7, 2, 7, 2, 30, 0,\r\n    /* 238 */ 14, 0, 13, 19, 17, 17, 17, 0,\r\n    /* 239 */ 10, 0, 14, 17, 17, 17, 14, 0,\r\n    /* 240 */ 0, 0, 13, 19, 17, 17, 15, 1,\r\n    /* 241 */ 0, 0, 22, 25, 17, 17, 30, 16,\r\n    /* 242 */ 0, 14, 17, 31, 17, 17, 14, 0,\r\n    /* 243 */ 0, 0, 0, 26, 21, 11, 0, 0,\r\n    /* 244 */ 0, 0, 14, 17, 17, 10, 27, 0,\r\n    /* 245 */ 10, 0, 17, 17, 17, 17, 25, 22,\r\n    /* 246 */ 31, 1, 2, 4, 2, 1, 31, 0,\r\n    /* 247 */ 0, 0, 31, 10, 10, 10, 25, 0,\r\n    /* 248 */ 31, 0, 17, 10, 4, 10, 17, 0,\r\n    /* 249 */ 0, 0, 17, 17, 17, 17, 30, 16,\r\n    /* 250 */ 0, 16, 15, 4, 31, 4, 4, 0,\r\n    /* 251 */ 0, 0, 31, 2, 30, 18, 17, 0,\r\n    /* 252 */ 0, 0, 31, 21, 31, 17, 17, 0,\r\n    /* 253 */ 0, 4, 0, 31, 0, 4, 0, 0,\r\n    /* 254 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 255 */ 31, 31, 31, 31, 31, 31, 31, 31,\r\n]);\r\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { customElement, html, LitElement, property, css, svg } from 'lit-element';\r\nimport { fontA00 } from './lcd1602-font-a00';\r\nconst ROWS = 2;\r\nconst COLS = 16;\r\nconst charXSpacing = 3.55;\r\nconst charYSpacing = 5.95;\r\nconst backgroundColors = {\r\n    green: '#6cb201',\r\n    blue: '#000eff'\r\n};\r\nlet LCD1602Element = class LCD1602Element extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.color = 'black';\r\n        this.background = 'green';\r\n        this.characters = new Uint8Array(32);\r\n        this.font = fontA00;\r\n        this.cursor = false;\r\n        this.blink = false;\r\n        this.cursorX = 0;\r\n        this.cursorY = 0;\r\n        this.backlight = true;\r\n    }\r\n    static get styles() {\r\n        return css `\r\n      .cursor-blink {\r\n        animation: cursor-blink;\r\n      }\r\n\r\n      @keyframes cursor-blink {\r\n        from {\r\n          opacity: 0;\r\n        }\r\n        25% {\r\n          opacity: 1;\r\n        }\r\n        75% {\r\n          opacity: 1;\r\n        }\r\n        to {\r\n          opacity: 0;\r\n        }\r\n      }\r\n    `;\r\n    }\r\n    path(characters) {\r\n        const xSpacing = 0.6;\r\n        const ySpacing = 0.7;\r\n        const result = [];\r\n        for (let i = 0; i < characters.length; i++) {\r\n            const charX = (i % COLS) * charXSpacing;\r\n            const charY = Math.floor(i / COLS) * charYSpacing;\r\n            for (let py = 0; py < 8; py++) {\r\n                const row = this.font[characters[i] * 8 + py];\r\n                for (let px = 0; px < 5; px++) {\r\n                    if (row & (1 << px)) {\r\n                        const x = (charX + px * xSpacing).toFixed(2);\r\n                        const y = (charY + py * ySpacing).toFixed(2);\r\n                        result.push(`M ${x} ${y}h0.55v0.65h-0.55Z`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result.join(' ');\r\n    }\r\n    renderCursor() {\r\n        const xOffset = 12.45 + this.cursorX * charXSpacing;\r\n        const yOffset = 12.55 + this.cursorY * charYSpacing;\r\n        if (this.cursorX < 0 || this.cursorX >= COLS || this.cursorY < 0 || this.cursorY >= ROWS) {\r\n            return null;\r\n        }\r\n        const result = [];\r\n        if (this.blink) {\r\n            result.push(svg `\r\n        <rect x=\"${xOffset}\" y=\"${yOffset}\" width=\"2.95\" height=\"5.55\" fill=\"${this.color}\">\r\n          <animate\r\n            attributeName=\"opacity\"\r\n            values=\"0;0;0;0;1;1;0;0;0;0\"\r\n            dur=\"1s\"\r\n            fill=\"freeze\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </rect>\r\n      `);\r\n        }\r\n        if (this.cursor) {\r\n            const y = yOffset + 0.7 * 7;\r\n            result.push(svg `<rect x=\"${xOffset}\" y=\"${y}\" width=\"2.95\" height=\"0.65\" fill=\"${this.color}\" />`);\r\n        }\r\n        return result;\r\n    }\r\n    render() {\r\n        const { color, characters, background } = this;\r\n        const darken = this.backlight ? 0 : 0.5;\r\n        const actualBgColor = background in backgroundColors ? backgroundColors[background] : backgroundColors;\r\n        // Dimensions according to:\r\n        // https://www.winstar.com.tw/products/character-lcd-display-module/16x2-lcd.html\r\n        return html `\r\n      <svg\r\n        width=\"80mm\"\r\n        height=\"36mm\"\r\n        version=\"1.1\"\r\n        viewBox=\"0 0 80 36\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <defs>\r\n          <pattern\r\n            id=\"characters\"\r\n            width=\"3.55\"\r\n            height=\"5.95\"\r\n            patternUnits=\"userSpaceOnUse\"\r\n            x=\"12.45\"\r\n            y=\"12.55\"\r\n          >\r\n            <rect width=\"2.95\" height=\"5.55\" fill-opacity=\"0.05\" />\r\n          </pattern>\r\n        </defs>\r\n        <rect width=\"80\" height=\"36\" fill=\"#087f45\" />\r\n        <rect x=\"4.95\" y=\"5.7\" width=\"71.2\" height=\"25.2\" />\r\n        <rect x=\"7.55\" y=\"10.3\" width=\"66\" height=\"16\" rx=\"1.5\" ry=\"1.5\" fill=\"${actualBgColor}\" />\r\n        <rect x=\"7.55\" y=\"10.3\" width=\"66\" height=\"16\" rx=\"1.5\" ry=\"1.5\" opacity=\"${darken}\" />\r\n        <rect x=\"12.45\" y=\"12.55\" width=\"56.2\" height=\"11.5\" fill=\"url(#characters)\" />\r\n        <path d=\"${this.path(characters)}\" transform=\"translate(12.45, 12.55)\" fill=\"${color}\" />\r\n        ${this.renderCursor()}\r\n      </svg>\r\n    `;\r\n    }\r\n};\r\n__decorate([\r\n    property()\r\n], LCD1602Element.prototype, \"color\", void 0);\r\n__decorate([\r\n    property()\r\n], LCD1602Element.prototype, \"background\", void 0);\r\n__decorate([\r\n    property({ type: Array })\r\n], LCD1602Element.prototype, \"characters\", void 0);\r\n__decorate([\r\n    property()\r\n], LCD1602Element.prototype, \"font\", void 0);\r\n__decorate([\r\n    property()\r\n], LCD1602Element.prototype, \"cursor\", void 0);\r\n__decorate([\r\n    property()\r\n], LCD1602Element.prototype, \"blink\", void 0);\r\n__decorate([\r\n    property()\r\n], LCD1602Element.prototype, \"cursorX\", void 0);\r\n__decorate([\r\n    property()\r\n], LCD1602Element.prototype, \"cursorY\", void 0);\r\n__decorate([\r\n    property()\r\n], LCD1602Element.prototype, \"backlight\", void 0);\r\nLCD1602Element = __decorate([\r\n    customElement('wokwi-lcd1602')\r\n], LCD1602Element);\r\nexport { LCD1602Element };\r\n","// Font rasterized from datasheet: https://www.sparkfun.com/datasheets/LCD/HD44780.pdf\r\n// prettier-ignore\r\nexport const fontA02 = new Uint8Array([\r\n    /* 0 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 1 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 2 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 3 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 4 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 5 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 6 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 7 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 8 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 9 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 10 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 11 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 12 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 13 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 14 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 15 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 32 */ 0, 2, 6, 14, 30, 14, 6, 2,\r\n    /* 33 */ 0, 8, 12, 14, 15, 14, 12, 8,\r\n    /* 34 */ 0, 18, 9, 27, 0, 0, 0, 0,\r\n    /* 35 */ 0, 27, 18, 9, 0, 0, 0, 0,\r\n    /* 36 */ 0, 4, 14, 31, 0, 4, 14, 31,\r\n    /* 37 */ 0, 31, 14, 4, 0, 31, 14, 4,\r\n    /* 38 */ 0, 0, 14, 31, 31, 31, 14, 0,\r\n    /* 39 */ 0, 16, 16, 20, 18, 31, 2, 4,\r\n    /* 40 */ 0, 4, 14, 21, 4, 4, 4, 4,\r\n    /* 41 */ 0, 4, 4, 4, 4, 21, 14, 4,\r\n    /* 42 */ 0, 0, 4, 8, 31, 8, 4, 0,\r\n    /* 43 */ 0, 0, 4, 2, 31, 2, 4, 0,\r\n    /* 44 */ 0, 8, 4, 2, 4, 8, 0, 31,\r\n    /* 45 */ 0, 2, 4, 8, 4, 2, 0, 31,\r\n    /* 46 */ 0, 0, 4, 4, 14, 14, 31, 0,\r\n    /* 47 */ 0, 0, 31, 14, 14, 4, 4, 0,\r\n    /* 48 */ 0, 0, 0, 0, 0, 0, 0, 0,\r\n    /* 49 */ 0, 4, 4, 4, 4, 0, 0, 4,\r\n    /* 50 */ 0, 10, 10, 10, 0, 0, 0, 0,\r\n    /* 51 */ 0, 10, 10, 31, 10, 31, 10, 10,\r\n    /* 52 */ 0, 4, 30, 5, 14, 20, 15, 4,\r\n    /* 53 */ 0, 3, 19, 8, 4, 2, 25, 24,\r\n    /* 54 */ 0, 6, 9, 5, 2, 21, 9, 22,\r\n    /* 55 */ 0, 6, 4, 2, 0, 0, 0, 0,\r\n    /* 56 */ 0, 8, 4, 2, 2, 2, 4, 8,\r\n    /* 57 */ 0, 2, 4, 8, 8, 8, 4, 2,\r\n    /* 58 */ 0, 0, 4, 21, 14, 21, 4, 0,\r\n    /* 59 */ 0, 0, 4, 4, 31, 4, 4, 0,\r\n    /* 60 */ 0, 0, 0, 0, 0, 6, 4, 2,\r\n    /* 61 */ 0, 0, 0, 0, 31, 0, 0, 0,\r\n    /* 62 */ 0, 0, 0, 0, 0, 0, 6, 6,\r\n    /* 63 */ 0, 0, 16, 8, 4, 2, 1, 0,\r\n    /* 64 */ 0, 14, 17, 25, 21, 19, 17, 14,\r\n    /* 65 */ 0, 4, 6, 4, 4, 4, 4, 14,\r\n    /* 66 */ 0, 14, 17, 16, 8, 4, 2, 31,\r\n    /* 67 */ 0, 31, 8, 4, 8, 16, 17, 14,\r\n    /* 68 */ 0, 8, 12, 10, 9, 31, 8, 8,\r\n    /* 69 */ 0, 31, 1, 15, 16, 16, 17, 14,\r\n    /* 70 */ 0, 12, 2, 1, 15, 17, 17, 14,\r\n    /* 71 */ 0, 31, 17, 16, 8, 4, 4, 4,\r\n    /* 72 */ 0, 14, 17, 17, 14, 17, 17, 14,\r\n    /* 73 */ 0, 14, 17, 17, 30, 16, 8, 6,\r\n    /* 74 */ 0, 0, 6, 6, 0, 6, 6, 0,\r\n    /* 75 */ 0, 0, 6, 6, 0, 6, 4, 2,\r\n    /* 76 */ 0, 8, 4, 2, 1, 2, 4, 8,\r\n    /* 77 */ 0, 0, 0, 31, 0, 31, 0, 0,\r\n    /* 78 */ 0, 2, 4, 8, 16, 8, 4, 2,\r\n    /* 79 */ 0, 14, 17, 16, 8, 4, 0, 4,\r\n    /* 80 */ 0, 14, 17, 16, 22, 21, 21, 14,\r\n    /* 81 */ 0, 4, 10, 17, 17, 31, 17, 17,\r\n    /* 82 */ 0, 15, 17, 17, 15, 17, 17, 15,\r\n    /* 83 */ 0, 14, 17, 1, 1, 1, 17, 14,\r\n    /* 84 */ 0, 7, 9, 17, 17, 17, 9, 7,\r\n    /* 85 */ 0, 31, 1, 1, 15, 1, 1, 31,\r\n    /* 86 */ 0, 31, 1, 1, 15, 1, 1, 1,\r\n    /* 87 */ 0, 14, 17, 1, 29, 17, 17, 30,\r\n    /* 88 */ 0, 17, 17, 17, 31, 17, 17, 17,\r\n    /* 89 */ 0, 14, 4, 4, 4, 4, 4, 14,\r\n    /* 90 */ 0, 28, 8, 8, 8, 8, 9, 6,\r\n    /* 91 */ 0, 17, 9, 5, 3, 5, 9, 17,\r\n    /* 92 */ 0, 1, 1, 1, 1, 1, 1, 31,\r\n    /* 93 */ 0, 17, 27, 21, 21, 17, 17, 17,\r\n    /* 94 */ 0, 17, 17, 19, 21, 25, 17, 17,\r\n    /* 95 */ 0, 14, 17, 17, 17, 17, 17, 14,\r\n    /* 96 */ 0, 15, 17, 17, 15, 1, 1, 1,\r\n    /* 97 */ 0, 14, 17, 17, 17, 21, 9, 22,\r\n    /* 98 */ 0, 15, 17, 17, 15, 5, 9, 17,\r\n    /* 99 */ 0, 14, 17, 1, 14, 16, 17, 14,\r\n    /* 100 */ 0, 31, 4, 4, 4, 4, 4, 4,\r\n    /* 101 */ 0, 17, 17, 17, 17, 17, 17, 14,\r\n    /* 102 */ 0, 17, 17, 17, 17, 17, 10, 4,\r\n    /* 103 */ 0, 17, 17, 17, 21, 21, 21, 10,\r\n    /* 104 */ 0, 17, 17, 10, 4, 10, 17, 17,\r\n    /* 105 */ 0, 17, 17, 17, 10, 4, 4, 4,\r\n    /* 106 */ 0, 31, 16, 8, 4, 2, 1, 31,\r\n    /* 107 */ 0, 14, 2, 2, 2, 2, 2, 14,\r\n    /* 108 */ 0, 0, 1, 2, 4, 8, 16, 0,\r\n    /* 109 */ 0, 14, 8, 8, 8, 8, 8, 14,\r\n    /* 110 */ 0, 4, 10, 17, 0, 0, 0, 0,\r\n    /* 111 */ 0, 0, 0, 0, 0, 0, 0, 31,\r\n    /* 112 */ 0, 2, 4, 8, 0, 0, 0, 0,\r\n    /* 113 */ 0, 0, 0, 14, 16, 30, 17, 30,\r\n    /* 114 */ 0, 1, 1, 13, 19, 17, 17, 15,\r\n    /* 115 */ 0, 0, 0, 14, 1, 1, 17, 14,\r\n    /* 116 */ 0, 16, 16, 22, 25, 17, 17, 30,\r\n    /* 117 */ 0, 0, 0, 14, 17, 31, 1, 14,\r\n    /* 118 */ 0, 12, 18, 2, 7, 2, 2, 2,\r\n    /* 119 */ 0, 0, 0, 30, 17, 30, 16, 14,\r\n    /* 120 */ 0, 1, 1, 13, 19, 17, 17, 17,\r\n    /* 121 */ 0, 4, 0, 4, 6, 4, 4, 14,\r\n    /* 122 */ 0, 8, 0, 12, 8, 8, 9, 6,\r\n    /* 123 */ 0, 1, 1, 9, 5, 3, 5, 9,\r\n    /* 124 */ 0, 6, 4, 4, 4, 4, 4, 14,\r\n    /* 125 */ 0, 0, 0, 11, 21, 21, 21, 21,\r\n    /* 126 */ 0, 0, 0, 13, 19, 17, 17, 17,\r\n    /* 127 */ 0, 0, 0, 14, 17, 17, 17, 14,\r\n    /* 128 */ 0, 0, 0, 15, 17, 15, 1, 1,\r\n    /* 129 */ 0, 0, 0, 22, 25, 30, 16, 16,\r\n    /* 130 */ 0, 0, 0, 13, 19, 1, 1, 1,\r\n    /* 131 */ 0, 0, 0, 14, 1, 14, 16, 15,\r\n    /* 132 */ 0, 2, 2, 7, 2, 2, 18, 12,\r\n    /* 133 */ 0, 0, 0, 17, 17, 17, 25, 22,\r\n    /* 134 */ 0, 0, 0, 17, 17, 17, 10, 4,\r\n    /* 135 */ 0, 0, 0, 17, 17, 21, 21, 10,\r\n    /* 136 */ 0, 0, 0, 17, 10, 4, 10, 17,\r\n    /* 137 */ 0, 0, 0, 17, 17, 30, 16, 14,\r\n    /* 138 */ 0, 0, 0, 31, 8, 4, 2, 31,\r\n    /* 139 */ 0, 8, 4, 4, 2, 4, 4, 8,\r\n    /* 140 */ 0, 4, 4, 4, 4, 4, 4, 4,\r\n    /* 141 */ 0, 2, 4, 4, 8, 4, 4, 2,\r\n    /* 142 */ 0, 0, 0, 0, 22, 9, 0, 0,\r\n    /* 143 */ 0, 4, 10, 17, 17, 17, 31, 0,\r\n    /* 144 */ 0, 31, 17, 1, 15, 17, 17, 15,\r\n    /* 145 */ 30, 20, 20, 18, 17, 31, 17, 17,\r\n    /* 146 */ 0, 21, 21, 21, 14, 21, 21, 21,\r\n    /* 147 */ 0, 15, 16, 16, 12, 16, 16, 15,\r\n    /* 148 */ 0, 17, 17, 25, 21, 19, 17, 17,\r\n    /* 149 */ 10, 4, 17, 17, 25, 21, 19, 17,\r\n    /* 150 */ 0, 30, 20, 20, 20, 20, 21, 18,\r\n    /* 151 */ 0, 31, 17, 17, 17, 17, 17, 17,\r\n    /* 152 */ 0, 17, 17, 17, 10, 4, 2, 1,\r\n    /* 153 */ 0, 17, 17, 17, 17, 17, 31, 16,\r\n    /* 154 */ 0, 17, 17, 17, 30, 16, 16, 16,\r\n    /* 155 */ 0, 0, 21, 21, 21, 21, 21, 31,\r\n    /* 156 */ 0, 21, 21, 21, 21, 21, 31, 16,\r\n    /* 157 */ 0, 3, 2, 2, 14, 18, 18, 14,\r\n    /* 158 */ 0, 17, 17, 17, 19, 21, 21, 19,\r\n    /* 159 */ 0, 14, 17, 20, 26, 16, 17, 14,\r\n    /* 160 */ 0, 0, 0, 18, 21, 9, 9, 22,\r\n    /* 161 */ 0, 4, 12, 20, 20, 4, 7, 7,\r\n    /* 162 */ 0, 31, 17, 1, 1, 1, 1, 1,\r\n    /* 163 */ 0, 0, 0, 31, 10, 10, 10, 25,\r\n    /* 164 */ 0, 31, 1, 2, 4, 2, 1, 31,\r\n    /* 165 */ 0, 0, 0, 30, 9, 9, 9, 6,\r\n    /* 166 */ 12, 20, 28, 20, 20, 23, 27, 24,\r\n    /* 167 */ 0, 0, 16, 14, 5, 4, 4, 8,\r\n    /* 168 */ 0, 4, 14, 14, 14, 31, 4, 0,\r\n    /* 169 */ 0, 14, 17, 17, 31, 17, 17, 14,\r\n    /* 170 */ 0, 0, 14, 17, 17, 17, 10, 27,\r\n    /* 171 */ 0, 12, 18, 4, 10, 17, 17, 14,\r\n    /* 172 */ 0, 0, 0, 26, 21, 11, 0, 0,\r\n    /* 173 */ 0, 0, 10, 31, 31, 31, 14, 4,\r\n    /* 174 */ 0, 0, 0, 14, 1, 6, 17, 14,\r\n    /* 175 */ 0, 14, 17, 17, 17, 17, 17, 17,\r\n    /* 176 */ 0, 27, 27, 27, 27, 27, 27, 27,\r\n    /* 177 */ 0, 4, 0, 0, 4, 4, 4, 4,\r\n    /* 178 */ 0, 4, 14, 5, 5, 21, 14, 4,\r\n    /* 179 */ 0, 12, 2, 2, 7, 2, 18, 13,\r\n    /* 180 */ 0, 0, 17, 14, 10, 14, 17, 0,\r\n    /* 181 */ 0, 17, 10, 31, 4, 31, 4, 4,\r\n    /* 182 */ 0, 4, 4, 4, 0, 4, 4, 4,\r\n    /* 183 */ 0, 12, 18, 4, 10, 4, 9, 6,\r\n    /* 184 */ 0, 8, 20, 4, 31, 4, 5, 2,\r\n    /* 185 */ 0, 31, 17, 21, 29, 21, 17, 31,\r\n    /* 186 */ 0, 14, 16, 30, 17, 30, 0, 31,\r\n    /* 187 */ 0, 0, 20, 10, 5, 10, 20, 0,\r\n    /* 188 */ 0, 9, 21, 21, 23, 21, 21, 9,\r\n    /* 189 */ 0, 30, 17, 17, 30, 20, 18, 17,\r\n    /* 190 */ 0, 31, 17, 21, 17, 25, 21, 31,\r\n    /* 191 */ 0, 4, 2, 6, 0, 0, 0, 0,\r\n    /* 192 */ 6, 9, 9, 9, 6, 0, 0, 0,\r\n    /* 193 */ 0, 4, 4, 31, 4, 4, 0, 31,\r\n    /* 194 */ 6, 9, 4, 2, 15, 0, 0, 0,\r\n    /* 195 */ 7, 8, 6, 8, 7, 0, 0, 0,\r\n    /* 196 */ 7, 9, 7, 1, 9, 29, 9, 24,\r\n    /* 197 */ 0, 17, 17, 17, 25, 23, 1, 1,\r\n    /* 198 */ 0, 30, 25, 25, 30, 24, 24, 24,\r\n    /* 199 */ 0, 0, 0, 0, 6, 6, 0, 0,\r\n    /* 200 */ 0, 0, 0, 10, 17, 21, 21, 10,\r\n    /* 201 */ 2, 3, 2, 2, 7, 0, 0, 0,\r\n    /* 202 */ 0, 14, 17, 17, 17, 14, 0, 31,\r\n    /* 203 */ 0, 0, 5, 10, 20, 10, 5, 0,\r\n    /* 204 */ 17, 9, 5, 10, 13, 10, 30, 8,\r\n    /* 205 */ 17, 9, 5, 10, 21, 16, 8, 28,\r\n    /* 206 */ 3, 2, 3, 18, 27, 20, 28, 16,\r\n    /* 207 */ 0, 4, 0, 4, 2, 1, 17, 14,\r\n    /* 208 */ 2, 4, 4, 10, 17, 31, 17, 17,\r\n    /* 209 */ 8, 4, 4, 10, 17, 31, 17, 17,\r\n    /* 210 */ 4, 10, 0, 14, 17, 31, 17, 17,\r\n    /* 211 */ 22, 9, 0, 14, 17, 31, 17, 17,\r\n    /* 212 */ 10, 0, 4, 10, 17, 31, 17, 17,\r\n    /* 213 */ 4, 10, 4, 14, 17, 31, 17, 17,\r\n    /* 214 */ 0, 28, 6, 5, 29, 7, 5, 29,\r\n    /* 215 */ 14, 17, 1, 1, 17, 14, 8, 12,\r\n    /* 216 */ 2, 4, 0, 31, 1, 15, 1, 31,\r\n    /* 217 */ 8, 4, 0, 31, 1, 15, 1, 31,\r\n    /* 218 */ 4, 10, 0, 31, 1, 15, 1, 31,\r\n    /* 219 */ 0, 10, 0, 31, 1, 15, 1, 31,\r\n    /* 220 */ 2, 4, 0, 14, 4, 4, 4, 14,\r\n    /* 221 */ 8, 4, 0, 14, 4, 4, 4, 14,\r\n    /* 222 */ 4, 10, 0, 14, 4, 4, 4, 14,\r\n    /* 223 */ 0, 10, 0, 14, 4, 4, 4, 14,\r\n    /* 224 */ 0, 14, 18, 18, 23, 18, 18, 14,\r\n    /* 225 */ 22, 9, 0, 17, 19, 21, 25, 17,\r\n    /* 226 */ 2, 4, 14, 17, 17, 17, 17, 14,\r\n    /* 227 */ 8, 4, 14, 17, 17, 17, 17, 14,\r\n    /* 228 */ 4, 10, 0, 14, 17, 17, 17, 14,\r\n    /* 229 */ 22, 9, 0, 14, 17, 17, 17, 14,\r\n    /* 230 */ 10, 0, 14, 17, 17, 17, 17, 14,\r\n    /* 231 */ 0, 0, 17, 10, 4, 10, 17, 0,\r\n    /* 232 */ 0, 14, 4, 14, 21, 14, 4, 14,\r\n    /* 233 */ 2, 4, 17, 17, 17, 17, 17, 14,\r\n    /* 234 */ 8, 4, 17, 17, 17, 17, 17, 14,\r\n    /* 235 */ 4, 10, 0, 17, 17, 17, 17, 14,\r\n    /* 236 */ 10, 0, 17, 17, 17, 17, 17, 14,\r\n    /* 237 */ 8, 4, 17, 10, 4, 4, 4, 4,\r\n    /* 238 */ 3, 2, 14, 18, 18, 14, 2, 7,\r\n    /* 239 */ 0, 12, 18, 18, 14, 18, 18, 13,\r\n    /* 240 */ 2, 4, 0, 14, 16, 30, 17, 30,\r\n    /* 241 */ 8, 4, 0, 14, 16, 30, 17, 30,\r\n    /* 242 */ 4, 10, 0, 14, 16, 30, 17, 30,\r\n    /* 243 */ 22, 9, 0, 14, 16, 30, 17, 30,\r\n    /* 244 */ 0, 10, 0, 14, 16, 30, 17, 30,\r\n    /* 245 */ 4, 10, 4, 14, 16, 30, 17, 30,\r\n    /* 246 */ 0, 0, 11, 20, 30, 5, 21, 10,\r\n    /* 247 */ 0, 0, 14, 1, 17, 14, 4, 6,\r\n    /* 248 */ 2, 4, 0, 14, 17, 31, 1, 14,\r\n    /* 249 */ 8, 4, 0, 14, 17, 31, 1, 14,\r\n    /* 250 */ 4, 10, 0, 14, 17, 31, 1, 14,\r\n    /* 251 */ 0, 10, 0, 14, 17, 31, 1, 14,\r\n    /* 252 */ 2, 4, 0, 4, 6, 4, 4, 14,\r\n    /* 253 */ 8, 4, 0, 4, 6, 4, 4, 14,\r\n    /* 254 */ 4, 10, 0, 4, 6, 4, 4, 14,\r\n    /* 255 */ 0, 10, 0, 4, 6, 4, 4, 14,\r\n    /* 256 */ 0, 5, 2, 5, 8, 30, 17, 14,\r\n    /* 257 */ 22, 9, 0, 13, 19, 17, 17, 17,\r\n    /* 258 */ 2, 4, 0, 14, 17, 17, 17, 14,\r\n    /* 259 */ 8, 4, 0, 14, 17, 17, 17, 14,\r\n    /* 260 */ 0, 4, 10, 0, 14, 17, 17, 14,\r\n    /* 261 */ 0, 22, 9, 0, 14, 17, 17, 14,\r\n    /* 262 */ 0, 10, 0, 14, 17, 17, 17, 14,\r\n    /* 263 */ 0, 0, 4, 0, 31, 0, 4, 0,\r\n    /* 264 */ 0, 8, 4, 14, 21, 14, 4, 2,\r\n    /* 265 */ 2, 4, 0, 17, 17, 17, 25, 22,\r\n    /* 266 */ 8, 4, 0, 17, 17, 17, 25, 22,\r\n    /* 267 */ 4, 10, 0, 17, 17, 17, 25, 22,\r\n    /* 268 */ 0, 10, 0, 17, 17, 17, 25, 22,\r\n    /* 269 */ 0, 8, 4, 17, 17, 30, 16, 14,\r\n    /* 270 */ 0, 6, 4, 12, 20, 12, 4, 14,\r\n    /* 271 */ 0, 10, 0, 17, 17, 30, 16, 14,\r\n]);\r\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { customElement, html, LitElement, property } from 'lit-element';\r\nlet NeoPixelElement = class NeoPixelElement extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.r = 0;\r\n        this.g = 0;\r\n        this.b = 0;\r\n    }\r\n    render() {\r\n        const { r, g, b } = this;\r\n        const spotOpacity = (value) => (value > 0.001 ? 0.7 + value * 0.3 : 0);\r\n        const maxOpacity = Math.max(r, g, b);\r\n        const minOpacity = Math.min(r, g, b);\r\n        const opacityDelta = maxOpacity - minOpacity;\r\n        const multiplier = Math.max(1, 2 - opacityDelta * 20);\r\n        const glowBase = 0.1 + Math.max(maxOpacity * 2 - opacityDelta * 5, 0);\r\n        const glowColor = (value) => (value > 0.005 ? 0.1 + value * 0.9 : 0);\r\n        const glowOpacity = (value) => (value > 0.005 ? glowBase + value * (1 - glowBase) : 0);\r\n        const cssVal = (value) => maxOpacity ? Math.floor(Math.min(glowColor(value / maxOpacity) * multiplier, 1) * 255) : 255;\r\n        const cssColor = `rgb(${cssVal(r)}, ${cssVal(g)}, ${cssVal(b)})`;\r\n        const bkgWhite = 242 -\r\n            (maxOpacity > 0.1 && opacityDelta < 0.2\r\n                ? Math.floor(maxOpacity * 50 * (1 - opacityDelta / 0.2))\r\n                : 0);\r\n        const background = `rgb(${bkgWhite}, ${bkgWhite}, ${bkgWhite})`;\r\n        return html `\r\n      <svg\r\n        width=\"5.6631mm\"\r\n        height=\"5mm\"\r\n        version=\"1.1\"\r\n        viewBox=\"0 0 5.6631 5\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <filter id=\"light1\" x=\"-0.8\" y=\"-0.8\" height=\"2.8\" width=\"2.8\">\r\n          <feGaussianBlur stdDeviation=\"${Math.max(0.1, maxOpacity)}\" />\r\n        </filter>\r\n        <filter id=\"light2\" x=\"-0.8\" y=\"-0.8\" height=\"2.2\" width=\"2.8\">\r\n          <feGaussianBlur stdDeviation=\"0.5\" />\r\n        </filter>\r\n        <rect x=\".33308\" y=\"0\" width=\"5\" height=\"5\" fill=\"${background}\" />\r\n        <rect x=\".016709\" y=\".4279\" width=\".35114\" height=\".9\" fill=\"#eaeaea\" />\r\n        <rect x=\"0\" y=\"3.6518\" width=\".35114\" height=\".9\" fill=\"#eaeaea\" />\r\n        <rect x=\"5.312\" y=\"3.6351\" width=\".35114\" height=\".9\" fill=\"#eaeaea\" />\r\n        <rect x=\"5.312\" y=\".3945\" width=\".35114\" height=\".9\" fill=\"#eaeaea\" />\r\n        <circle cx=\"2.8331\" cy=\"2.5\" r=\"2.1\" fill=\"#ddd\" />\r\n        <circle cx=\"2.8331\" cy=\"2.5\" r=\"1.7325\" fill=\"#e6e6e6\" />\r\n        <g fill=\"#bfbfbf\">\r\n          <path\r\n            d=\"m4.3488 3.3308s-0.0889-0.087-0.0889-0.1341c0-0.047-6e-3 -1.1533-6e-3 -1.1533s-0.0591-0.1772-0.2008-0.1772c-0.14174 0-0.81501 0.012-0.81501 0.012s-0.24805 0.024-0.23624 0.3071c0.0118 0.2835 0.032 2.0345 0.032 2.0345 0.54707-0.046 1.0487-0.3494 1.3146-0.8888z\"\r\n          />\r\n          <path\r\n            d=\"m4.34 1.6405h-1.0805s-0.24325 0.019-0.26204-0.2423l6e-3 -0.6241c0.57782 0.075 1.0332 0.3696 1.3366 0.8706z\"\r\n          />\r\n          <path\r\n            d=\"m2.7778 2.6103-0.17127 0.124-0.8091-0.012c-0.17122-0.019-0.17062-0.2078-0.17062-0.2078-1e-3 -0.3746 1e-3 -0.2831-9e-3 -0.8122l-0.31248-0.018s0.43453-0.9216 1.4786-0.9174c-1.1e-4 0.6144-4e-3 1.2289-6e-3 1.8434z\"\r\n          />\r\n          <path\r\n            d=\"m2.7808 3.0828-0.0915-0.095h-0.96857l-0.0915 0.1447-3e-3 0.1127c0 0.065-0.12108 0.08-0.12108 0.08h-0.20909c0.55906 0.9376 1.4867 0.9155 1.4867 0.9155 1e-3 -0.3845-2e-3 -0.7692-2e-3 -1.1537z\"\r\n          />\r\n        </g>\r\n        <path\r\n          d=\"m4.053 1.8619c-0.14174 0-0.81494 0.013-0.81494 0.013s-0.24797 0.024-0.23616 0.3084c3e-3 0.077 5e-3 0.3235 9e-3 0.5514h1.247c-2e-3 -0.33-4e-3 -0.6942-4e-3 -0.6942s-0.0593-0.1781-0.20102-0.1781z\"\r\n          fill=\"#666\"\r\n        />\r\n        <ellipse\r\n          cx=\"2.5\"\r\n          cy=\"2.3\"\r\n          rx=\"0.3\"\r\n          ry=\"0.3\"\r\n          fill=\"red\"\r\n          opacity=${spotOpacity(r)}\r\n          filter=\"url(#light1)\"\r\n        ></ellipse>\r\n        <ellipse\r\n          cx=\"3.5\"\r\n          cy=\"3.2\"\r\n          rx=\"0.3\"\r\n          ry=\"0.3\"\r\n          fill=\"green\"\r\n          opacity=${spotOpacity(g)}\r\n          filter=\"url(#light1)\"\r\n        ></ellipse>\r\n        <ellipse\r\n          cx=\"3.3\"\r\n          cy=\"1.45\"\r\n          rx=\"0.3\"\r\n          ry=\"0.3\"\r\n          fill=\"blue\"\r\n          opacity=${spotOpacity(b)}\r\n          filter=\"url(#light1)\"\r\n        ></ellipse>\r\n        <ellipse\r\n          cx=\"3\"\r\n          cy=\"2.5\"\r\n          rx=\"2.2\"\r\n          ry=\"2.2\"\r\n          opacity=\"${glowOpacity(maxOpacity)}\"\r\n          fill=\"${cssColor}\"\r\n          filter=\"url(#light2)\"\r\n        ></ellipse>\r\n      </svg>\r\n    `;\r\n    }\r\n};\r\n__decorate([\r\n    property()\r\n], NeoPixelElement.prototype, \"r\", void 0);\r\n__decorate([\r\n    property()\r\n], NeoPixelElement.prototype, \"g\", void 0);\r\n__decorate([\r\n    property()\r\n], NeoPixelElement.prototype, \"b\", void 0);\r\nNeoPixelElement = __decorate([\r\n    customElement('wokwi-neopixel')\r\n], NeoPixelElement);\r\nexport { NeoPixelElement };\r\n","export { LEDElement } from './led-element';\r\nexport { PushbuttonElement } from './pushbutton-element';\r\nexport { ResistorElement } from './resistor-element';\r\nexport { SevenSegmentElement } from './7segment-element';\r\nexport { LCD1602Element } from './lcd1602-element';\r\nexport { fontA00 } from './lcd1602-font-a00';\r\nexport { fontA02 } from './lcd1602-font-a02';\r\nexport { NeoPixelElement } from './neopixel-element';\r\n","const url = 'https://hexi.wokwi.com';\n\nexport interface HexiResult {\n  stdout: string;\n  stderr: string;\n  hex: string;\n}\n\nexport async function buildHex(source: string) {\n  const resp = await fetch(url + '/build', {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ sketch: source })\n  });\n  return (await resp.json()) as HexiResult;\n}","/**\r\n * AVR 8 CPU data structures\r\n * Part of AVR8js\r\n *\r\n * Copyright (C) 2019, Uri Shaked\r\n */\r\nconst registerSpace = 0x100;\r\nexport class CPU {\r\n    constructor(progMem, sramBytes = 8192) {\r\n        this.progMem = progMem;\r\n        this.sramBytes = sramBytes;\r\n        this.data = new Uint8Array(this.sramBytes + registerSpace);\r\n        this.data16 = new Uint16Array(this.data.buffer);\r\n        this.dataView = new DataView(this.data.buffer);\r\n        this.progBytes = new Uint8Array(this.progMem.buffer);\r\n        this.writeHooks = [];\r\n        this.pc22Bits = this.progBytes.length > 0x20000;\r\n        this.pc = 0;\r\n        this.cycles = 0;\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.data.fill(0);\r\n        this.SP = this.data.length - 1;\r\n    }\r\n    readData(addr) {\r\n        return this.data[addr];\r\n    }\r\n    writeData(addr, value) {\r\n        const hook = this.writeHooks[addr];\r\n        if (hook) {\r\n            if (hook(value, this.data[addr], addr)) {\r\n                return;\r\n            }\r\n        }\r\n        this.data[addr] = value;\r\n    }\r\n    get SP() {\r\n        return this.dataView.getUint16(93, true);\r\n    }\r\n    set SP(value) {\r\n        this.dataView.setUint16(93, value, true);\r\n    }\r\n    get SREG() {\r\n        return this.data[95];\r\n    }\r\n    get interruptsEnabled() {\r\n        return this.SREG & 0x80 ? true : false;\r\n    }\r\n}\r\n","/**\r\n * AVR-8 Instruction Simulation\r\n * Part of AVR8js\r\n * Reference: http://ww1.microchip.com/downloads/en/devicedoc/atmel-0856-avr-instruction-set-manual.pdf\r\n *\r\n * Copyright (C) 2019, Uri Shaked\r\n */\r\nfunction isTwoWordInstruction(opcode) {\r\n    return (\r\n    /* LDS */\r\n    (opcode & 0xfe0f) === 0x9000 ||\r\n        /* STS */\r\n        (opcode & 0xfe0f) === 0x9200 ||\r\n        /* CALL */\r\n        (opcode & 0xfe0e) === 0x940e ||\r\n        /* JMP */\r\n        (opcode & 0xfe0e) === 0x940c);\r\n}\r\nexport function avrInstruction(cpu) {\r\n    const opcode = cpu.progMem[cpu.pc];\r\n    if ((opcode & 0xfc00) === 0x1c00) {\r\n        /* ADC, 0001 11rd dddd rrrr */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const r = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        const sum = d + r + (cpu.data[95] & 1);\r\n        const R = sum & 255;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (R ^ r) & (d ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= sum & 256 ? 1 : 0;\r\n        sreg |= 1 & ((d & r) | (r & ~R) | (~R & d)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0xc00) {\r\n        /* ADD, 0000 11rd dddd rrrr */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const r = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        const R = (d + r) & 255;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (R ^ r) & (R ^ d) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= (d + r) & 256 ? 1 : 0;\r\n        sreg |= 1 & ((d & r) | (r & ~R) | (~R & d)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9600) {\r\n        /* ADIW, 1001 0110 KKdd KKKK */\r\n        const addr = 2 * ((opcode & 0x30) >> 4) + 24;\r\n        const value = cpu.dataView.getUint16(addr, true);\r\n        const R = (value + ((opcode & 0xf) | ((opcode & 0xc0) >> 2))) & 0xffff;\r\n        cpu.dataView.setUint16(addr, R, true);\r\n        let sreg = cpu.data[95] & 0xe0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 0x8000 & R ? 4 : 0;\r\n        sreg |= ~value & R & 0x8000 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= ~R & value & 0x8000 ? 1 : 0;\r\n        cpu.data[95] = sreg;\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x2000) {\r\n        /* AND, 0010 00rd dddd rrrr */\r\n        const R = cpu.data[(opcode & 0x1f0) >> 4] & cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x7000) {\r\n        /* ANDI, 0111 KKKK dddd KKKK */\r\n        const R = cpu.data[((opcode & 0xf0) >> 4) + 16] & ((opcode & 0xf) | ((opcode & 0xf00) >> 4));\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9405) {\r\n        /* ASR, 1001 010d dddd 0101 */\r\n        const value = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const R = (value >>> 1) | (128 & value);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= value & 1;\r\n        sreg |= ((sreg >> 2) & 1) ^ (sreg & 1) ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xff8f) === 0x9488) {\r\n        /* BCLR, 1001 0100 1sss 1000 */\r\n        cpu.data[95] &= ~(1 << ((opcode & 0x70) >> 4));\r\n    }\r\n    else if ((opcode & 0xfe08) === 0xf800) {\r\n        /* BLD, 1111 100d dddd 0bbb */\r\n        const b = opcode & 7;\r\n        const d = (opcode & 0x1f0) >> 4;\r\n        cpu.data[d] = (~(1 << b) & cpu.data[d]) | (((cpu.data[95] >> 6) & 1) << b);\r\n    }\r\n    else if ((opcode & 0xfc00) === 0xf400) {\r\n        /* BRBC, 1111 01kk kkkk ksss */\r\n        if (!(cpu.data[95] & (1 << (opcode & 7)))) {\r\n            cpu.pc = cpu.pc + (((opcode & 0x1f8) >> 3) - (opcode & 0x200 ? 0x40 : 0));\r\n            cpu.cycles++;\r\n        }\r\n    }\r\n    else if ((opcode & 0xfc00) === 0xf000) {\r\n        /* BRBS, 1111 00kk kkkk ksss */\r\n        if (cpu.data[95] & (1 << (opcode & 7))) {\r\n            cpu.pc = cpu.pc + (((opcode & 0x1f8) >> 3) - (opcode & 0x200 ? 0x40 : 0));\r\n            cpu.cycles++;\r\n        }\r\n    }\r\n    else if ((opcode & 0xff8f) === 0x9408) {\r\n        /* BSET, 1001 0100 0sss 1000 */\r\n        cpu.data[95] |= 1 << ((opcode & 0x70) >> 4);\r\n    }\r\n    else if ((opcode & 0xfe08) === 0xfa00) {\r\n        /* BST, 1111 101d dddd 0bbb */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const b = opcode & 7;\r\n        cpu.data[95] = (cpu.data[95] & 0xbf) | ((d >> b) & 1 ? 0x40 : 0);\r\n    }\r\n    else if ((opcode & 0xfe0e) === 0x940e) {\r\n        /* CALL, 1001 010k kkkk 111k kkkk kkkk kkkk kkkk */\r\n        const k = cpu.progMem[cpu.pc + 1] | ((opcode & 1) << 16) | ((opcode & 0x1f0) << 13);\r\n        const ret = cpu.pc + 2;\r\n        const sp = cpu.dataView.getUint16(93, true);\r\n        const { pc22Bits } = cpu;\r\n        cpu.data[sp] = 255 & ret;\r\n        cpu.data[sp - 1] = (ret >> 8) & 255;\r\n        if (pc22Bits) {\r\n            cpu.data[sp - 2] = (ret >> 16) & 255;\r\n        }\r\n        cpu.dataView.setUint16(93, sp - (pc22Bits ? 3 : 2), true);\r\n        cpu.pc = k - 1;\r\n        cpu.cycles += pc22Bits ? 4 : 3;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9800) {\r\n        /* CBI, 1001 1000 AAAA Abbb */\r\n        const A = opcode & 0xf8;\r\n        const b = opcode & 7;\r\n        const R = cpu.readData((A >> 3) + 32);\r\n        cpu.writeData((A >> 3) + 32, R & ~(1 << b));\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9400) {\r\n        /* COM, 1001 010d dddd 0000 */\r\n        const d = (opcode & 0x1f0) >> 4;\r\n        const R = 255 - cpu.data[d];\r\n        cpu.data[d] = R;\r\n        let sreg = (cpu.data[95] & 0xe1) | 1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x1400) {\r\n        /* CP, 0001 01rd dddd rrrr */\r\n        const val1 = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const val2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        const R = val1 - val2;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= 0 !== ((val1 ^ val2) & (val1 ^ R) & 128) ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= val2 > val1 ? 1 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x400) {\r\n        /* CPC, 0000 01rd dddd rrrr */\r\n        const arg1 = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const arg2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        let sreg = cpu.data[95];\r\n        const r = arg1 - arg2 - (sreg & 1);\r\n        sreg = (sreg & 0xc0) | (!r && (sreg >> 1) & 1 ? 2 : 0) | (arg2 + (sreg & 1) > arg1 ? 1 : 0);\r\n        sreg |= 128 & r ? 4 : 0;\r\n        sreg |= (arg1 ^ arg2) & (arg1 ^ r) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= 1 & ((~arg1 & arg2) | (arg2 & r) | (r & ~arg1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x3000) {\r\n        /* CPI, 0011 KKKK dddd KKKK */\r\n        const arg1 = cpu.data[((opcode & 0xf0) >> 4) + 16];\r\n        const arg2 = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\r\n        const r = arg1 - arg2;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= r ? 0 : 2;\r\n        sreg |= 128 & r ? 4 : 0;\r\n        sreg |= (arg1 ^ arg2) & (arg1 ^ r) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= arg2 > arg1 ? 1 : 0;\r\n        sreg |= 1 & ((~arg1 & arg2) | (arg2 & r) | (r & ~arg1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x1000) {\r\n        /* CPSE, 0001 00rd dddd rrrr */\r\n        if (cpu.data[(opcode & 0x1f0) >> 4] === cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)]) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.pc += skipSize;\r\n            cpu.cycles += skipSize;\r\n        }\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x940a) {\r\n        /* DEC, 1001 010d dddd 1010 */\r\n        const value = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const R = value - 1;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= 128 === value ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if (opcode === 0x9519) {\r\n        /* EICALL, 1001 0101 0001 1001 */\r\n        const retAddr = cpu.pc + 1;\r\n        const sp = cpu.dataView.getUint16(93, true);\r\n        const eind = cpu.data[0x3c];\r\n        cpu.data[sp] = retAddr & 255;\r\n        cpu.data[sp - 1] = (retAddr >> 8) & 255;\r\n        cpu.dataView.setUint16(93, sp - 2, true);\r\n        cpu.pc = ((eind << 16) | cpu.dataView.getUint16(30, true)) - 1;\r\n        cpu.cycles += 3;\r\n    }\r\n    else if (opcode === 0x9419) {\r\n        /* EIJMP, 1001 0100 0001 1001 */\r\n        const eind = cpu.data[0x3c];\r\n        cpu.pc = ((eind << 16) | cpu.dataView.getUint16(30, true)) - 1;\r\n        cpu.cycles++;\r\n    }\r\n    else if (opcode === 0x95d8) {\r\n        /* ELPM, 1001 0101 1101 1000 */\r\n        const rampz = cpu.data[0x3b];\r\n        cpu.data[0] = cpu.progBytes[(rampz << 16) | cpu.dataView.getUint16(30, true)];\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9006) {\r\n        /* ELPM(REG), 1001 000d dddd 0110 */\r\n        const rampz = cpu.data[0x3b];\r\n        cpu.data[(opcode & 0x1f0) >> 4] =\r\n            cpu.progBytes[(rampz << 16) | cpu.dataView.getUint16(30, true)];\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9007) {\r\n        /* ELPM(INC), 1001 000d dddd 0111 */\r\n        const rampz = cpu.data[0x3b];\r\n        const i = cpu.dataView.getUint16(30, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.progBytes[(rampz << 16) | i];\r\n        cpu.dataView.setUint16(30, i + 1, true);\r\n        if (i === 0xffff) {\r\n            cpu.data[0x3b] = (rampz + 1) % (cpu.progBytes.length >> 16);\r\n        }\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x2400) {\r\n        /* EOR, 0010 01rd dddd rrrr */\r\n        const R = cpu.data[(opcode & 0x1f0) >> 4] ^ cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xff88) === 0x308) {\r\n        /* FMUL, 0000 0011 0ddd 1rrr */\r\n        const v1 = cpu.data[((opcode & 0x70) >> 4) + 16];\r\n        const v2 = cpu.data[(opcode & 7) + 16];\r\n        const R = (v1 * v2) << 1;\r\n        cpu.dataView.setUint16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | ((v1 * v2) & 0x8000 ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff88) === 0x380) {\r\n        /* FMULS, 0000 0011 1ddd 0rrr */\r\n        const v1 = cpu.dataView.getInt8(((opcode & 0x70) >> 4) + 16);\r\n        const v2 = cpu.dataView.getInt8((opcode & 7) + 16);\r\n        const R = (v1 * v2) << 1;\r\n        cpu.dataView.setInt16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | ((v1 * v2) & 0x8000 ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff88) === 0x388) {\r\n        /* FMULSU, 0000 0011 1ddd 1rrr */\r\n        const v1 = cpu.dataView.getInt8(((opcode & 0x70) >> 4) + 16);\r\n        const v2 = cpu.data[(opcode & 7) + 16];\r\n        const R = (v1 * v2) << 1;\r\n        cpu.dataView.setInt16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 2 : 0) | ((v1 * v2) & 0x8000 ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if (opcode === 0x9509) {\r\n        /* ICALL, 1001 0101 0000 1001 */\r\n        const retAddr = cpu.pc + 1;\r\n        const sp = cpu.dataView.getUint16(93, true);\r\n        const { pc22Bits } = cpu;\r\n        cpu.data[sp] = retAddr & 255;\r\n        cpu.data[sp - 1] = (retAddr >> 8) & 255;\r\n        if (pc22Bits) {\r\n            cpu.data[sp - 2] = (retAddr >> 16) & 255;\r\n        }\r\n        cpu.dataView.setUint16(93, sp - (pc22Bits ? 3 : 2), true);\r\n        cpu.pc = cpu.dataView.getUint16(30, true) - 1;\r\n        cpu.cycles += pc22Bits ? 3 : 2;\r\n    }\r\n    else if (opcode === 0x9409) {\r\n        /* IJMP, 1001 0100 0000 1001 */\r\n        cpu.pc = cpu.dataView.getUint16(30, true) - 1;\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xf800) === 0xb000) {\r\n        /* IN, 1011 0AAd dddd AAAA */\r\n        const i = cpu.readData(((opcode & 0xf) | ((opcode & 0x600) >> 5)) + 32);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = i;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9403) {\r\n        /* INC, 1001 010d dddd 0011 */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const r = (d + 1) & 255;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = r;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= r ? 0 : 2;\r\n        sreg |= 128 & r ? 4 : 0;\r\n        sreg |= 127 === d ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfe0e) === 0x940c) {\r\n        /* JMP, 1001 010k kkkk 110k kkkk kkkk kkkk kkkk */\r\n        cpu.pc = (cpu.progMem[cpu.pc + 1] | ((opcode & 1) << 16) | ((opcode & 0x1f0) << 13)) - 1;\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9206) {\r\n        /* LAC, 1001 001r rrrr 0110 */\r\n        const r = (opcode & 0x1f0) >> 4;\r\n        const clear = cpu.data[r];\r\n        const value = cpu.readData(cpu.dataView.getUint16(30, true));\r\n        cpu.writeData(cpu.dataView.getUint16(30, true), value & (255 - clear));\r\n        cpu.data[r] = value;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9205) {\r\n        /* LAS, 1001 001r rrrr 0101 */\r\n        const r = (opcode & 0x1f0) >> 4;\r\n        const set = cpu.data[r];\r\n        const value = cpu.readData(cpu.dataView.getUint16(30, true));\r\n        cpu.writeData(cpu.dataView.getUint16(30, true), value | set);\r\n        cpu.data[r] = value;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9207) {\r\n        /* LAT, 1001 001r rrrr 0111 */\r\n        const r = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const R = cpu.readData(cpu.dataView.getUint16(30, true));\r\n        cpu.writeData(cpu.dataView.getUint16(30, true), r ^ R);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n    }\r\n    else if ((opcode & 0xf000) === 0xe000) {\r\n        /* LDI, 1110 KKKK dddd KKKK */\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9000) {\r\n        /* LDS, 1001 000d dddd 0000 kkkk kkkk kkkk kkkk */\r\n        const value = cpu.readData(cpu.progMem[cpu.pc + 1]);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = value;\r\n        cpu.pc++;\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900c) {\r\n        /* LDX, 1001 000d dddd 1100 */\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(26, true));\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900d) {\r\n        /* LDX(INC), 1001 000d dddd 1101 */\r\n        const x = cpu.dataView.getUint16(26, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(x);\r\n        cpu.dataView.setUint16(26, x + 1, true);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900e) {\r\n        /* LDX(DEC), 1001 000d dddd 1110 */\r\n        const x = cpu.dataView.getUint16(26, true) - 1;\r\n        cpu.dataView.setUint16(26, x, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(x);\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x8008) {\r\n        /* LDY, 1000 000d dddd 1000 */\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(28, true));\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9009) {\r\n        /* LDY(INC), 1001 000d dddd 1001 */\r\n        const y = cpu.dataView.getUint16(28, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(y);\r\n        cpu.dataView.setUint16(28, y + 1, true);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900a) {\r\n        /* LDY(DEC), 1001 000d dddd 1010 */\r\n        const y = cpu.dataView.getUint16(28, true) - 1;\r\n        cpu.dataView.setUint16(28, y, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(y);\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xd208) === 0x8008 &&\r\n        (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)) {\r\n        /* LDDY, 10q0 qq0d dddd 1qqq */\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(28, true) +\r\n            ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)));\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x8000) {\r\n        /* LDZ, 1000 000d dddd 0000 */\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(30, true));\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9001) {\r\n        /* LDZ(INC), 1001 000d dddd 0001 */\r\n        const z = cpu.dataView.getUint16(30, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(z);\r\n        cpu.dataView.setUint16(30, z + 1, true);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9002) {\r\n        /* LDZ(DEC), 1001 000d dddd 0010 */\r\n        const z = cpu.dataView.getUint16(30, true) - 1;\r\n        cpu.dataView.setUint16(30, z, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(z);\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xd208) === 0x8000 &&\r\n        (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)) {\r\n        /* LDDZ, 10q0 qq0d dddd 0qqq */\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(30, true) +\r\n            ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)));\r\n        cpu.cycles += 2;\r\n    }\r\n    else if (opcode === 0x95c8) {\r\n        /* LPM, 1001 0101 1100 1000 */\r\n        cpu.data[0] = cpu.progBytes[cpu.dataView.getUint16(30, true)];\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9004) {\r\n        /* LPM(REG), 1001 000d dddd 0100 */\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.progBytes[cpu.dataView.getUint16(30, true)];\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9005) {\r\n        /* LPM(INC), 1001 000d dddd 0101 */\r\n        const i = cpu.dataView.getUint16(30, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.progBytes[i];\r\n        cpu.dataView.setUint16(30, i + 1, true);\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9406) {\r\n        /* LSR, 1001 010d dddd 0110 */\r\n        const value = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const R = value >>> 1;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= value & 1;\r\n        sreg |= ((sreg >> 2) & 1) ^ (sreg & 1) ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x2c00) {\r\n        /* MOV, 0010 11rd dddd rrrr */\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n    }\r\n    else if ((opcode & 0xff00) === 0x100) {\r\n        /* MOVW, 0000 0001 dddd rrrr */\r\n        const r2 = 2 * (opcode & 0xf);\r\n        const d2 = 2 * ((opcode & 0xf0) >> 4);\r\n        cpu.data[d2] = cpu.data[r2];\r\n        cpu.data[d2 + 1] = cpu.data[r2 + 1];\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x9c00) {\r\n        /* MUL, 1001 11rd dddd rrrr */\r\n        const R = cpu.data[(opcode & 0x1f0) >> 4] * cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        cpu.dataView.setUint16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | (0x8000 & R ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x200) {\r\n        /* MULS, 0000 0010 dddd rrrr */\r\n        const R = cpu.dataView.getInt8(((opcode & 0xf0) >> 4) + 16) * cpu.dataView.getInt8((opcode & 0xf) + 16);\r\n        cpu.dataView.setInt16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | (0x8000 & R ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff88) === 0x300) {\r\n        /* MULSU, 0000 0011 0ddd 0rrr */\r\n        const R = cpu.dataView.getInt8(((opcode & 0x70) >> 4) + 16) * cpu.data[(opcode & 7) + 16];\r\n        cpu.dataView.setInt16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | (0x8000 & R ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9401) {\r\n        /* NEG, 1001 010d dddd 0001 */\r\n        const d = (opcode & 0x1f0) >> 4;\r\n        const value = cpu.data[d];\r\n        const R = 0 - value;\r\n        cpu.data[d] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= 128 === R ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= R ? 1 : 0;\r\n        sreg |= 1 & (R | value) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if (opcode === 0) {\r\n        /* NOP, 0000 0000 0000 0000 */\r\n        /* NOP */\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x2800) {\r\n        /* OR, 0010 10rd dddd rrrr */\r\n        const R = cpu.data[(opcode & 0x1f0) >> 4] | cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x6000) {\r\n        /* SBR, 0110 KKKK dddd KKKK */\r\n        const R = cpu.data[((opcode & 0xf0) >> 4) + 16] | ((opcode & 0xf) | ((opcode & 0xf00) >> 4));\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf800) === 0xb800) {\r\n        /* OUT, 1011 1AAr rrrr AAAA */\r\n        cpu.writeData(((opcode & 0xf) | ((opcode & 0x600) >> 5)) + 32, cpu.data[(opcode & 0x1f0) >> 4]);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900f) {\r\n        /* POP, 1001 000d dddd 1111 */\r\n        const value = cpu.dataView.getUint16(93, true) + 1;\r\n        cpu.dataView.setUint16(93, value, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.data[value];\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920f) {\r\n        /* PUSH, 1001 001d dddd 1111 */\r\n        const value = cpu.dataView.getUint16(93, true);\r\n        cpu.data[value] = cpu.data[(opcode & 0x1f0) >> 4];\r\n        cpu.dataView.setUint16(93, value - 1, true);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xf000) === 0xd000) {\r\n        /* RCALL, 1101 kkkk kkkk kkkk */\r\n        const k = (opcode & 0x7ff) - (opcode & 0x800 ? 0x800 : 0);\r\n        const retAddr = cpu.pc + 1;\r\n        const sp = cpu.dataView.getUint16(93, true);\r\n        const { pc22Bits } = cpu;\r\n        cpu.data[sp] = 255 & retAddr;\r\n        cpu.data[sp - 1] = (retAddr >> 8) & 255;\r\n        if (pc22Bits) {\r\n            cpu.data[sp - 2] = (retAddr >> 16) & 255;\r\n        }\r\n        cpu.dataView.setUint16(93, sp - (pc22Bits ? 3 : 2), true);\r\n        cpu.pc += k;\r\n        cpu.cycles += pc22Bits ? 3 : 2;\r\n    }\r\n    else if (opcode === 0x9508) {\r\n        /* RET, 1001 0101 0000 1000 */\r\n        const { pc22Bits } = cpu;\r\n        const i = cpu.dataView.getUint16(93, true) + (pc22Bits ? 3 : 2);\r\n        cpu.dataView.setUint16(93, i, true);\r\n        cpu.pc = (cpu.data[i - 1] << 8) + cpu.data[i] - 1;\r\n        if (pc22Bits) {\r\n            cpu.pc |= cpu.data[i - 2] << 16;\r\n        }\r\n        cpu.cycles += pc22Bits ? 4 : 3;\r\n    }\r\n    else if (opcode === 0x9518) {\r\n        /* RETI, 1001 0101 0001 1000 */\r\n        const { pc22Bits } = cpu;\r\n        const i = cpu.dataView.getUint16(93, true) + (pc22Bits ? 3 : 2);\r\n        cpu.dataView.setUint16(93, i, true);\r\n        cpu.pc = (cpu.data[i - 1] << 8) + cpu.data[i] - 1;\r\n        if (pc22Bits) {\r\n            cpu.pc |= cpu.data[i - 2] << 16;\r\n        }\r\n        cpu.cycles += pc22Bits ? 4 : 3;\r\n        cpu.data[95] |= 0x80; // Enable interrupts\r\n    }\r\n    else if ((opcode & 0xf000) === 0xc000) {\r\n        /* RJMP, 1100 kkkk kkkk kkkk */\r\n        cpu.pc = cpu.pc + ((opcode & 0x7ff) - (opcode & 0x800 ? 0x800 : 0));\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9407) {\r\n        /* ROR, 1001 010d dddd 0111 */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const r = (d >>> 1) | ((cpu.data[95] & 1) << 7);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = r;\r\n        let sreg = cpu.data[95] & 0xe0;\r\n        sreg |= r ? 0 : 2;\r\n        sreg |= 128 & r ? 4 : 0;\r\n        sreg |= 1 & d ? 1 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ (sreg & 1) ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x800) {\r\n        /* SBC, 0000 10rd dddd rrrr */\r\n        const val1 = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const val2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        let sreg = cpu.data[95];\r\n        const R = val1 - val2 - (sreg & 1);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        sreg = (sreg & 0xc0) | (!R && (sreg >> 1) & 1 ? 2 : 0) | (val2 + (sreg & 1) > val1 ? 1 : 0);\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x4000) {\r\n        /* SBCI, 0100 KKKK dddd KKKK */\r\n        const val1 = cpu.data[((opcode & 0xf0) >> 4) + 16];\r\n        const val2 = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\r\n        let sreg = cpu.data[95];\r\n        const R = val1 - val2 - (sreg & 1);\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\r\n        sreg = (sreg & 0xc0) | (!R && (sreg >> 1) & 1 ? 2 : 0) | (val2 + (sreg & 1) > val1 ? 1 : 0);\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9a00) {\r\n        /* SBI, 1001 1010 AAAA Abbb */\r\n        const target = ((opcode & 0xf8) >> 3) + 32;\r\n        cpu.writeData(target, cpu.readData(target) | (1 << (opcode & 7)));\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9900) {\r\n        /* SBIC, 1001 1001 AAAA Abbb */\r\n        const value = cpu.readData(((opcode & 0xf8) >> 3) + 32);\r\n        if (!(value & (1 << (opcode & 7)))) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.cycles += skipSize;\r\n            cpu.pc += skipSize;\r\n        }\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9b00) {\r\n        /* SBIS, 1001 1011 AAAA Abbb */\r\n        const value = cpu.readData(((opcode & 0xf8) >> 3) + 32);\r\n        if (value & (1 << (opcode & 7))) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.cycles += skipSize;\r\n            cpu.pc += skipSize;\r\n        }\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9700) {\r\n        /* SBIW, 1001 0111 KKdd KKKK */\r\n        const i = 2 * ((opcode & 0x30) >> 4) + 24;\r\n        const a = cpu.dataView.getUint16(i, true);\r\n        const l = (opcode & 0xf) | ((opcode & 0xc0) >> 2);\r\n        const R = a - l;\r\n        cpu.dataView.setUint16(i, R, true);\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 0x8000 & R ? 4 : 0;\r\n        sreg |= a & ~R & 0x8000 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= l > a ? 1 : 0;\r\n        sreg |= 1 & ((~a & l) | (l & R) | (R & ~a)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe08) === 0xfc00) {\r\n        /* SBRC, 1111 110r rrrr 0bbb */\r\n        if (!(cpu.data[(opcode & 0x1f0) >> 4] & (1 << (opcode & 7)))) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.cycles += skipSize;\r\n            cpu.pc += skipSize;\r\n        }\r\n    }\r\n    else if ((opcode & 0xfe08) === 0xfe00) {\r\n        /* SBRS, 1111 111r rrrr 0bbb */\r\n        if (cpu.data[(opcode & 0x1f0) >> 4] & (1 << (opcode & 7))) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.cycles += skipSize;\r\n            cpu.pc += skipSize;\r\n        }\r\n    }\r\n    else if (opcode === 0x9588) {\r\n        /* SLEEP, 1001 0101 1000 1000 */\r\n        /* not implemented */\r\n    }\r\n    else if (opcode === 0x95e8) {\r\n        /* SPM, 1001 0101 1110 1000 */\r\n        /* not implemented */\r\n    }\r\n    else if (opcode === 0x95f8) {\r\n        /* SPM(INC), 1001 0101 1111 1000 */\r\n        /* not implemented */\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9200) {\r\n        /* STS, 1001 001d dddd 0000 kkkk kkkk kkkk kkkk */\r\n        const value = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const addr = cpu.progMem[cpu.pc + 1];\r\n        cpu.writeData(addr, value);\r\n        cpu.pc++;\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920c) {\r\n        /* STX, 1001 001r rrrr 1100 */\r\n        cpu.writeData(cpu.dataView.getUint16(26, true), cpu.data[(opcode & 0x1f0) >> 4]);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920d) {\r\n        /* STX(INC), 1001 001r rrrr 1101 */\r\n        const x = cpu.dataView.getUint16(26, true);\r\n        cpu.writeData(x, cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.dataView.setUint16(26, x + 1, true);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920e) {\r\n        /* STX(DEC), 1001 001r rrrr 1110 */\r\n        const i = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const x = cpu.dataView.getUint16(26, true) - 1;\r\n        cpu.dataView.setUint16(26, x, true);\r\n        cpu.writeData(x, i);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x8208) {\r\n        /* STY, 1000 001r rrrr 1000 */\r\n        cpu.writeData(cpu.dataView.getUint16(28, true), cpu.data[(opcode & 0x1f0) >> 4]);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9209) {\r\n        /* STY(INC), 1001 001r rrrr 1001 */\r\n        const i = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const y = cpu.dataView.getUint16(28, true);\r\n        cpu.writeData(y, i);\r\n        cpu.dataView.setUint16(28, y + 1, true);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920a) {\r\n        /* STY(DEC), 1001 001r rrrr 1010 */\r\n        const i = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const y = cpu.dataView.getUint16(28, true) - 1;\r\n        cpu.dataView.setUint16(28, y, true);\r\n        cpu.writeData(y, i);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xd208) === 0x8208 &&\r\n        (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)) {\r\n        /* STDY, 10q0 qq1r rrrr 1qqq */\r\n        cpu.writeData(cpu.dataView.getUint16(28, true) +\r\n            ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)), cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x8200) {\r\n        /* STZ, 1000 001r rrrr 0000 */\r\n        cpu.writeData(cpu.dataView.getUint16(30, true), cpu.data[(opcode & 0x1f0) >> 4]);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9201) {\r\n        /* STZ(INC), 1001 001r rrrr 0001 */\r\n        const z = cpu.dataView.getUint16(30, true);\r\n        cpu.writeData(z, cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.dataView.setUint16(30, z + 1, true);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9202) {\r\n        /* STZ(DEC), 1001 001r rrrr 0010 */\r\n        const i = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const z = cpu.dataView.getUint16(30, true) - 1;\r\n        cpu.dataView.setUint16(30, z, true);\r\n        cpu.writeData(z, i);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xd208) === 0x8200 &&\r\n        (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)) {\r\n        /* STDZ, 10q0 qq1r rrrr 0qqq */\r\n        cpu.writeData(cpu.dataView.getUint16(30, true) +\r\n            ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)), cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x1800) {\r\n        /* SUB, 0001 10rd dddd rrrr */\r\n        const val1 = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const val2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        const R = val1 - val2;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= val2 > val1 ? 1 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x5000) {\r\n        /* SUBI, 0101 KKKK dddd KKKK */\r\n        const val1 = cpu.data[((opcode & 0xf0) >> 4) + 16];\r\n        const val2 = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\r\n        const R = val1 - val2;\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= val2 > val1 ? 1 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9402) {\r\n        /* SWAP, 1001 010d dddd 0010 */\r\n        const d = (opcode & 0x1f0) >> 4;\r\n        const i = cpu.data[d];\r\n        cpu.data[d] = ((15 & i) << 4) | ((240 & i) >>> 4);\r\n    }\r\n    else if (opcode === 0x95a8) {\r\n        /* WDR, 1001 0101 1010 1000 */\r\n        /* not implemented */\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9204) {\r\n        /* XCH, 1001 001r rrrr 0100 */\r\n        const r = (opcode & 0x1f0) >> 4;\r\n        const val1 = cpu.data[r];\r\n        const val2 = cpu.data[cpu.dataView.getUint16(30, true)];\r\n        cpu.data[cpu.dataView.getUint16(30, true)] = val1;\r\n        cpu.data[r] = val2;\r\n    }\r\n    cpu.pc = (cpu.pc + 1) % cpu.progMem.length;\r\n    cpu.cycles++;\r\n}\r\n","/**\r\n * AVR-8 Interrupt Handling\r\n * Part of AVR8js\r\n * Reference: http://ww1.microchip.com/downloads/en/devicedoc/atmel-0856-avr-instruction-set-manual.pdf\r\n *\r\n * Copyright (C) 2019, Uri Shaked\r\n */\r\nexport function avrInterrupt(cpu, addr) {\r\n    const sp = cpu.dataView.getUint16(93, true);\r\n    cpu.data[sp] = cpu.pc & 0xff;\r\n    cpu.data[sp - 1] = (cpu.pc >> 8) & 0xff;\r\n    cpu.dataView.setUint16(93, sp - 2, true);\r\n    cpu.data[95] &= 0x7f; // clear global interrupt flag\r\n    cpu.cycles += 2;\r\n    cpu.pc = addr;\r\n}\r\n","/**\r\n * AVR-8 Timers\r\n * Part of AVR8js\r\n * Reference: http://ww1.microchip.com/downloads/en/DeviceDoc/ATmega48A-PA-88A-PA-168A-PA-328-P-DS-DS40002061A.pdf\r\n *\r\n * Copyright (C) 2019, 2020, Uri Shaked\r\n */\r\nimport { avrInterrupt } from '../cpu/interrupt';\r\nconst timer01Dividers = {\r\n    0: 0,\r\n    1: 1,\r\n    2: 8,\r\n    3: 64,\r\n    4: 256,\r\n    5: 1024,\r\n    6: 0,\r\n    7: 0 // TODO: External clock source on T0 pin. Clock on rising edge.\r\n};\r\nconst TOV = 1;\r\nconst OCFA = 2;\r\nconst OCFB = 4;\r\nconst TOIE = 1;\r\nconst OCIEA = 2;\r\nconst OCIEB = 4;\r\nexport const timer0Config = {\r\n    bits: 8,\r\n    captureInterrupt: 0,\r\n    compAInterrupt: 0x1c,\r\n    compBInterrupt: 0x1e,\r\n    ovfInterrupt: 0x20,\r\n    TIFR: 0x35,\r\n    OCRA: 0x47,\r\n    OCRB: 0x48,\r\n    ICR: 0,\r\n    TCNT: 0x46,\r\n    TCCRA: 0x44,\r\n    TCCRB: 0x45,\r\n    TCCRC: 0,\r\n    TIMSK: 0x6e,\r\n    dividers: timer01Dividers\r\n};\r\nexport const timer1Config = {\r\n    bits: 16,\r\n    captureInterrupt: 0x14,\r\n    compAInterrupt: 0x16,\r\n    compBInterrupt: 0x18,\r\n    ovfInterrupt: 0x1a,\r\n    TIFR: 0x36,\r\n    OCRA: 0x88,\r\n    OCRB: 0x8a,\r\n    ICR: 0x86,\r\n    TCNT: 0x84,\r\n    TCCRA: 0x80,\r\n    TCCRB: 0x81,\r\n    TCCRC: 0x82,\r\n    TIMSK: 0x6f,\r\n    dividers: timer01Dividers\r\n};\r\nexport const timer2Config = {\r\n    bits: 8,\r\n    captureInterrupt: 0,\r\n    compAInterrupt: 0x0e,\r\n    compBInterrupt: 0x10,\r\n    ovfInterrupt: 0x12,\r\n    TIFR: 0x37,\r\n    OCRA: 0xb3,\r\n    OCRB: 0xb4,\r\n    ICR: 0,\r\n    TCNT: 0xb2,\r\n    TCCRA: 0xb0,\r\n    TCCRB: 0xb1,\r\n    TCCRC: 0,\r\n    TIMSK: 0x70,\r\n    dividers: {\r\n        0: 1,\r\n        1: 1,\r\n        2: 8,\r\n        3: 32,\r\n        4: 64,\r\n        5: 128,\r\n        6: 256,\r\n        7: 1024\r\n    }\r\n};\r\n/* All the following types and constants are related to WGM (Waveform Generation Mode) bits: */\r\nvar TimerMode;\r\n(function (TimerMode) {\r\n    TimerMode[TimerMode[\"Normal\"] = 0] = \"Normal\";\r\n    TimerMode[TimerMode[\"PWMPhaseCorrect\"] = 1] = \"PWMPhaseCorrect\";\r\n    TimerMode[TimerMode[\"CTC\"] = 2] = \"CTC\";\r\n    TimerMode[TimerMode[\"FastPWM\"] = 3] = \"FastPWM\";\r\n    TimerMode[TimerMode[\"PWMPhaseFrequencyCorrect\"] = 4] = \"PWMPhaseFrequencyCorrect\";\r\n    TimerMode[TimerMode[\"Reserved\"] = 5] = \"Reserved\";\r\n})(TimerMode || (TimerMode = {}));\r\nvar TOVUpdateMode;\r\n(function (TOVUpdateMode) {\r\n    TOVUpdateMode[TOVUpdateMode[\"Max\"] = 0] = \"Max\";\r\n    TOVUpdateMode[TOVUpdateMode[\"Top\"] = 1] = \"Top\";\r\n    TOVUpdateMode[TOVUpdateMode[\"Bottom\"] = 2] = \"Bottom\";\r\n})(TOVUpdateMode || (TOVUpdateMode = {}));\r\nvar OCRUpdateMode;\r\n(function (OCRUpdateMode) {\r\n    OCRUpdateMode[OCRUpdateMode[\"Immediate\"] = 0] = \"Immediate\";\r\n    OCRUpdateMode[OCRUpdateMode[\"Top\"] = 1] = \"Top\";\r\n    OCRUpdateMode[OCRUpdateMode[\"Bottom\"] = 2] = \"Bottom\";\r\n})(OCRUpdateMode || (OCRUpdateMode = {}));\r\nconst TopOCRA = 1;\r\nconst TopICR = 2;\r\nconst wgmModes8Bit = [\r\n    /*0*/ [TimerMode.Normal, 0xff, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\r\n    /*1*/ [TimerMode.PWMPhaseCorrect, 0xff, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\r\n    /*2*/ [TimerMode.CTC, TopOCRA, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\r\n    /*3*/ [TimerMode.FastPWM, 0xff, OCRUpdateMode.Bottom, TOVUpdateMode.Max],\r\n    /*4*/ [TimerMode.Reserved, 0xff, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\r\n    /*5*/ [TimerMode.PWMPhaseCorrect, TopOCRA, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\r\n    /*6*/ [TimerMode.Reserved, 0xff, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\r\n    /*7*/ [TimerMode.FastPWM, TopOCRA, OCRUpdateMode.Bottom, TOVUpdateMode.Top]\r\n];\r\n// Table 16-4 in the datasheet\r\nconst wgmModes16Bit = [\r\n    /*0 */ [TimerMode.Normal, 0xffff, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\r\n    /*1 */ [TimerMode.PWMPhaseCorrect, 0x00ff, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\r\n    /*2 */ [TimerMode.PWMPhaseCorrect, 0x01ff, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\r\n    /*3 */ [TimerMode.PWMPhaseCorrect, 0x03ff, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\r\n    /*4 */ [TimerMode.CTC, TopOCRA, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\r\n    /*5 */ [TimerMode.FastPWM, 0x00ff, OCRUpdateMode.Bottom, TOVUpdateMode.Top],\r\n    /*6 */ [TimerMode.FastPWM, 0x01ff, OCRUpdateMode.Bottom, TOVUpdateMode.Top],\r\n    /*7 */ [TimerMode.FastPWM, 0x03ff, OCRUpdateMode.Bottom, TOVUpdateMode.Top],\r\n    /*8 */ [TimerMode.PWMPhaseFrequencyCorrect, TopICR, OCRUpdateMode.Bottom, TOVUpdateMode.Bottom],\r\n    /*9 */ [TimerMode.PWMPhaseFrequencyCorrect, TopOCRA, OCRUpdateMode.Bottom, TOVUpdateMode.Bottom],\r\n    /*10*/ [TimerMode.PWMPhaseCorrect, TopICR, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\r\n    /*11*/ [TimerMode.PWMPhaseCorrect, TopOCRA, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\r\n    /*12*/ [TimerMode.CTC, TopICR, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\r\n    /*13*/ [TimerMode.Reserved, 0xffff, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\r\n    /*14*/ [TimerMode.FastPWM, TopICR, OCRUpdateMode.Bottom, TOVUpdateMode.Top],\r\n    /*15*/ [TimerMode.FastPWM, TopOCRA, OCRUpdateMode.Bottom, TOVUpdateMode.Top]\r\n];\r\nexport class AVRTimer {\r\n    constructor(cpu, config) {\r\n        this.cpu = cpu;\r\n        this.config = config;\r\n        this.lastCycle = 0;\r\n        this.ocrA = 0;\r\n        this.ocrB = 0;\r\n        this.updateWGMConfig();\r\n        this.registerHook(config.TCNT, (value) => {\r\n            this.TCNT = value;\r\n            this.timerUpdated(value);\r\n            return true;\r\n        });\r\n        this.registerHook(config.OCRA, (value) => {\r\n            // TODO implement buffering when timer running in PWM mode\r\n            this.ocrA = value;\r\n        });\r\n        this.registerHook(config.OCRB, (value) => {\r\n            this.ocrB = value;\r\n        });\r\n        cpu.writeHooks[config.TCCRA] = (value) => {\r\n            this.cpu.data[config.TCCRA] = value;\r\n            this.updateWGMConfig();\r\n            return true;\r\n        };\r\n        cpu.writeHooks[config.TCCRB] = (value) => {\r\n            this.cpu.data[config.TCCRB] = value;\r\n            this.updateWGMConfig();\r\n            return true;\r\n        };\r\n    }\r\n    reset() {\r\n        this.lastCycle = 0;\r\n        this.ocrA = 0;\r\n        this.ocrB = 0;\r\n    }\r\n    get TIFR() {\r\n        return this.cpu.data[this.config.TIFR];\r\n    }\r\n    set TIFR(value) {\r\n        this.cpu.data[this.config.TIFR] = value;\r\n    }\r\n    get TCNT() {\r\n        return this.config.bits === 16\r\n            ? this.cpu.dataView.getUint16(this.config.TCNT, true)\r\n            : this.cpu.data[this.config.TCNT];\r\n    }\r\n    set TCNT(value) {\r\n        this.cpu.data[this.config.TCNT] = value & 0xff;\r\n        if (this.config.bits === 16) {\r\n            this.cpu.data[this.config.TCNT + 1] = (value >> 8) & 0xff;\r\n        }\r\n    }\r\n    get TCCRA() {\r\n        return this.cpu.data[this.config.TCCRA];\r\n    }\r\n    get TCCRB() {\r\n        return this.cpu.data[this.config.TCCRB];\r\n    }\r\n    get TIMSK() {\r\n        return this.cpu.data[this.config.TIMSK];\r\n    }\r\n    get ICR() {\r\n        // Only available for 16-bit timers\r\n        return (this.cpu.data[this.config.ICR + 1] << 8) | this.cpu.data[this.config.ICR];\r\n    }\r\n    get CS() {\r\n        return (this.TCCRB & 0x7);\r\n    }\r\n    get WGM() {\r\n        const mask = this.config.bits === 16 ? 0x18 : 0x8;\r\n        return ((this.TCCRB & mask) >> 1) | (this.TCCRA & 0x3);\r\n    }\r\n    get TOP() {\r\n        switch (this.topValue) {\r\n            case TopOCRA:\r\n                return this.ocrA;\r\n            case TopICR:\r\n                return this.ICR;\r\n            default:\r\n                return this.topValue;\r\n        }\r\n    }\r\n    registerHook(address, hook) {\r\n        if (this.config.bits === 16) {\r\n            this.cpu.writeHooks[address] = (value) => hook((this.cpu.data[address + 1] << 8) | value);\r\n            this.cpu.writeHooks[address + 1] = (value) => hook((value << 8) | this.cpu.data[address]);\r\n        }\r\n        else {\r\n            this.cpu.writeHooks[address] = hook;\r\n        }\r\n    }\r\n    updateWGMConfig() {\r\n        const wgmModes = this.config.bits === 16 ? wgmModes16Bit : wgmModes8Bit;\r\n        const [timerMode, topValue] = wgmModes[this.WGM];\r\n        this.timerMode = timerMode;\r\n        this.topValue = topValue;\r\n    }\r\n    tick() {\r\n        const divider = this.config.dividers[this.CS];\r\n        const delta = this.cpu.cycles - this.lastCycle;\r\n        if (divider && delta >= divider) {\r\n            const counterDelta = Math.floor(delta / divider);\r\n            this.lastCycle += counterDelta * divider;\r\n            const val = this.TCNT;\r\n            const newVal = (val + counterDelta) % (this.TOP + 1);\r\n            this.TCNT = newVal;\r\n            this.timerUpdated(newVal);\r\n            const { timerMode } = this;\r\n            if ((timerMode === TimerMode.Normal ||\r\n                timerMode === TimerMode.PWMPhaseCorrect ||\r\n                timerMode === TimerMode.PWMPhaseFrequencyCorrect ||\r\n                timerMode === TimerMode.FastPWM) &&\r\n                val > newVal) {\r\n                this.TIFR |= TOV;\r\n            }\r\n        }\r\n        if (this.cpu.interruptsEnabled) {\r\n            if (this.TIFR & TOV && this.TIMSK & TOIE) {\r\n                avrInterrupt(this.cpu, this.config.ovfInterrupt);\r\n                this.TIFR &= ~TOV;\r\n            }\r\n            if (this.TIFR & OCFA && this.TIMSK & OCIEA) {\r\n                avrInterrupt(this.cpu, this.config.compAInterrupt);\r\n                this.TIFR &= ~OCFA;\r\n            }\r\n            if (this.TIFR & OCFB && this.TIMSK & OCIEB) {\r\n                avrInterrupt(this.cpu, this.config.compBInterrupt);\r\n                this.TIFR &= ~OCFB;\r\n            }\r\n        }\r\n    }\r\n    timerUpdated(value) {\r\n        if (this.ocrA && value === this.ocrA) {\r\n            this.TIFR |= OCFA;\r\n            if (this.timerMode === TimerMode.CTC) {\r\n                // Clear Timer on Compare Match (CTC) Mode\r\n                this.TCNT = 0;\r\n                this.TIFR |= TOV;\r\n            }\r\n        }\r\n        if (this.ocrB && value === this.ocrB) {\r\n            this.TIFR |= OCFB;\r\n        }\r\n    }\r\n}\r\n","export const portAConfig = {\r\n    PIN: 0x20,\r\n    DDR: 0x21,\r\n    PORT: 0x22\r\n};\r\nexport const portBConfig = {\r\n    PIN: 0x23,\r\n    DDR: 0x24,\r\n    PORT: 0x25\r\n};\r\nexport const portCConfig = {\r\n    PIN: 0x26,\r\n    DDR: 0x27,\r\n    PORT: 0x28\r\n};\r\nexport const portDConfig = {\r\n    PIN: 0x29,\r\n    DDR: 0x2a,\r\n    PORT: 0x2b\r\n};\r\nexport const portEConfig = {\r\n    PIN: 0x2c,\r\n    DDR: 0x2d,\r\n    PORT: 0x2e\r\n};\r\nexport const portFConfig = {\r\n    PIN: 0x2f,\r\n    DDR: 0x30,\r\n    PORT: 0x31\r\n};\r\nexport const portGConfig = {\r\n    PIN: 0x32,\r\n    DDR: 0x33,\r\n    PORT: 0x34\r\n};\r\nexport const portHConfig = {\r\n    PIN: 0x100,\r\n    DDR: 0x101,\r\n    PORT: 0x102\r\n};\r\nexport const portJConfig = {\r\n    PIN: 0x103,\r\n    DDR: 0x104,\r\n    PORT: 0x105\r\n};\r\nexport const portKConfig = {\r\n    PIN: 0x106,\r\n    DDR: 0x107,\r\n    PORT: 0x108\r\n};\r\nexport const portLConfig = {\r\n    PIN: 0x109,\r\n    DDR: 0x10a,\r\n    PORT: 0x10b\r\n};\r\nexport var PinState;\r\n(function (PinState) {\r\n    PinState[PinState[\"Low\"] = 0] = \"Low\";\r\n    PinState[PinState[\"High\"] = 1] = \"High\";\r\n    PinState[PinState[\"Input\"] = 2] = \"Input\";\r\n    PinState[PinState[\"InputPullUp\"] = 3] = \"InputPullUp\";\r\n})(PinState || (PinState = {}));\r\nexport class AVRIOPort {\r\n    constructor(cpu, portConfig) {\r\n        this.cpu = cpu;\r\n        this.portConfig = portConfig;\r\n        this.listeners = [];\r\n        cpu.writeHooks[portConfig.DDR] = (value, oldValue) => {\r\n            const portValue = cpu.data[portConfig.PORT];\r\n            this.writeGpio(value & portValue, oldValue & oldValue);\r\n        };\r\n        cpu.writeHooks[portConfig.PORT] = (value, oldValue) => {\r\n            const ddrMask = cpu.data[portConfig.DDR];\r\n            cpu.data[portConfig.PORT] = value;\r\n            value &= ddrMask;\r\n            cpu.data[portConfig.PIN] = (cpu.data[portConfig.PIN] & ~ddrMask) | value;\r\n            this.writeGpio(value, oldValue & ddrMask);\r\n            return true;\r\n        };\r\n        cpu.writeHooks[portConfig.PIN] = (value) => {\r\n            // Writing to 1 PIN toggles PORT bits\r\n            const oldPortValue = cpu.data[portConfig.PORT];\r\n            const ddrMask = cpu.data[portConfig.DDR];\r\n            const portValue = oldPortValue ^ value;\r\n            cpu.data[portConfig.PORT] = portValue;\r\n            cpu.data[portConfig.PIN] = (cpu.data[portConfig.PIN] & ~ddrMask) | (portValue & ddrMask);\r\n            this.writeGpio(portValue & ddrMask, oldPortValue & ddrMask);\r\n            return true;\r\n        };\r\n    }\r\n    addListener(listener) {\r\n        this.listeners.push(listener);\r\n    }\r\n    removeListener(listener) {\r\n        this.listeners = this.listeners.filter((l) => l !== listener);\r\n    }\r\n    /**\r\n     * Get the state of a given GPIO pin\r\n     *\r\n     * @param index Pin index to return from 0 to 7\r\n     * @returns PinState.Low or PinState.High if the pin is set to output, PinState.Input if the pin is set\r\n     *   to input, and PinState.InputPullUp if the pin is set to input and the internal pull-up resistor has\r\n     *   been enabled.\r\n     */\r\n    pinState(index) {\r\n        const ddr = this.cpu.data[this.portConfig.DDR];\r\n        const port = this.cpu.data[this.portConfig.PORT];\r\n        const bitMask = 1 << index;\r\n        if (ddr & bitMask) {\r\n            return port & bitMask ? PinState.High : PinState.Low;\r\n        }\r\n        else {\r\n            return port & bitMask ? PinState.InputPullUp : PinState.Input;\r\n        }\r\n    }\r\n    writeGpio(value, oldValue) {\r\n        for (const listener of this.listeners) {\r\n            listener(value, oldValue);\r\n        }\r\n    }\r\n}\r\n","import { avrInterrupt } from '../cpu/interrupt';\r\nexport const usart0Config = {\r\n    rxCompleteInterrupt: 0x24,\r\n    dataRegisterEmptyInterrupt: 0x26,\r\n    txCompleteInterrupt: 0x28,\r\n    UCSRA: 0xc0,\r\n    UCSRB: 0xc1,\r\n    UCSRC: 0xc2,\r\n    UBRRL: 0xc4,\r\n    UBRRH: 0xc5,\r\n    UDR: 0xc6\r\n};\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n// Register bits:\r\nconst UCSRA_RXC = 0x80; // USART Receive Complete\r\nconst UCSRA_TXC = 0x40; // USART Transmit Complete\r\nconst UCSRA_UDRE = 0x20; // USART Data Register Empty\r\nconst UCSRA_FE = 0x10; // Frame Error\r\nconst UCSRA_DOR = 0x8; // Data OverRun\r\nconst UCSRA_UPE = 0x4; // USART Parity Error\r\nconst UCSRA_U2X = 0x2; // Double the USART Transmission Speed\r\nconst UCSRA_MPCM = 0x1; // Multi-processor Communication Mode\r\nconst UCSRB_RXCIE = 0x80; // RX Complete Interrupt Enable\r\nconst UCSRB_TXCIE = 0x40; // TX Complete Interrupt Enable\r\nconst UCSRB_UDRIE = 0x20; // USART Data Register Empty Interrupt Enable\r\nconst UCSRB_RXEN = 0x10; // Receiver Enable\r\nconst UCSRB_TXEN = 0x8; // Transmitter Enable\r\nconst UCSRB_UCSZ2 = 0x4; // Character Size 2\r\nconst UCSRB_RXB8 = 0x2; // Receive Data Bit 8\r\nconst UCSRB_TXB8 = 0x1; // Transmit Data Bit 8\r\nconst UCSRC_UMSEL1 = 0x80; // USART Mode Select 1\r\nconst UCSRC_UMSEL0 = 0x40; // USART Mode Select 0\r\nconst UCSRC_UPM1 = 0x20; // Parity Mode 1\r\nconst UCSRC_UPM0 = 0x10; // Parity Mode 0\r\nconst UCSRC_USBS = 0x8; // Stop Bit Select\r\nconst UCSRC_UCSZ1 = 0x4; // Character Size 1\r\nconst UCSRC_UCSZ0 = 0x2; // Character Size 0\r\nconst UCSRC_UCPOL = 0x1; // Clock Polarity\r\n/* eslint-enable @typescript-eslint/no-unused-vars */\r\nexport class AVRUSART {\r\n    constructor(cpu, config, freqMHz) {\r\n        this.cpu = cpu;\r\n        this.config = config;\r\n        this.freqMHz = freqMHz;\r\n        this.onByteTransmit = null;\r\n        this.onLineTransmit = null;\r\n        this.lineBuffer = '';\r\n        this.cpu.writeHooks[config.UCSRA] = (value) => {\r\n            this.cpu.data[config.UCSRA] = value | UCSRA_UDRE | UCSRA_TXC;\r\n            return true;\r\n        };\r\n        this.cpu.writeHooks[config.UCSRB] = (value, oldValue) => {\r\n            if (value & UCSRB_TXEN && !(oldValue & UCSRB_TXEN)) {\r\n                // Enabling the transmission - mark UDR as empty\r\n                this.cpu.data[config.UCSRA] |= UCSRA_UDRE;\r\n            }\r\n        };\r\n        this.cpu.writeHooks[config.UDR] = (value) => {\r\n            if (this.onByteTransmit) {\r\n                this.onByteTransmit(value);\r\n            }\r\n            if (this.onLineTransmit) {\r\n                const ch = String.fromCharCode(value);\r\n                if (ch === '\\n') {\r\n                    this.onLineTransmit(this.lineBuffer);\r\n                    this.lineBuffer = '';\r\n                }\r\n                else {\r\n                    this.lineBuffer += ch;\r\n                }\r\n            }\r\n            this.cpu.data[config.UCSRA] |= UCSRA_UDRE | UCSRA_TXC;\r\n        };\r\n    }\r\n    tick() {\r\n        if (this.cpu.interruptsEnabled) {\r\n            const ucsra = this.cpu.data[this.config.UCSRA];\r\n            const ucsrb = this.cpu.data[this.config.UCSRB];\r\n            if (ucsra & UCSRA_UDRE && ucsrb & UCSRB_UDRIE) {\r\n                avrInterrupt(this.cpu, this.config.dataRegisterEmptyInterrupt);\r\n                this.cpu.data[this.config.UCSRA] &= ~UCSRA_UDRE;\r\n            }\r\n            if (ucsrb & UCSRA_TXC && ucsrb & UCSRB_TXCIE) {\r\n                avrInterrupt(this.cpu, this.config.txCompleteInterrupt);\r\n                this.cpu.data[this.config.UCSRA] &= ~UCSRA_TXC;\r\n            }\r\n        }\r\n    }\r\n    get baudRate() {\r\n        const UBRR = (this.cpu.data[this.config.UBRRH] << 8) | this.cpu.data[this.config.UBRRL];\r\n        const multiplier = this.cpu.data[this.config.UCSRA] & UCSRA_U2X ? 8 : 16;\r\n        return Math.floor(this.freqMHz / (multiplier * (1 + UBRR)));\r\n    }\r\n    get bitsPerChar() {\r\n        const ucsz = ((this.cpu.data[this.config.UCSRA] & (UCSRC_UCSZ1 | UCSRC_UCSZ0)) >> 1) |\r\n            (this.cpu.data[this.config.UCSRB] & UCSRB_UCSZ2);\r\n        switch (ucsz) {\r\n            case 0:\r\n                return 5;\r\n            case 1:\r\n                return 6;\r\n            case 2:\r\n                return 7;\r\n            case 3:\r\n                return 8;\r\n            default: // 4..6 are reserved\r\n            case 7:\r\n                return 9;\r\n        }\r\n    }\r\n}\r\n","import { avrInterrupt } from '../cpu/interrupt';\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n// Register bits:\r\nconst TWCR_TWINT = 0x80; // TWI Interrupt Flag\r\nconst TWCR_TWEA = 0x40; // TWI Enable Acknowledge Bit\r\nconst TWCR_TWSTA = 0x20; // TWI START Condition Bit\r\nconst TWCR_TWSTO = 0x10; // TWI STOP Condition Bit\r\nconst TWCR_TWWC = 0x8; //TWI Write Collision Flag\r\nconst TWCR_TWEN = 0x4; //  TWI Enable Bit\r\nconst TWCR_TWIE = 0x1; // TWI Interrupt Enable\r\nconst TWSR_TWS_MASK = 0xf8; // TWI Status\r\nconst TWSR_TWPS1 = 0x2; // TWI Prescaler Bits\r\nconst TWSR_TWPS0 = 0x1; // TWI Prescaler Bits\r\nconst TWSR_TWPS_MASK = TWSR_TWPS1 | TWSR_TWPS0; // TWI Prescaler mask\r\nconst TWAR_TWA_MASK = 0xfe; //  TWI (Slave) Address Register\r\nconst TWAR_TWGCE = 0x1; // TWI General Call Recognition Enable Bit\r\nconst STATUS_BUS_ERROR = 0x0;\r\nconst STATUS_TWI_IDLE = 0xf8;\r\n// Master states\r\nconst STATUS_START = 0x08;\r\nconst STATUS_REPEATED_START = 0x10;\r\nconst STATUS_SLAW_ACK = 0x18;\r\nconst STATUS_SLAW_NACK = 0x20;\r\nconst STATUS_DATA_SENT_ACK = 0x28;\r\nconst STATUS_DATA_SENT_NACK = 0x30;\r\nconst STATUS_DATA_LOST_ARBITRATION = 0x38;\r\nconst STATUS_SLAR_ACK = 0x40;\r\nconst STATUS_SLAR_NACK = 0x48;\r\nconst STATUS_DATA_RECEIVED_ACK = 0x50;\r\nconst STATUS_DATA_RECEIVED_NACK = 0x58;\r\n// TODO: add slave states\r\n/* eslint-enable @typescript-eslint/no-unused-vars */\r\nexport const twiConfig = {\r\n    twiInterrupt: 0x30,\r\n    TWBR: 0xb8,\r\n    TWSR: 0xb9,\r\n    TWAR: 0xba,\r\n    TWDR: 0xbb,\r\n    TWCR: 0xbc,\r\n    TWAMR: 0xbd\r\n};\r\n// A simple TWI Event Handler that sends a NACK for all events\r\nexport class NoopTWIEventHandler {\r\n    constructor(twi) {\r\n        this.twi = twi;\r\n    }\r\n    start() {\r\n        this.twi.completeStart();\r\n    }\r\n    stop() {\r\n        this.twi.completeStop();\r\n    }\r\n    connectToSlave() {\r\n        this.twi.completeConnect(false);\r\n    }\r\n    writeByte() {\r\n        this.twi.completeWrite(false);\r\n    }\r\n    readByte() {\r\n        this.twi.completeRead(0xff);\r\n    }\r\n}\r\nexport class AVRTWI {\r\n    constructor(cpu, config, freqMHz) {\r\n        this.cpu = cpu;\r\n        this.config = config;\r\n        this.freqMHz = freqMHz;\r\n        this.eventHandler = new NoopTWIEventHandler(this);\r\n        this.nextTick = null;\r\n        this.updateStatus(STATUS_TWI_IDLE);\r\n        this.cpu.writeHooks[config.TWCR] = (value) => {\r\n            const clearInt = value & TWCR_TWINT;\r\n            if (clearInt) {\r\n                value &= ~TWCR_TWINT;\r\n            }\r\n            const { status } = this;\r\n            if (clearInt && value & TWCR_TWEN) {\r\n                const twdrValue = this.cpu.data[this.config.TWDR];\r\n                this.nextTick = () => {\r\n                    if (value & TWCR_TWSTA) {\r\n                        this.eventHandler.start(status !== STATUS_TWI_IDLE);\r\n                    }\r\n                    else if (value & TWCR_TWSTO) {\r\n                        this.eventHandler.stop();\r\n                    }\r\n                    else if (status === STATUS_START) {\r\n                        this.eventHandler.connectToSlave(twdrValue >> 1, twdrValue & 0x1 ? false : true);\r\n                    }\r\n                    else if (status === STATUS_SLAW_ACK || status === STATUS_DATA_SENT_ACK) {\r\n                        this.eventHandler.writeByte(twdrValue);\r\n                    }\r\n                    else if (status === STATUS_SLAR_ACK || status === STATUS_DATA_RECEIVED_ACK) {\r\n                        const ack = !!(value & TWCR_TWEA);\r\n                        this.eventHandler.readByte(ack);\r\n                    }\r\n                };\r\n                this.cpu.data[config.TWCR] = value;\r\n                return true;\r\n            }\r\n        };\r\n    }\r\n    tick() {\r\n        if (this.nextTick) {\r\n            this.nextTick();\r\n            this.nextTick = null;\r\n        }\r\n        if (this.cpu.interruptsEnabled) {\r\n            const { TWCR, twiInterrupt } = this.config;\r\n            if (this.cpu.data[TWCR] & TWCR_TWIE && this.cpu.data[TWCR] & TWCR_TWINT) {\r\n                avrInterrupt(this.cpu, twiInterrupt);\r\n                this.cpu.data[TWCR] &= ~TWCR_TWINT;\r\n            }\r\n        }\r\n    }\r\n    get prescaler() {\r\n        switch (this.cpu.data[this.config.TWSR] & TWSR_TWPS_MASK) {\r\n            case 0:\r\n                return 1;\r\n            case 1:\r\n                return 4;\r\n            case 2:\r\n                return 16;\r\n            case 3:\r\n                return 64;\r\n        }\r\n        // We should never get here:\r\n        throw new Error('Invalid prescaler value!');\r\n    }\r\n    get sclFrequency() {\r\n        return this.freqMHz / (16 + 2 * this.cpu.data[this.config.TWBR] * this.prescaler);\r\n    }\r\n    completeStart() {\r\n        this.updateStatus(this.status === STATUS_TWI_IDLE ? STATUS_START : STATUS_REPEATED_START);\r\n    }\r\n    completeStop() {\r\n        this.cpu.data[this.config.TWCR] &= ~TWCR_TWSTO;\r\n        this.updateStatus(STATUS_TWI_IDLE);\r\n    }\r\n    completeConnect(ack) {\r\n        if (this.cpu.data[this.config.TWDR] & 0x1) {\r\n            this.updateStatus(ack ? STATUS_SLAR_ACK : STATUS_SLAR_NACK);\r\n        }\r\n        else {\r\n            this.updateStatus(ack ? STATUS_SLAW_ACK : STATUS_SLAW_NACK);\r\n        }\r\n    }\r\n    completeWrite(ack) {\r\n        this.updateStatus(ack ? STATUS_DATA_SENT_ACK : STATUS_DATA_SENT_NACK);\r\n    }\r\n    completeRead(value) {\r\n        const ack = !!(this.cpu.data[this.config.TWCR] & TWCR_TWEA);\r\n        this.cpu.data[this.config.TWDR] = value;\r\n        this.updateStatus(ack ? STATUS_DATA_RECEIVED_ACK : STATUS_DATA_RECEIVED_NACK);\r\n    }\r\n    get status() {\r\n        return this.cpu.data[this.config.TWSR] & TWSR_TWS_MASK;\r\n    }\r\n    updateStatus(value) {\r\n        const { TWCR, TWSR } = this.config;\r\n        this.cpu.data[TWSR] = (this.cpu.data[TWSR] & ~TWSR_TWS_MASK) | value;\r\n        this.cpu.data[TWCR] |= TWCR_TWINT;\r\n    }\r\n}\r\n","/**\r\n * AVR8js\r\n *\r\n * Copyright (C) 2019, 2020, Uri Shaked\r\n */\r\nexport { CPU } from './cpu/cpu';\r\nexport { avrInstruction } from './cpu/instruction';\r\nexport { avrInterrupt } from './cpu/interrupt';\r\nexport { AVRTimer, timer0Config, timer1Config, timer2Config } from './peripherals/timer';\r\nexport { AVRIOPort, portAConfig, portBConfig, portCConfig, portDConfig, portEConfig, portFConfig, portGConfig, portHConfig, portJConfig, portKConfig, portLConfig, PinState } from './peripherals/gpio';\r\nexport { AVRUSART, usart0Config } from './peripherals/usart';\r\nexport * from './peripherals/twi';\r\n","/**\n * Minimal Intel HEX loader\n * Part of AVR8js\n *\n * Copyright (C) 2019, Uri Shaked\n */\n\nexport function loadHex(source: string, target: Uint8Array) {\n  for (const line of source.split('\\n')) {\n    if (line[0] === ':' && line.substr(7, 2) === '00') {\n      const bytes = parseInt(line.substr(1, 2), 16);\n      const addr = parseInt(line.substr(3, 4), 16);\n      for (let i = 0; i < bytes; i++) {\n        target[addr + i] = parseInt(line.substr(9 + i * 2, 2), 16);\n      }\n    }\n  }\n}","// Faster setTimeout(fn, 0) implementation using postMessage API\n// Based on https://dbaron.org/log/20100309-faster-timeouts\nexport type IMicroTaskCallback = () => void;\n\nexport class MicroTaskScheduler {\n  readonly messageName = 'zero-timeout-message';\n\n  private executionQueue: Array<IMicroTaskCallback> = [];\n  private stopped = true;\n\n  start() {\n    if (this.stopped) {\n      this.stopped = false;\n      window.addEventListener('message', this.handleMessage, true);\n    }\n  }\n\n  stop() {\n    this.stopped = true;\n    window.removeEventListener('message', this.handleMessage, true);\n  }\n\n  postTask(fn: IMicroTaskCallback) {\n    if (!this.stopped) {\n      this.executionQueue.push(fn);\n      window.postMessage(this.messageName, '*');\n    }\n  }\n\n  private handleMessage = (event: MessageEvent) => {\n    if (event.data === this.messageName) {\n      event.stopPropagation();\n      const executeJob = this.executionQueue.shift();\n      if (executeJob !== undefined) {\n        executeJob();\n      }\n    }\n  };\n}","import {\n  avrInstruction,\n  AVRTimer,\n  CPU,\n  timer0Config,\n  timer1Config,\n  AVRIOPort,\n  AVRUSART,\n  portBConfig,\n  portCConfig,\n  portDConfig,\n  usart0Config\n} from 'avr8js';\nimport { loadHex } from './intelhex';\nimport { MicroTaskScheduler } from './task-scheduler';\n\n// ATmega328p params\nconst FLASH = 0x8000;\n\nexport class AVRRunner {\n  readonly program = new Uint16Array(FLASH);\n  readonly cpu: CPU;\n  readonly timer0: AVRTimer;\n  readonly timer1: AVRTimer;\n  readonly portB: AVRIOPort;\n  readonly portC: AVRIOPort;\n  readonly portD: AVRIOPort;\n  readonly usart: AVRUSART;\n  readonly speed = 16e6; // 16 MHZ\n  readonly workUnitCycles = 500000;\n  readonly taskScheduler = new MicroTaskScheduler();\n\n  constructor(hex: string) {\n    loadHex(hex, new Uint8Array(this.program.buffer));\n    this.cpu = new CPU(this.program);\n    this.timer0 = new AVRTimer(this.cpu, timer0Config);\n    this.timer1 = new AVRTimer(this.cpu, timer1Config);\n    this.portB = new AVRIOPort(this.cpu, portBConfig);\n    this.portC = new AVRIOPort(this.cpu, portCConfig);\n    this.portD = new AVRIOPort(this.cpu, portDConfig);\n    this.usart = new AVRUSART(this.cpu, usart0Config, this.speed);\n    this.taskScheduler.start();\n  }\n\n  // CPU main loop\n  execute(callback: (cpu: CPU) => void) {\n    const cyclesToRun = this.cpu.cycles + this.workUnitCycles;\n    while (this.cpu.cycles < cyclesToRun) {\n      avrInstruction(this.cpu);\n      this.timer0.tick();\n      this.timer1.tick();\n      this.usart.tick();\n    }\n\n    callback(this.cpu);\n    this.taskScheduler.postTask(() => this.execute(callback));\n  }\n\n  stop() {\n    this.taskScheduler.stop();\n  }\n}","function zeroPad(value: number, length: number) {\n  let sval = value.toString();\n  while (sval.length < length) {\n    sval = '0' + sval;\n  }\n  return sval;\n}\n\nexport function formatTime(seconds: number) {\n  const ms = Math.floor(seconds * 1000) % 1000;\n  const secs = Math.floor(seconds % 60);\n  const mins = Math.floor(seconds / 60);\n  return `${zeroPad(mins, 2)}:${zeroPad(secs, 2)}.${zeroPad(ms, 3)}`;\n}\n\nexport function getMilliSecconds(seconds: number){\n  const ms = Math.floor(seconds * 10000) % 10000;\n  return ms/10;\n}","import { ICPU } from 'avr8js';\n\nexport class CPUPerformance {\n  private prevTime = 0;\n  private prevCycles = 0;\n  private samples = new Float32Array(64);\n  private sampleIndex = 0;\n\n  constructor(private cpu: ICPU, private MHZ: number) {}\n\n  reset() {\n    this.prevTime = 0;\n    this.prevCycles = 0;\n    this.sampleIndex = 0;\n  }\n\n  update() {\n    if (this.prevTime) {\n      const delta = performance.now() - this.prevTime;\n      const deltaCycles = this.cpu.cycles - this.prevCycles;\n      const deltaCpuMillis = 1000 * (deltaCycles / this.MHZ);\n      const factor = deltaCpuMillis / delta;\n      if (!this.sampleIndex) {\n        this.samples.fill(factor);\n      }\n      this.samples[this.sampleIndex++ % this.samples.length] = factor;\n    }\n    this.prevCycles = this.cpu.cycles;\n    this.prevTime = performance.now();\n    const avg = this.samples.reduce((x, y) => x + y) / this.samples.length;\n    return avg;\n  }\n}","const AVRJS8_EDITOR_HISTORY = 'AVRJS8_EDITOR_HISTORY';\n\nexport class EditorHistoryUtil {\n  static hasLocalStorage = !!window.localStorage;\n\n  static storeSnippet(codeSnippet: string) {\n    if (!EditorHistoryUtil.hasLocalStorage) {\n      return;\n    }\n    window.localStorage.setItem(AVRJS8_EDITOR_HISTORY, codeSnippet);\n  }\n\n  static clearSnippet() {\n    if (!EditorHistoryUtil.hasLocalStorage) {\n      return;\n    }\n    localStorage.removeItem(AVRJS8_EDITOR_HISTORY);\n  }\n\n  static getValue() {\n    if (!EditorHistoryUtil.hasLocalStorage) {\n      return;\n    }\n    return localStorage.getItem(AVRJS8_EDITOR_HISTORY);\n  }\n}\n","import '@wokwi/elements';\nimport { buildHex } from './compile';\nimport { AVRRunner } from './execute';\nimport { formatTime, getMilliSecconds } from './format-time';\nimport './index.css';\nimport { CPUPerformance } from './cpu-performance';\nimport { EditorHistoryUtil } from './utils/editor-history.util';\nimport \"./RobotEnvironment\";\nimport { ultrasonicDistance } from './RobotEnvironment';\n\nfunction toFixedNumber(num, digits, base){\n  var pow = Math.pow(base||10, digits);\n  return Math.round(num*pow) / pow;\n}\n\nlet editor: any; // eslint-disable-line @typescript-eslint/no-explicit-any\nconst BLINK_CODE = `#include <Servo.h>\n\nServo leftservo;  \nServo rightservo;  \n\n\nvoid setup() {\n    Serial.begin(115200);\n\n  leftservo.attach(9);  \n  rightservo.attach(10);\n\n}\n\nvoid loop() {\n\n    //move forward fast\n    leftservo.write(170);\n    rightservo.write(170);\n    delay(3000);\n\n    //rotate right fast\n    leftservo.write(170);\n    rightservo.write(10);\n    delay(3000);\n\n    //rotate left slowly\n    leftservo.write(90);\n    rightservo.write(120);\n    delay(3000);\n    \n    //move backward very slowly\n    leftservo.write(75);\n    rightservo.write(75);\n    delay(3000);\n}`.trim();\n\n// Load Editor\ndeclare const window: any; // eslint-disable-line @typescript-eslint/no-explicit-any\ndeclare const monaco: any; // eslint-disable-line @typescript-eslint/no-explicit-any\nwindow.require.config({\n  paths: { vs: 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.20.0/min/vs' }\n});\nwindow.require(['vs/editor/editor.main'], () => {\n  editor = monaco.editor.create(document.querySelector('.code-editor'), {\n    value: EditorHistoryUtil.getValue() || BLINK_CODE,\n    language: 'cpp',\n    minimap: { enabled: false }\n  });\n});\n\n// set up motor states\nexport let leftMotorSpeed = 0;\nexport let rightMotorSpeed = 0;\n\n\n// Set up toolbar\nlet runner: AVRRunner;\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\nconst runButton = document.querySelector('#run-button');\nrunButton.addEventListener('click', compileAndRun);\nconst stopButton = document.querySelector('#stop-button');\nstopButton.addEventListener('click', stopCode);\nconst revertButton = document.querySelector('#revert-button');\nrevertButton.addEventListener('click', setBlinkSnippet);\nconst statusLabel = document.querySelector('#status-label');\nconst compilerOutputText = document.querySelector('#compiler-output-text');\nconst serialOutputText = document.querySelector('#serial-output-text');\n\n\nlet pin9BeginningTimeOfPulse = undefined;\nlet pin9State = 0;\nlet pin10BeginningTimeOfPulse = undefined;\nlet pin10State = 0;\n\nfunction executeProgram(hex: string) {\n  runner = new AVRRunner(hex);\n  const MHZ = 16000000;\n\n\n  \n\n  //update value of sensor to A0\n  runner.cpu.writeHooks[0x7a] = (value) => {\n    if (value & (1 << 6)) {\n      runner.cpu.data[0x7a] = value & ~(1 << 6); // clear bit - conversion done\n      const analogValue = ultrasonicDistance;\n      runner.cpu.data[0x78] = analogValue & 0xff;\n      runner.cpu.data[0x79] = (analogValue >> 8) & 0x3;\n      return true; // don't update\n    }\n  }\n\n  \n\n  runner.usart.onByteTransmit = (value) => {\n    serialOutputText.textContent += String.fromCharCode(value);\n\n   \n  };\n  const cpuPerf = new CPUPerformance(runner.cpu, MHZ);\n  \n  const servoMinPulse = 0.000544;\n\n  runner.execute((cpu) => {\n    const time = formatTime(cpu.cycles / MHZ);\n    const speed = (cpuPerf.update() * 100).toFixed(0);\n    statusLabel.textContent = `Simulation time: ${time} (${speed}%)`;\n\n\n\n    // Hook to PORTB Pins 8 to 13\n  runner.portB.addListener(value => {\n    /*leftMotorSpeed = value & 0x03;\n    isleftMotorReverse = (value & 0x04) ? true : false;\n    rightMotorSpeed = (value >>> 3) & 0x03;\n    isrightMotorReverse = ((value >>> 3) & 0x04) ? true : false;\n  */\n  const D9bit = 1 << 1;\n  const D10bit = 1 << 2;\n  if(value & D9bit) \n  {\n    if(pin9BeginningTimeOfPulse == undefined || pin9State === 0 )\n      {\n        pin9BeginningTimeOfPulse = cpu.cycles;\n        pin9State = 1;\n      }\n  } \n  else\n  {\n    if(pin9State === 1)\n    {\n      //console.log(getMilliSecconds((cpu.cycles - pin9BeginningTimeOfPulse )/MHZ)-1.4);\n      pin9State = 0;\n      leftMotorSpeed = toFixedNumber(getMilliSecconds((cpu.cycles - pin9BeginningTimeOfPulse )/MHZ)-1.4, 1, 10);\n      if(leftMotorSpeed > 0.9)  leftMotorSpeed = 0.9;\n      if(leftMotorSpeed < -0.9) leftMotorSpeed = -0.9;\n    }\n  }  \n\n\n   \n  });\n\n      // Hook to PORTB Pins 8 to 13\n      runner.portB.addListener(value => {\n        /*leftMotorSpeed = value & 0x03;\n        isleftMotorReverse = (value & 0x04) ? true : false;\n        rightMotorSpeed = (value >>> 3) & 0x03;\n        isrightMotorReverse = ((value >>> 3) & 0x04) ? true : false;\n      */\n      const D9bit = 1 << 1;\n      const D10bit = 1 << 2;\n\n    \n      if(value & D10bit) \n      {\n        if(pin10BeginningTimeOfPulse == undefined || pin10State === 0 )\n          {\n            pin10BeginningTimeOfPulse = cpu.cycles;\n            pin10State = 1;\n          }\n      } \n      else\n      {\n        if(pin10State === 1)\n        {\n          //console.log(getMilliSecconds((cpu.cycles - pin10BeginningTimeOfPulse )/MHZ)-1.4);\n          pin10State = 0;\n          rightMotorSpeed = toFixedNumber(getMilliSecconds((cpu.cycles - pin10BeginningTimeOfPulse )/MHZ)-1.4, 1, 10);\n          if(rightMotorSpeed > 0.9)  rightMotorSpeed = 0.9;\n          if(rightMotorSpeed < -0.9) rightMotorSpeed = -0.9;\n        }\n      }  \n      //leftMotorSpeed = (value & D9bit) ? 5 : 0;\n      //rightMotorSpeed = (value & D10bit) ? 5 : 0;\n       \n      });\n  });\n}\n\n\n\n\nasync function compileAndRun() {\n  \n\n  storeUserSnippet();\n\n  runButton.setAttribute('disabled', '1');\n  revertButton.setAttribute('disabled', '1');\n\n  serialOutputText.textContent = '';\n  try {\n    statusLabel.textContent = 'Compiling...';\n    const result = await buildHex(editor.getModel().getValue());\n    compilerOutputText.textContent = result.stderr || result.stdout;\n    if (result.hex) {\n      compilerOutputText.textContent += '\\nProgram running...';\n      stopButton.removeAttribute('disabled');\n      executeProgram(result.hex);\n    } else {\n      runButton.removeAttribute('disabled');\n    }\n  } catch (err) {\n    runButton.removeAttribute('disabled');\n    revertButton.removeAttribute('disabled');\n    alert('Failed: ' + err);\n  } finally {\n    statusLabel.textContent = '';\n  }\n}\n\nfunction storeUserSnippet() {\n  EditorHistoryUtil.clearSnippet();\n  EditorHistoryUtil.storeSnippet(editor.getValue());\n}\n\nfunction stopCode() {\n  stopButton.setAttribute('disabled', '1');\n  runButton.removeAttribute('disabled');\n  revertButton.removeAttribute('disabled');\n  if (runner) {\n    runner.stop();\n    runner = null;\n    leftMotorSpeed = 0;\n    rightMotorSpeed = 0;\n    \n  }\n}\n\nfunction setBlinkSnippet() {\n  editor.setValue(BLINK_CODE);\n  EditorHistoryUtil.storeSnippet(editor.getValue());\n}\n\n","import * as Matter from \"matter-js\";\n\n\n\n///\n///\t\t\t\tcode by Isaiah Smith\n///\t\ttechnostalgic.itch.io  |  @technostalgicGM\n///\n///\t\t\t\t\t\trepo:\n///\thttps://github.com/Technostalgic/MatterJS_Raycast.git\n///\n\n\n//raycast functionality integrated with matter.js since there \n//is no built-in method for raycasting that returns the ray's\n//intersection points\n\n//function 'raycast' - returns an array of 'raycol' objects\n//param 'bodies' - bodies to check collision with; passed \n//\tthrough 'Matter.Query.ray()'\n//param 'start' - start point of raycast\n//param 'end' - end point of raycast\n//param 'sort' - whether or not the ray collisions should be\n//\tsorted based on distance from the origin\nexport function raycast(bodies, start, end, sort = true){\n\t//convert the start & end parameters to my custom\n\t//'vec2' object type\n\tstart = vec2.fromOther(start);\n\tend = vec2.fromOther(end);\n\t\n\t//The bodies that the raycast will be tested against\n\t//are queried and stored in the variable 'query'.\n\t//This uses the built-in raycast method which takes\n\t//advantage of the broad-phase collision optomizations\n\t//instead of iterating through each body in the list\n\tvar query = Matter.Query.ray(bodies, start, end);\n\t\n\t//'cols': the array that will contain the ray \n\t//collision information\n\tvar cols = [];\n\t//'raytest': the ray object that will be tested for\n\t//collision against the bodies\n\tvar raytest = new ray(start, end);\n\t\n\t//Next, since all the bodies that the ray collides with\n\t//have already been queried, we iterate through each\n\t//one to see where the ray intersects with the body\n\t//and gather other information\n\tfor(var i = query.length - 1; i >= 0; i--){\n\t\tvar bcols = ray.bodyCollisions(raytest, query[i].body);\n\t\tfor(var k = bcols.length - 1; k >= 0; k--){\n\t\t\tcols.push(bcols[k]);\n\t\t}\n\t}\n\t\n\t//if desired, we then sort the collisions based on the\n\t//distance from the ray's start\n\tif(sort)\n\t\tcols.sort(function(a,b){\n\t\t\treturn a.point.distance(start) - b.point.distance(start);\n\t\t});\n\t\n\treturn cols;\n}\n\n//data type that contains information about an intersection \n//between a ray and a body\nclass raycol{\n\t//initailizes a 'raycol' object with the given data\n\t//param 'body' - stores the body that the ray has \n\t//\tcollided with\n\t//param 'point' - stores the collision point\n\t//param 'normal' - stores the normal of the edge that\n\t//\tthe ray collides with\n\t//param 'verts' - stores the vertices of the edge that\n\t//\tthe ray collides with\n\tconstructor(body, point, normal, verts){\n\t\tthis.body = body;\n\t\tthis.point = point;\n\t\tthis.normal = normal;\n\t\tthis.verts = verts;\n\t}\n}\n\n//data type that contains information and methods for a \n//ray object\nclass ray{\n\t//initializes a ray instance with the given parameters\n\t//param 'start' - the starting point of the ray\n\t//param 'end' - the ending point of the ray\n\tconstructor(start, end){\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t}\n\t\n\tyValueAt(x){\n\t\t//returns the y value on the ray at the specified x\n\t\t//slope-intercept form:\n\t\t//y = m * x + b\n\t\treturn this.offsetY + this.slope * x; \n\t} \n\txValueAt(y){\n\t\t//returns the x value on the ray at the specified y\n\t\t//slope-intercept form:\n\t\t//x = (y - b) / m\n\t\treturn (y - this.offsetY) / this.slope;\n\t}\n\t\n\tpointInBounds(point){\n\t\t//checks to see if the specified point is within\n\t\t//the ray's bounding box (inclusive)\n\t\tvar minX = Math.min(this.start.x, this.end.x);\n\t\tvar maxX = Math.max(this.start.x, this.end.x);\n\t\tvar minY = Math.min(this.start.y, this.end.y);\n\t\tvar maxY = Math.max(this.start.y, this.end.y);\n\t\treturn (\n\t\t\tpoint.x >= minX &&\n\t\t\tpoint.x <= maxX &&\n\t\t\tpoint.y >= minY &&\n\t\t\tpoint.y <= maxY );\n\t}\n\tcalculateNormal(ref){\n\t\t//calulates the normal based on a specified\n\t\t//reference point\n\t\tvar dif = this.difference;\n\t\t\n\t\t//gets the two possible normals as points that lie\n\t\t//perpendicular to the ray\n\t\tvar norm1 = dif.normalized().rotate(Math.PI / 2);\n\t\tvar norm2 = dif.normalized().rotate(Math.PI / -2);\n\t\t\n\t\t//returns the normal that is closer to the provided\n\t\t//reference point\n\t\tif(this.start.plus(norm1).distance(ref) < this.start.plus(norm2).distance(ref))\n\t\t\treturn norm1;\n\t\treturn norm2;\n\t}\n\t\n\tget difference(){\n\t\t//pretty self explanitory\n\t\treturn this.end.minus(this.start);\n\t}\n\tget slope(){\n\t\tvar dif = this.difference;\n\t\treturn dif.y / dif.x;\n\t}\t\n\tget offsetY(){\n\t\t//the y-offset at x = 0, in slope-intercept form:\n\t\t//b = y - m * x\n\t\t//offsetY = start.y - slope * start.x\n\t\treturn this.start.y - this.slope * this.start.x;\n\t}\n\tget isHorizontal(){ return compareNum(this.start.y, this.end.y); }\n\tget isVertical(){ return compareNum(this.start.x, this.end.x); }\n\t\n\tstatic intersect(rayA, rayB){\n\t\t//returns the intersection point between two rays\n\t\t//null if no intersection\n\t\t\n\t\t//conditional checks for axis aligned rays\n\t\tif(rayA.isVertical && rayB.isVertical) return null;\n\t\tif(rayA.isVertical) return new vec2(rayA.start.x, rayB.yValueAt(rayA.start.x));\n\t\tif(rayB.isVertical) return new vec2(rayB.start.x, rayA.yValueAt(rayB.start.x));\n\t\tif(compareNum(rayA.slope, rayB.slope)) return null;\n\t\tif(rayA.isHorizontal) return new vec2(rayB.xValueAt(rayA.start.y), rayA.start.y);\n\t\tif(rayB.isHorizontal) return new vec2(rayA.xValueAt(rayB.start.y), rayB.start.y);\n\t\t\n\t\t//slope intercept form:\n\t\t//y1 = m2 * x + b2; where y1 = m1 * x + b1:\n\t\t//m1 * x + b1 = m2 * x + b2:\n\t\t//x = (b2 - b1) / (m1 - m2)\n\t\tvar x = (rayB.offsetY - rayA.offsetY) / (rayA.slope - rayB.slope)\n\t\treturn new vec2(x, rayA.yValueAt(x));\n\t}\n\tstatic collisionPoint(rayA, rayB){\n\t\t//returns the collision point of two rays\n\t\t//null if no collision\n\t\tvar intersection = ray.intersect(rayA, rayB);\n\t\tif(!intersection) return null;\n\t\tif(!rayA.pointInBounds(intersection)) return null;\n\t\tif(!rayB.pointInBounds(intersection)) return null;\n\t\treturn intersection;\n\t}\n\tstatic bodyEdges(body){\n\t\t//returns all of the edges of a body in the\n\t\t//form of an array of ray objects\n\t\tvar r = [];\n\t\tfor (var i = body.parts.length - 1; i >= 0; i--){\n\t\t\tfor(var k = body.parts[i].vertices.length - 1; k >= 0; k--){\n\t\t\t\tvar k2 = k + 1;\n\t\t\t\tif(k2 >= body.parts[i].vertices.length)\n\t\t\t\t\tk2 = 0;\n\t\t\t\tvar tray = new ray(\n\t\t\t\t\tvec2.fromOther(body.parts[i].vertices[k]) , \n\t\t\t\t\tvec2.fromOther(body.parts[i].vertices[k2]) );\n\t\t\t\t\n\t\t\t\t//stores the vertices inside the edge\n\t\t\t\t//ray for future reference\n\t\t\t\ttray.verts = [\n\t\t\t\t\tbody.parts[i].vertices[k] , \n\t\t\t\t\tbody.parts[i].vertices[k2] ];\n\t\t\t\t\n\t\t\t\tr.push(tray);\n\t\t\t}\n\t\t}\n\t\treturn r;\n\t}\n\tstatic bodyCollisions(rayA, body){\n\t\t//returns all the collisions between a specified ray\n\t\t//and body in the form of an array of 'raycol' objects\n\t\tvar r = [];\n\t\t\n\t\t//gets the edge rays from the body\n\t\tvar edges = ray.bodyEdges(body);\n\t\t\n\t\t//iterates through each edge and tests for collision\n\t\t//with 'rayA'\n\t\tfor(var i = edges.length - 1; i >= 0; i--){\n\t\t\t//gets the collision point\n\t\t\tvar colpoint = ray.collisionPoint(rayA, edges[i]);\n\t\t\t\n\t\t\t//if there is no collision, then go to next edge\n\t\t\tif(!colpoint) continue;\n\t\t\t\n\t\t\t//calculates the edge's normal\n\t\t\tvar normal = edges[i].calculateNormal(rayA.start);\n\t\t\t\n\t\t\t//adds the ray collision to the return array\n\t\t\tr.push(new raycol(body, colpoint, normal, edges[i].verts));\n\t\t}\n\t\t\n\t\treturn r;\n\t}\n}\n\n//in order to avoid miscalculations due to floating point\n//errors\n//example:\n//\tvar m = 6; m -= 1; m -= 3; m += 4\n//\tnow 'm' probably equals 6.0000000008361 or something stupid\nfunction compareNum(a, b, leniency = 0.00001){\n\treturn Math.abs(b - a) <= leniency;\n}\n\n//\n//included external dependencies:\n//\n//2d vector data type; contains information and methods for\n//2-dimensional vectors\nclass vec2{\n    //initailizes a 'vec2' object with specified values\n    constructor(x = 0, y = x){\n        this.x = x;\n        this.y = y;\n    }\n   \n    normalized(magnitude = 1){\n        //returns a vector 2 with the same direction as this but\n        //with a specified magnitude\n        return this.multiply(magnitude / this.distance());\n    }\n    get inverted(){\n        //returns the opposite of this vector\n        return this.multiply(-1);\n    }\n    multiply(factor){\n        //returns this multiplied by a specified factor    \n        return new vec2(this.x * factor, this.y * factor);\n    }\n    plus(vec){\n        //returns the result of this added to another\n        //specified 'vec2' object\n        return new vec2(this.x + vec.x, this.y + vec.y);\n    }\n    minus(vec){\n        //returns the result of this subtracted by another\n        //specified 'vec2' object\n        return this.plus(vec.inverted);\n    }\n    rotate(rot){\n        //rotates the vector by the specified angle\n        var ang = this.direction;\n        var mag = this.distance();\n        ang += rot;\n        return vec2.fromAng(ang, mag)\n    }\n    toPhysVector(){\n        //converts this to a vector compatible with the\n        //matter.js physics engine\n        return Matter.Vector.create(this.x, this.y);\n    }\n   \n    get direction(){\n        //returns the angle this vector is pointing in radians\n        return Math.atan2(this.y, this.x);\n    }\n    distance(vec = new vec2()){\n        //returns the distance between this and a specified\n        //'vec2' object\n        var d = Math.sqrt(\n            Math.pow(this.x - vec.x, 2) +\n            Math.pow(this.y - vec.y, 2));\n        return d;\n    }\n   \n    clone(){\n        //returns a new instance of a 'vec2' object with the\n        //same value\n        return new vec2(this.x, this.y);\n    }\n    static fromAng(angle, magnitude = 1){\n        //returns a vector which points in the specified angle\n        //and has the specified magnitude\n        return new vec2(\n            Math.cos(angle) * magnitude,\n            Math.sin(angle) * magnitude);\n    }\n    static fromOther(vector){\n        //converts other data types that contain 'x' and 'y'\n        //properties to a 'vec2' object type\n        return new vec2(vector.x, vector.y);\n    }\n   \n    toString(){\n        return \"vector<\" + this.x + \", \" + this.y + \">\";\n    }\n}","import {Vertices, Engine, Render, Bodies, World, Body, Events, Mouse, MouseConstraint, Composites, Composite, Vector} from \"matter-js\";\nimport {leftMotorSpeed, isleftMotorReverse, rightMotorSpeed, isrightMotorReverse } from \"./index.ts\"\nimport {raycast} from './raycast_es6'\n\nexport let ultrasonicDistance = 400;\n\nvar myCanvas = document.getElementById('world');\n\n\nvar engine = Engine.create();\nengine.world.gravity.y = 0;\n\nvar render = Render.create({\n  canvas: myCanvas,\n  engine: engine,\n  options: {\n    width: 800,\n    height: 800,\n    wireframes: false\n  }\n});\n\nvar topWall = Bodies.rectangle(300, 50, 500, 20, { isStatic: true });\ntopWall.label = \"topwall\";\n\nvar rightWall = Bodies.rectangle(750, 450, 20, 720, { isStatic: true });\nrightWall.label = \"rightwall\";\n\nvar wheel1 = Bodies.rectangle(40, 232, 20, 6);\nvar robotBody = Bodies.rectangle(50, 250, 50, 30 );\nvar wheel2 = Bodies.rectangle(40, 268, 20, 5);\n\n\n\nvar sensor2 = createPartCircle(65,108, 50,200, -0,{});//, {chamfer: { radius: [0, 100, 0] }});\nBody.setAngle(sensor2, -3*Math.PI/8)\n\nsensor2.isSensor = true;\nsensor2.render.opacity = 0.2;\nBody.setMass(sensor2, 0);\nBody.setInertia(sensor2, 0);\nsensor2.area = 0;\n\nvar robot = Body.create({parts: [wheel1, robotBody, wheel2, sensor2]});\n\nBody.setAngle(robot, 1.7);\nvar sensor =   Bodies.rectangle(400, 200, 150, 150, { \n  chamfer: { radius: [140, 0, 20, 0] }\n});\n\nBody.setAngle(sensor, 0.785398);\n\nBody.setMass(robot, 1000);\nrobot.friction = 0.9;\nrobot.frictionAir = 0.5;\nBody.setPosition(robot, {x: 200, y: 400});\n\n//add obstacle\nvar obstacle = Bodies.circle(200, 200, 50);\nBody.setMass(obstacle, 100000000);  //make it very heavy\n\n\nWorld.add(engine.world, [topWall, rightWall, robot, obstacle]);\n\nvar obstacles = [topWall, rightWall, obstacle]\n\n\nEngine.run(engine);\nRender.run(render);\n\n\n\nEvents.on(engine, \"afterUpdate\", function(event) {\n    \n    //console.log(robot.position);\n    const multiplier = 0.005;\n    const angle = robot.angle;\n   \n    const left = getTranformedPointOfBody(robot, 0, -20);\n    const right = getTranformedPointOfBody(robot, 0, 20);\n    \n    \n\n    let leftWheelForce = {x: Math.cos(angle)*multiplier*leftMotorSpeed*left.x, y : Math.sin(angle)*multiplier*leftMotorSpeed*left.y};\n    let rightWheelForce = {x: Math.cos(angle)*multiplier*rightMotorSpeed*right.x, y : Math.sin(angle)*multiplier*rightMotorSpeed*right.y};\n    \n    Body.applyForce(robot, {x: left.x, y: left.y}, leftWheelForce);\n    Body.applyForce(robot, {x: right.x, y: right.y},rightWheelForce);\n    console.log(leftMotorSpeed, rightMotorSpeed);\n   /* if (event.timestamp % 5000 < 50)\n        console.log(robot.position)*/\n});\n\n    // add mouse control\n    var mouse = Mouse.create(render.canvas),\n        mouseConstraint = MouseConstraint.create(engine, {\n            mouse: mouse,\n            constraint: {\n                stiffness: 0.2,\n                render: {\n                    visible: false\n                }\n            }\n        });\n\n    World.add(engine.world, mouseConstraint);\n\n    // keep the mouse in sync with rendering\n    render.mouse = mouse;\n\n    render.options.showCollisions = true;\n    render.options.showSeparations =  true;\n\n\n\n\nEvents.on(engine, 'collisionActive', function(event) {\n\n  const sensorStartingPoint = getTranformedPointOfBody(robot, 15, -10)\n  \n  const startingAngle = robot.angle - Math.PI/2 + Math.PI/8;\n\n  ultrasonicDistance = findMinimumDistanceToObstacle(sensorStartingPoint, startingAngle, 200, obstacles);\n \n});\n\n\nEvents.on(engine, 'collisionEnd', function(event) {\n  ultrasonicDistance = 400;\n  \n});\n\n\nconst resetCarButton = document.querySelector('#reset-car');\nresetCarButton.addEventListener('click', function(){\n    Body.setPosition(robot, {x: 200, y: 200});\n    Body.setAngle(robot, 0);\n});\n\n\n\nfunction getTranformedPointOfBody(body, offsetx, offsety)\n{\n  const angle = body.angle;\n  const x = body.position.x;\n  const y = body.position.y;\n  //get center position wrt axis of the robot\n  const xprime = x*Math.cos(angle) + y*Math.sin(angle);\n  const yprime = -x*Math.sin(angle) + y*Math.cos(angle);\n\n  //get value of xprime - w and yprime += h in game axis\n  const w = offsetx;\n  const h = offsety;\n  return {\n    x: (xprime+w)*Math.cos(angle) - (yprime+h)*Math.sin(angle),\n    y: (yprime+h)*Math.cos(angle)+(xprime+w)*Math.sin(angle)\n  }\n\n\n}\n\n\n\nfunction getTranformedPoint(position, angle, offsetx, offsety)\n{\n  const x = position.x;\n  const y = position.y;\n  //get center position wrt axis of the robot\n  const xprime = x*Math.cos(angle) + y*Math.sin(angle);\n  const yprime = -x*Math.sin(angle) + y*Math.cos(angle);\n\n  //get value of xprime - w and yprime += h in game axis\n  const w = offsetx;\n  const h = offsety;\n  return {\n    x: (xprime+w)*Math.cos(angle) - (yprime+h)*Math.sin(angle),\n    y: (yprime+h)*Math.cos(angle)+(xprime+w)*Math.sin(angle)\n  }\n\n\n}\n\n\n\n\n\nfunction commonExtend(obj, deep) {\n  var argsStart,\n      args,\n      deepClone;\n\n  if (typeof deep === 'boolean') {\n      argsStart = 2;\n      deepClone = deep;\n  } else {\n      argsStart = 1;\n      deepClone = true;\n  }\n\n  for (var i = argsStart; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      if (source) {\n          for (var prop in source) {\n              if (deepClone && source[prop] && source[prop].constructor === Object) {\n                  if (!obj[prop] || obj[prop].constructor === Object) {\n                      obj[prop] = obj[prop] || {};\n                      commonExtend(obj[prop], deepClone, source[prop]);\n                  } else {\n                      obj[prop] = source[prop];\n                  }\n              } else {\n                  obj[prop] = source[prop];\n              }\n          }\n      }\n  }\n  \n  return obj;\n};\n\n\n\nfunction createPartCircle(x, y, sides, radius, angleOffset, options) {\n  options = options || {};\n\n  var path = '';\n  path +=  x.toFixed(3) + ' ' + y.toFixed(3) + ' '\n  var offset = -Math.PI/(4*sides);\n  for(var i = 0; i < sides; i += 1)\n  {\n    var angle = angleOffset+ i*offset;\n    const newPoint = getTranformedPoint({x:x, y:y}, angle, radius, 0);\n    path += newPoint.x.toFixed(3) + ' ' + newPoint.y.toFixed(3) + ' ';\n  }\n\n  var polygon = { \n      label: 'Polygon Body',\n      position: { x: x, y: y },\n      vertices: Vertices.fromPath(path)\n  };\n\n  if (options.chamfer) {\n      var chamfer = options.chamfer;\n      polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n          chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n      delete options.chamfer;\n  }\n\n  return Body.create(commonExtend({}, polygon, options));\n};\n\n\n\nfunction findMinimumDistanceToObstacle(startingPosition,startingAngle, radius, obstacles:Array<Body>)\n{\n    let minDistance = radius + 10000;\n   \n    const numberOfRays = 45;\n\n    for(var i =0; i < numberOfRays; i+=1)\n    {\n      const endPoint = getTranformedPoint(startingPosition, startingAngle-i*Math.PI/180, 220,0);\n      //var newBody =  Bodies.circle(endPoint.x, endPoint.y, 5,{isSensor : true, label:\"test\"});\n        //World.add(engine.world, [newBody]);\n      var rays = raycast(obstacles,startingPosition, endPoint, true);\n      if(rays.length != 0)\n      {\n        const nearestPoint = rays[0].point;\n        \n        const distance = Math.sqrt((nearestPoint.x-startingPosition.x)*(nearestPoint.x-startingPosition.x)+\n                                   (nearestPoint.y-startingPosition.y)*(nearestPoint.y-startingPosition.y));\n        if(distance < minDistance)  minDistance = distance;\n      }\n    }\n\n    return minDistance;\n    \n}\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}